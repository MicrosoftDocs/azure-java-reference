### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.ISessionToken"
  id: "ISessionToken"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.ISessionToken.PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  - "com.azure.cosmos.internal.ISessionToken.convertToString()"
  - "com.azure.cosmos.internal.ISessionToken.getLSN()"
  - "com.azure.cosmos.internal.ISessionToken.isValid(com.azure.cosmos.internal.ISessionToken)"
  - "com.azure.cosmos.internal.ISessionToken.merge(com.azure.cosmos.internal.ISessionToken)"
  langs:
  - "java"
  name: "ISessionToken"
  nameWithType: "ISessionToken"
  fullName: "com.azure.cosmos.internal.ISessionToken"
  type: "Interface"
  package: "com.azure.cosmos.internal"
  summary: "Models session token. We make assumption that instances of this interface are immutable (read only after they are constructed), so if you want to change this behaviour please review all of its uses and make sure that mutability doesn't break anything."
  syntax:
    content: "public interface ISessionToken"
- uid: "com.azure.cosmos.internal.ISessionToken.PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  id: "PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  parent: "com.azure.cosmos.internal.ISessionToken"
  langs:
  - "java"
  name: "PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  nameWithType: "ISessionToken.PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  fullName: "com.azure.cosmos.internal.ISessionToken.PARTITION_KEY_RANGE_SESSION_SEPARATOR"
  type: "Field"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static final String PARTITION_KEY_RANGE_SESSION_SEPARATOR"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.ISessionToken.convertToString()"
  id: "convertToString()"
  parent: "com.azure.cosmos.internal.ISessionToken"
  langs:
  - "java"
  name: "convertToString()"
  nameWithType: "ISessionToken.convertToString()"
  fullName: "com.azure.cosmos.internal.ISessionToken.convertToString()"
  overload: "com.azure.cosmos.internal.ISessionToken.convertToString*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public abstract String convertToString()"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.ISessionToken.getLSN()"
  id: "getLSN()"
  parent: "com.azure.cosmos.internal.ISessionToken"
  langs:
  - "java"
  name: "getLSN()"
  nameWithType: "ISessionToken.getLSN()"
  fullName: "com.azure.cosmos.internal.ISessionToken.getLSN()"
  overload: "com.azure.cosmos.internal.ISessionToken.getLSN*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public abstract long getLSN()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ISessionToken.isValid(com.azure.cosmos.internal.ISessionToken)"
  id: "isValid(com.azure.cosmos.internal.ISessionToken)"
  parent: "com.azure.cosmos.internal.ISessionToken"
  langs:
  - "java"
  name: "isValid(ISessionToken other)"
  nameWithType: "ISessionToken.isValid(ISessionToken other)"
  fullName: "com.azure.cosmos.internal.ISessionToken.isValid(ISessionToken other)"
  overload: "com.azure.cosmos.internal.ISessionToken.isValid*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Returns true if this instance of session token is valid with respect to `other` session token. This is used to decide if the client can accept server's response (based on comparison between client's and server's session token)"
  syntax:
    content: "public abstract boolean isValid(ISessionToken other)"
    parameters:
    - id: "other"
      type: "com.azure.cosmos.internal.ISessionToken"
      description: "SESSION token to validate"
    return:
      type: "boolean"
      description: "true if this instance of session  token is valid with respect to <code>other</code> session token;\n false otherwise"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.internal.ISessionToken.merge(com.azure.cosmos.internal.ISessionToken)"
  id: "merge(com.azure.cosmos.internal.ISessionToken)"
  parent: "com.azure.cosmos.internal.ISessionToken"
  langs:
  - "java"
  name: "merge(ISessionToken other)"
  nameWithType: "ISessionToken.merge(ISessionToken other)"
  fullName: "com.azure.cosmos.internal.ISessionToken.merge(ISessionToken other)"
  overload: "com.azure.cosmos.internal.ISessionToken.merge*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Returns a new instance of session token obtained by merging this session token with the given session token `other`. Merge is commutative operation, so a.Merge(b).Equals(b.Merge(a))"
  syntax:
    content: "public abstract ISessionToken merge(ISessionToken other)"
    parameters:
    - id: "other"
      type: "com.azure.cosmos.internal.ISessionToken"
      description: "Other session token to merge"
    return:
      type: "com.azure.cosmos.internal.ISessionToken"
      description: "Instance of merged session token"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
references:
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.ISessionToken.isValid*"
  name: "isValid"
  nameWithType: "ISessionToken.isValid"
  fullName: "com.azure.cosmos.internal.ISessionToken.isValid"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionToken.merge*"
  name: "merge"
  nameWithType: "ISessionToken.merge"
  fullName: "com.azure.cosmos.internal.ISessionToken.merge"
  package: "com.azure.cosmos.internal"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.internal.ISessionToken.getLSN*"
  name: "getLSN"
  nameWithType: "ISessionToken.getLSN"
  fullName: "com.azure.cosmos.internal.ISessionToken.getLSN"
  package: "com.azure.cosmos.internal"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.ISessionToken.convertToString*"
  name: "convertToString"
  nameWithType: "ISessionToken.convertToString"
  fullName: "com.azure.cosmos.internal.ISessionToken.convertToString"
  package: "com.azure.cosmos.internal"
