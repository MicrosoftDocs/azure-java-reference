### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  id: "SignalRWebSocketListener"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing(okhttp3.WebSocket,int,java.lang.String)"
  - "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
  - "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage(okhttp3.WebSocket,java.lang.String)"
  - "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen(okhttp3.WebSocket,okhttp3.Response)"
  langs:
  - "java"
  name: "OkHttpWebSocketWrapper.SignalRWebSocketListener"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: "private class OkHttpWebSocketWrapper.SignalRWebSocketListener extends WebSocketListener"
  inheritance:
  - "java.lang.Object"
  - "okhttp3.WebSocketListener"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "okhttp3.WebSocketListener.onClosed(okhttp3.WebSocket,int,java.lang.String)"
  - "okhttp3.WebSocketListener.onClosing(okhttp3.WebSocket,int,java.lang.String)"
  - "okhttp3.WebSocketListener.onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
  - "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,java.lang.String)"
  - "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,okio.ByteString)"
  - "okhttp3.WebSocketListener.onOpen(okhttp3.WebSocket,okhttp3.Response)"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener()"
  id: "SignalRWebSocketListener()"
  parent: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  langs:
  - "java"
  name: "SignalRWebSocketListener()"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener()"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener()"
  overload: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: "private SignalRWebSocketListener()"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing(okhttp3.WebSocket,int,java.lang.String)"
  id: "onClosing(okhttp3.WebSocket,int,java.lang.String)"
  parent: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  langs:
  - "java"
  name: "onClosing(WebSocket webSocket, int code, String reason)"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing(WebSocket webSocket, int code, String reason)"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing(WebSocket webSocket, int code, String reason)"
  overload: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void onClosing(WebSocket webSocket, int code, String reason)"
    parameters:
    - id: "webSocket"
      type: "okhttp3.WebSocket"
    - id: "code"
      type: "int"
    - id: "reason"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
  id: "onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
  parent: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  langs:
  - "java"
  name: "onFailure(WebSocket webSocket, Throwable t, Response response)"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure(WebSocket webSocket, Throwable t, Response response)"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure(WebSocket webSocket, Throwable t, Response response)"
  overload: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void onFailure(WebSocket webSocket, Throwable t, Response response)"
    parameters:
    - id: "webSocket"
      type: "okhttp3.WebSocket"
    - id: "t"
      type: "java.lang.Throwable"
    - id: "response"
      type: "okhttp3.Response"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage(okhttp3.WebSocket,java.lang.String)"
  id: "onMessage(okhttp3.WebSocket,java.lang.String)"
  parent: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  langs:
  - "java"
  name: "onMessage(WebSocket webSocket, String message)"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage(WebSocket webSocket, String message)"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage(WebSocket webSocket, String message)"
  overload: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void onMessage(WebSocket webSocket, String message)"
    parameters:
    - id: "webSocket"
      type: "okhttp3.WebSocket"
    - id: "message"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen(okhttp3.WebSocket,okhttp3.Response)"
  id: "onOpen(okhttp3.WebSocket,okhttp3.Response)"
  parent: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener"
  langs:
  - "java"
  name: "onOpen(WebSocket webSocket, Response response)"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen(WebSocket webSocket, Response response)"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen(WebSocket webSocket, Response response)"
  overload: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void onOpen(WebSocket webSocket, Response response)"
    parameters:
    - id: "webSocket"
      type: "okhttp3.WebSocket"
    - id: "response"
      type: "okhttp3.Response"
references:
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener*"
  name: "SignalRWebSocketListener"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.SignalRWebSocketListener"
  package: "com.microsoft.signalr"
- uid: "okhttp3.WebSocket"
  spec.java:
  - uid: "okhttp3.WebSocket"
    name: "WebSocket"
    fullName: "okhttp3.WebSocket"
- uid: "okhttp3.Response"
  spec.java:
  - uid: "okhttp3.Response"
    name: "Response"
    fullName: "okhttp3.Response"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen*"
  name: "onOpen"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onOpen"
  package: "com.microsoft.signalr"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage*"
  name: "onMessage"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onMessage"
  package: "com.microsoft.signalr"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing*"
  name: "onClosing"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onClosing"
  package: "com.microsoft.signalr"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure*"
  name: "onFailure"
  nameWithType: "OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure"
  fullName: "com.microsoft.signalr.OkHttpWebSocketWrapper.SignalRWebSocketListener.onFailure"
  package: "com.microsoft.signalr"
- uid: "okhttp3.WebSocketListener"
  name: "WebSocketListener"
  nameWithType: "WebSocketListener"
  fullName: "okhttp3.WebSocketListener"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "okhttp3.WebSocketListener.onOpen(okhttp3.WebSocket,okhttp3.Response)"
  name: "WebSocketListener.onOpen(WebSocket,Response)"
  nameWithType: "WebSocketListener.onOpen(WebSocket,Response)"
  fullName: "okhttp3.WebSocketListener.onOpen(okhttp3.WebSocket,okhttp3.Response)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "okhttp3.WebSocketListener.onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
  name: "WebSocketListener.onFailure(WebSocket,Throwable,Response)"
  nameWithType: "WebSocketListener.onFailure(WebSocket,Throwable,Response)"
  fullName: "okhttp3.WebSocketListener.onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "okhttp3.WebSocketListener.onClosed(okhttp3.WebSocket,int,java.lang.String)"
  name: "WebSocketListener.onClosed(WebSocket,int,String)"
  nameWithType: "WebSocketListener.onClosed(WebSocket,int,String)"
  fullName: "okhttp3.WebSocketListener.onClosed(okhttp3.WebSocket,int,java.lang.String)"
- uid: "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,java.lang.String)"
  name: "WebSocketListener.onMessage(WebSocket,String)"
  nameWithType: "WebSocketListener.onMessage(WebSocket,String)"
  fullName: "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,java.lang.String)"
- uid: "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,okio.ByteString)"
  name: "WebSocketListener.onMessage(WebSocket,ByteString)"
  nameWithType: "WebSocketListener.onMessage(WebSocket,ByteString)"
  fullName: "okhttp3.WebSocketListener.onMessage(okhttp3.WebSocket,okio.ByteString)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "okhttp3.WebSocketListener.onClosing(okhttp3.WebSocket,int,java.lang.String)"
  name: "WebSocketListener.onClosing(WebSocket,int,String)"
  nameWithType: "WebSocketListener.onClosing(WebSocket,int,String)"
  fullName: "okhttp3.WebSocketListener.onClosing(okhttp3.WebSocket,int,java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
