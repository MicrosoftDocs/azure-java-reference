### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.HubConnection.ConnectionState"
  id: "ConnectionState"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState(com.microsoft.signalr.HubConnection)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation(com.microsoft.signalr.InvocationRequest)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations(java.lang.Exception)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation(java.lang.String)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId()"
  - "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes(java.lang.String)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType(java.lang.String)"
  - "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation(java.lang.String)"
  langs:
  - "java"
  name: "HubConnection.ConnectionState"
  nameWithType: "HubConnection.ConnectionState"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: "private final class HubConnection.ConnectionState implements InvocationBinder"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.signalr.InvocationBinder"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState(com.microsoft.signalr.HubConnection)"
  id: "ConnectionState(com.microsoft.signalr.HubConnection)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "ConnectionState(HubConnection connection)"
  nameWithType: "HubConnection.ConnectionState.ConnectionState(HubConnection connection)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState(HubConnection connection)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: "public ConnectionState(HubConnection connection)"
    parameters:
    - id: "connection"
      type: "com.microsoft.signalr.HubConnection"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation(com.microsoft.signalr.InvocationRequest)"
  id: "addInvocation(com.microsoft.signalr.InvocationRequest)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "addInvocation(InvocationRequest irq)"
  nameWithType: "HubConnection.ConnectionState.addInvocation(InvocationRequest irq)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation(InvocationRequest irq)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void addInvocation(InvocationRequest irq)"
    parameters:
    - id: "irq"
      type: "com.microsoft.signalr.InvocationRequest"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations(java.lang.Exception)"
  id: "cancelOutstandingInvocations(java.lang.Exception)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "cancelOutstandingInvocations(Exception ex)"
  nameWithType: "HubConnection.ConnectionState.cancelOutstandingInvocations(Exception ex)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations(Exception ex)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void cancelOutstandingInvocations(Exception ex)"
    parameters:
    - id: "ex"
      type: "java.lang.Exception"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation(java.lang.String)"
  id: "getInvocation(java.lang.String)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "getInvocation(String id)"
  nameWithType: "HubConnection.ConnectionState.getInvocation(String id)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation(String id)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public InvocationRequest getInvocation(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "com.microsoft.signalr.InvocationRequest"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId()"
  id: "getNextInvocationId()"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "getNextInvocationId()"
  nameWithType: "HubConnection.ConnectionState.getNextInvocationId()"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId()"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getNextInvocationId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes(java.lang.String)"
  id: "getParameterTypes(java.lang.String)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "getParameterTypes(String methodName)"
  nameWithType: "HubConnection.ConnectionState.getParameterTypes(String methodName)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes(String methodName)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public List<Class<?>> getParameterTypes(String methodName)"
    parameters:
    - id: "methodName"
      type: "java.lang.String"
    return:
      type: "java.util.List<java.lang.Class<?>>"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType(java.lang.String)"
  id: "getReturnType(java.lang.String)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "getReturnType(String invocationId)"
  nameWithType: "HubConnection.ConnectionState.getReturnType(String invocationId)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType(String invocationId)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Class<?> getReturnType(String invocationId)"
    parameters:
    - id: "invocationId"
      type: "java.lang.String"
    return:
      type: "java.lang.Class<?>"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation(java.lang.String)"
  id: "tryRemoveInvocation(java.lang.String)"
  parent: "com.microsoft.signalr.HubConnection.ConnectionState"
  langs:
  - "java"
  name: "tryRemoveInvocation(String id)"
  nameWithType: "HubConnection.ConnectionState.tryRemoveInvocation(String id)"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation(String id)"
  overload: "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public InvocationRequest tryRemoveInvocation(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "com.microsoft.signalr.InvocationRequest"
references:
- uid: "com.microsoft.signalr.HubConnection"
  name: "HubConnection"
  nameWithType: "HubConnection"
  fullName: "com.microsoft.signalr.HubConnection"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState*"
  name: "ConnectionState"
  nameWithType: "HubConnection.ConnectionState.ConnectionState"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.ConnectionState"
  package: "com.microsoft.signalr"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId*"
  name: "getNextInvocationId"
  nameWithType: "HubConnection.ConnectionState.getNextInvocationId"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getNextInvocationId"
  package: "com.microsoft.signalr"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations*"
  name: "cancelOutstandingInvocations"
  nameWithType: "HubConnection.ConnectionState.cancelOutstandingInvocations"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.cancelOutstandingInvocations"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.InvocationRequest"
  name: "InvocationRequest"
  nameWithType: "InvocationRequest"
  fullName: "com.microsoft.signalr.InvocationRequest"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation*"
  name: "addInvocation"
  nameWithType: "HubConnection.ConnectionState.addInvocation"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.addInvocation"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation*"
  name: "getInvocation"
  nameWithType: "HubConnection.ConnectionState.getInvocation"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getInvocation"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation*"
  name: "tryRemoveInvocation"
  nameWithType: "HubConnection.ConnectionState.tryRemoveInvocation"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.tryRemoveInvocation"
  package: "com.microsoft.signalr"
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType*"
  name: "getReturnType"
  nameWithType: "HubConnection.ConnectionState.getReturnType"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getReturnType"
  package: "com.microsoft.signalr"
- uid: "java.util.List<java.lang.Class<?>>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes*"
  name: "getParameterTypes"
  nameWithType: "HubConnection.ConnectionState.getParameterTypes"
  fullName: "com.microsoft.signalr.HubConnection.ConnectionState.getParameterTypes"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.InvocationBinder"
  name: "InvocationBinder"
  nameWithType: "InvocationBinder"
  fullName: "com.microsoft.signalr.InvocationBinder"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
