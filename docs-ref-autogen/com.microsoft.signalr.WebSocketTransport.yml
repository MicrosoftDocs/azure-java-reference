### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.WebSocketTransport"
  id: "WebSocketTransport"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.WebSocketTransport.WebSocketTransport(java.util.Map<java.lang.String,java.lang.String>,com.microsoft.signalr.HttpClient)"
  - "com.microsoft.signalr.WebSocketTransport.getUrl()"
  - "com.microsoft.signalr.WebSocketTransport.onClose(java.lang.Integer,java.lang.String)"
  - "com.microsoft.signalr.WebSocketTransport.onReceive(java.lang.String)"
  - "com.microsoft.signalr.WebSocketTransport.send(java.lang.String)"
  - "com.microsoft.signalr.WebSocketTransport.setOnClose(com.microsoft.signalr.TransportOnClosedCallback)"
  - "com.microsoft.signalr.WebSocketTransport.setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  - "com.microsoft.signalr.WebSocketTransport.start(java.lang.String)"
  - "com.microsoft.signalr.WebSocketTransport.stop()"
  langs:
  - "java"
  name: "WebSocketTransport"
  nameWithType: "WebSocketTransport"
  fullName: "com.microsoft.signalr.WebSocketTransport"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: " class WebSocketTransport implements Transport"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.signalr.Transport"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.WebSocketTransport.WebSocketTransport(java.util.Map<java.lang.String,java.lang.String>,com.microsoft.signalr.HttpClient)"
  id: "WebSocketTransport(java.util.Map<java.lang.String,java.lang.String>,com.microsoft.signalr.HttpClient)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "WebSocketTransport(Map<String,String> headers, HttpClient client)"
  nameWithType: "WebSocketTransport.WebSocketTransport(Map<String,String> headers, HttpClient client)"
  fullName: "com.microsoft.signalr.WebSocketTransport.WebSocketTransport(Map<String,String> headers, HttpClient client)"
  overload: "com.microsoft.signalr.WebSocketTransport.WebSocketTransport*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: "public WebSocketTransport(Map<String,String> headers, HttpClient client)"
    parameters:
    - id: "headers"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "client"
      type: "com.microsoft.signalr.HttpClient"
- uid: "com.microsoft.signalr.WebSocketTransport.getUrl()"
  id: "getUrl()"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "getUrl()"
  nameWithType: "WebSocketTransport.getUrl()"
  fullName: "com.microsoft.signalr.WebSocketTransport.getUrl()"
  overload: "com.microsoft.signalr.WebSocketTransport.getUrl*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: " String getUrl()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.WebSocketTransport.onClose(java.lang.Integer,java.lang.String)"
  id: "onClose(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "onClose(Integer code, String reason)"
  nameWithType: "WebSocketTransport.onClose(Integer code, String reason)"
  fullName: "com.microsoft.signalr.WebSocketTransport.onClose(Integer code, String reason)"
  overload: "com.microsoft.signalr.WebSocketTransport.onClose*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: " void onClose(Integer code, String reason)"
    parameters:
    - id: "code"
      type: "java.lang.Integer"
    - id: "reason"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.WebSocketTransport.onReceive(java.lang.String)"
  id: "onReceive(java.lang.String)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "onReceive(String message)"
  nameWithType: "WebSocketTransport.onReceive(String message)"
  fullName: "com.microsoft.signalr.WebSocketTransport.onReceive(String message)"
  overload: "com.microsoft.signalr.WebSocketTransport.onReceive*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void onReceive(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.WebSocketTransport.send(java.lang.String)"
  id: "send(java.lang.String)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "send(String message)"
  nameWithType: "WebSocketTransport.send(String message)"
  fullName: "com.microsoft.signalr.WebSocketTransport.send(String message)"
  overload: "com.microsoft.signalr.WebSocketTransport.send*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Completable send(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    return:
      type: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketTransport.setOnClose(com.microsoft.signalr.TransportOnClosedCallback)"
  id: "setOnClose(com.microsoft.signalr.TransportOnClosedCallback)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "setOnClose(TransportOnClosedCallback onCloseCallback)"
  nameWithType: "WebSocketTransport.setOnClose(TransportOnClosedCallback onCloseCallback)"
  fullName: "com.microsoft.signalr.WebSocketTransport.setOnClose(TransportOnClosedCallback onCloseCallback)"
  overload: "com.microsoft.signalr.WebSocketTransport.setOnClose*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void setOnClose(TransportOnClosedCallback onCloseCallback)"
    parameters:
    - id: "onCloseCallback"
      type: "com.microsoft.signalr.TransportOnClosedCallback"
- uid: "com.microsoft.signalr.WebSocketTransport.setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  id: "setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "setOnReceive(OnReceiveCallBack callback)"
  nameWithType: "WebSocketTransport.setOnReceive(OnReceiveCallBack callback)"
  fullName: "com.microsoft.signalr.WebSocketTransport.setOnReceive(OnReceiveCallBack callback)"
  overload: "com.microsoft.signalr.WebSocketTransport.setOnReceive*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void setOnReceive(OnReceiveCallBack callback)"
    parameters:
    - id: "callback"
      type: "com.microsoft.signalr.OnReceiveCallBack"
- uid: "com.microsoft.signalr.WebSocketTransport.start(java.lang.String)"
  id: "start(java.lang.String)"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "start(String url)"
  nameWithType: "WebSocketTransport.start(String url)"
  fullName: "com.microsoft.signalr.WebSocketTransport.start(String url)"
  overload: "com.microsoft.signalr.WebSocketTransport.start*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Completable start(String url)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    return:
      type: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketTransport.stop()"
  id: "stop()"
  parent: "com.microsoft.signalr.WebSocketTransport"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "WebSocketTransport.stop()"
  fullName: "com.microsoft.signalr.WebSocketTransport.stop()"
  overload: "com.microsoft.signalr.WebSocketTransport.stop*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Completable stop()"
    return:
      type: "io.reactivex.Completable"
references:
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.signalr.HttpClient"
  name: "HttpClient"
  nameWithType: "HttpClient"
  fullName: "com.microsoft.signalr.HttpClient"
- uid: "com.microsoft.signalr.WebSocketTransport.WebSocketTransport*"
  name: "WebSocketTransport"
  nameWithType: "WebSocketTransport.WebSocketTransport"
  fullName: "com.microsoft.signalr.WebSocketTransport.WebSocketTransport"
  package: "com.microsoft.signalr"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.WebSocketTransport.getUrl*"
  name: "getUrl"
  nameWithType: "WebSocketTransport.getUrl"
  fullName: "com.microsoft.signalr.WebSocketTransport.getUrl"
  package: "com.microsoft.signalr"
- uid: "io.reactivex.Completable"
  spec.java:
  - uid: "io.reactivex.Completable"
    name: "Completable"
    fullName: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketTransport.start*"
  name: "start"
  nameWithType: "WebSocketTransport.start"
  fullName: "com.microsoft.signalr.WebSocketTransport.start"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.WebSocketTransport.send*"
  name: "send"
  nameWithType: "WebSocketTransport.send"
  fullName: "com.microsoft.signalr.WebSocketTransport.send"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.OnReceiveCallBack"
  name: "OnReceiveCallBack"
  nameWithType: "OnReceiveCallBack"
  fullName: "com.microsoft.signalr.OnReceiveCallBack"
- uid: "com.microsoft.signalr.WebSocketTransport.setOnReceive*"
  name: "setOnReceive"
  nameWithType: "WebSocketTransport.setOnReceive"
  fullName: "com.microsoft.signalr.WebSocketTransport.setOnReceive"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.WebSocketTransport.onReceive*"
  name: "onReceive"
  nameWithType: "WebSocketTransport.onReceive"
  fullName: "com.microsoft.signalr.WebSocketTransport.onReceive"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.TransportOnClosedCallback"
  name: "TransportOnClosedCallback"
  nameWithType: "TransportOnClosedCallback"
  fullName: "com.microsoft.signalr.TransportOnClosedCallback"
- uid: "com.microsoft.signalr.WebSocketTransport.setOnClose*"
  name: "setOnClose"
  nameWithType: "WebSocketTransport.setOnClose"
  fullName: "com.microsoft.signalr.WebSocketTransport.setOnClose"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.WebSocketTransport.stop*"
  name: "stop"
  nameWithType: "WebSocketTransport.stop"
  fullName: "com.microsoft.signalr.WebSocketTransport.stop"
  package: "com.microsoft.signalr"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.signalr.WebSocketTransport.onClose*"
  name: "onClose"
  nameWithType: "WebSocketTransport.onClose"
  fullName: "com.microsoft.signalr.WebSocketTransport.onClose"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.Transport"
  name: "Transport"
  nameWithType: "Transport"
  fullName: "com.microsoft.signalr.Transport"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
