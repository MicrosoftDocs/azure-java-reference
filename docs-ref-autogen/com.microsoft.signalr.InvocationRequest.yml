### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.InvocationRequest"
  id: "InvocationRequest"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.InvocationRequest.InvocationRequest(java.lang.Class<?>,java.lang.String)"
  - "com.microsoft.signalr.InvocationRequest.addItem(com.microsoft.signalr.StreamItem)"
  - "com.microsoft.signalr.InvocationRequest.cancel()"
  - "com.microsoft.signalr.InvocationRequest.complete(com.microsoft.signalr.CompletionMessage)"
  - "com.microsoft.signalr.InvocationRequest.fail(java.lang.Exception)"
  - "com.microsoft.signalr.InvocationRequest.getInvocationId()"
  - "com.microsoft.signalr.InvocationRequest.getPendingCall()"
  - "com.microsoft.signalr.InvocationRequest.getReturnType()"
  langs:
  - "java"
  name: "InvocationRequest"
  nameWithType: "InvocationRequest"
  fullName: "com.microsoft.signalr.InvocationRequest"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: " class InvocationRequest"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.InvocationRequest.InvocationRequest(java.lang.Class<?>,java.lang.String)"
  id: "InvocationRequest(java.lang.Class<?>,java.lang.String)"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "InvocationRequest(Class<?> returnType, String invocationId)"
  nameWithType: "InvocationRequest.InvocationRequest(Class<?> returnType, String invocationId)"
  fullName: "com.microsoft.signalr.InvocationRequest.InvocationRequest(Class<?> returnType, String invocationId)"
  overload: "com.microsoft.signalr.InvocationRequest.InvocationRequest*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: " InvocationRequest(Class<?> returnType, String invocationId)"
    parameters:
    - id: "returnType"
      type: "java.lang.Class<?>"
    - id: "invocationId"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.InvocationRequest.addItem(com.microsoft.signalr.StreamItem)"
  id: "addItem(com.microsoft.signalr.StreamItem)"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "addItem(StreamItem streamItem)"
  nameWithType: "InvocationRequest.addItem(StreamItem streamItem)"
  fullName: "com.microsoft.signalr.InvocationRequest.addItem(StreamItem streamItem)"
  overload: "com.microsoft.signalr.InvocationRequest.addItem*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void addItem(StreamItem streamItem)"
    parameters:
    - id: "streamItem"
      type: "com.microsoft.signalr.StreamItem"
- uid: "com.microsoft.signalr.InvocationRequest.cancel()"
  id: "cancel()"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "cancel()"
  nameWithType: "InvocationRequest.cancel()"
  fullName: "com.microsoft.signalr.InvocationRequest.cancel()"
  overload: "com.microsoft.signalr.InvocationRequest.cancel*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void cancel()"
- uid: "com.microsoft.signalr.InvocationRequest.complete(com.microsoft.signalr.CompletionMessage)"
  id: "complete(com.microsoft.signalr.CompletionMessage)"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "complete(CompletionMessage completion)"
  nameWithType: "InvocationRequest.complete(CompletionMessage completion)"
  fullName: "com.microsoft.signalr.InvocationRequest.complete(CompletionMessage completion)"
  overload: "com.microsoft.signalr.InvocationRequest.complete*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void complete(CompletionMessage completion)"
    parameters:
    - id: "completion"
      type: "com.microsoft.signalr.CompletionMessage"
- uid: "com.microsoft.signalr.InvocationRequest.fail(java.lang.Exception)"
  id: "fail(java.lang.Exception)"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "fail(Exception ex)"
  nameWithType: "InvocationRequest.fail(Exception ex)"
  fullName: "com.microsoft.signalr.InvocationRequest.fail(Exception ex)"
  overload: "com.microsoft.signalr.InvocationRequest.fail*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public void fail(Exception ex)"
    parameters:
    - id: "ex"
      type: "java.lang.Exception"
- uid: "com.microsoft.signalr.InvocationRequest.getInvocationId()"
  id: "getInvocationId()"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "getInvocationId()"
  nameWithType: "InvocationRequest.getInvocationId()"
  fullName: "com.microsoft.signalr.InvocationRequest.getInvocationId()"
  overload: "com.microsoft.signalr.InvocationRequest.getInvocationId*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getInvocationId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.InvocationRequest.getPendingCall()"
  id: "getPendingCall()"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "getPendingCall()"
  nameWithType: "InvocationRequest.getPendingCall()"
  fullName: "com.microsoft.signalr.InvocationRequest.getPendingCall()"
  overload: "com.microsoft.signalr.InvocationRequest.getPendingCall*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Subject<Object> getPendingCall()"
    return:
      type: "io.reactivex.subjects.Subject<java.lang.Object>"
- uid: "com.microsoft.signalr.InvocationRequest.getReturnType()"
  id: "getReturnType()"
  parent: "com.microsoft.signalr.InvocationRequest"
  langs:
  - "java"
  name: "getReturnType()"
  nameWithType: "InvocationRequest.getReturnType()"
  fullName: "com.microsoft.signalr.InvocationRequest.getReturnType()"
  overload: "com.microsoft.signalr.InvocationRequest.getReturnType*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Class<?> getReturnType()"
    return:
      type: "java.lang.Class<?>"
references:
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.InvocationRequest.InvocationRequest*"
  name: "InvocationRequest"
  nameWithType: "InvocationRequest.InvocationRequest"
  fullName: "com.microsoft.signalr.InvocationRequest.InvocationRequest"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.CompletionMessage"
  name: "CompletionMessage"
  nameWithType: "CompletionMessage"
  fullName: "com.microsoft.signalr.CompletionMessage"
- uid: "com.microsoft.signalr.InvocationRequest.complete*"
  name: "complete"
  nameWithType: "InvocationRequest.complete"
  fullName: "com.microsoft.signalr.InvocationRequest.complete"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.StreamItem"
  name: "StreamItem"
  nameWithType: "StreamItem"
  fullName: "com.microsoft.signalr.StreamItem"
- uid: "com.microsoft.signalr.InvocationRequest.addItem*"
  name: "addItem"
  nameWithType: "InvocationRequest.addItem"
  fullName: "com.microsoft.signalr.InvocationRequest.addItem"
  package: "com.microsoft.signalr"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.microsoft.signalr.InvocationRequest.fail*"
  name: "fail"
  nameWithType: "InvocationRequest.fail"
  fullName: "com.microsoft.signalr.InvocationRequest.fail"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.InvocationRequest.cancel*"
  name: "cancel"
  nameWithType: "InvocationRequest.cancel"
  fullName: "com.microsoft.signalr.InvocationRequest.cancel"
  package: "com.microsoft.signalr"
- uid: "io.reactivex.subjects.Subject<java.lang.Object>"
  spec.java:
  - uid: "io.reactivex.subjects.Subject"
    name: "Subject"
    fullName: "io.reactivex.subjects.Subject"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.signalr.InvocationRequest.getPendingCall*"
  name: "getPendingCall"
  nameWithType: "InvocationRequest.getPendingCall"
  fullName: "com.microsoft.signalr.InvocationRequest.getPendingCall"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.InvocationRequest.getReturnType*"
  name: "getReturnType"
  nameWithType: "InvocationRequest.getReturnType"
  fullName: "com.microsoft.signalr.InvocationRequest.getReturnType"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.InvocationRequest.getInvocationId*"
  name: "getInvocationId"
  nameWithType: "InvocationRequest.getInvocationId"
  fullName: "com.microsoft.signalr.InvocationRequest.getInvocationId"
  package: "com.microsoft.signalr"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "io.reactivex.subjects.Subject"
  name: "Subject"
  nameWithType: "Subject"
  fullName: "io.reactivex.subjects.Subject"
- uid: "java.lang.Object"
  name: "Object"
  nameWithType: "Object"
  fullName: "java.lang.Object"
