### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.HubMessageType"
  id: "HubMessageType"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.HubMessageType.CANCEL_INVOCATION"
  - "com.microsoft.signalr.HubMessageType.CLOSE"
  - "com.microsoft.signalr.HubMessageType.COMPLETION"
  - "com.microsoft.signalr.HubMessageType.INVOCATION"
  - "com.microsoft.signalr.HubMessageType.INVOCATION_BINDING_FAILURE"
  - "com.microsoft.signalr.HubMessageType.PING"
  - "com.microsoft.signalr.HubMessageType.STREAM_INVOCATION"
  - "com.microsoft.signalr.HubMessageType.STREAM_ITEM"
  - "com.microsoft.signalr.HubMessageType.value"
  - "com.microsoft.signalr.HubMessageType.valueOf(java.lang.String)"
  - "com.microsoft.signalr.HubMessageType.values()"
  langs:
  - "java"
  name: "HubMessageType"
  nameWithType: "HubMessageType"
  fullName: "com.microsoft.signalr.HubMessageType"
  type: "Enum"
  package: "com.microsoft.signalr"
  syntax:
    content: " enum HubMessageType extends Enum<HubMessageType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.HubMessageType.CANCEL_INVOCATION"
  id: "CANCEL_INVOCATION"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "CANCEL_INVOCATION"
  nameWithType: "HubMessageType.CANCEL_INVOCATION"
  fullName: "com.microsoft.signalr.HubMessageType.CANCEL_INVOCATION"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType CANCEL_INVOCATION"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.CLOSE"
  id: "CLOSE"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "CLOSE"
  nameWithType: "HubMessageType.CLOSE"
  fullName: "com.microsoft.signalr.HubMessageType.CLOSE"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType CLOSE"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.COMPLETION"
  id: "COMPLETION"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "COMPLETION"
  nameWithType: "HubMessageType.COMPLETION"
  fullName: "com.microsoft.signalr.HubMessageType.COMPLETION"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType COMPLETION"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.HubMessageType(int)"
  id: "HubMessageType(int)"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "HubMessageType(int id)"
  nameWithType: "HubMessageType.HubMessageType(int id)"
  fullName: "com.microsoft.signalr.HubMessageType.HubMessageType(int id)"
  overload: "com.microsoft.signalr.HubMessageType.HubMessageType*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: "private HubMessageType(int id)"
    parameters:
    - id: "id"
      type: "int"
- uid: "com.microsoft.signalr.HubMessageType.INVOCATION"
  id: "INVOCATION"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "INVOCATION"
  nameWithType: "HubMessageType.INVOCATION"
  fullName: "com.microsoft.signalr.HubMessageType.INVOCATION"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType INVOCATION"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.INVOCATION_BINDING_FAILURE"
  id: "INVOCATION_BINDING_FAILURE"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "INVOCATION_BINDING_FAILURE"
  nameWithType: "HubMessageType.INVOCATION_BINDING_FAILURE"
  fullName: "com.microsoft.signalr.HubMessageType.INVOCATION_BINDING_FAILURE"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType INVOCATION_BINDING_FAILURE"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.PING"
  id: "PING"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "PING"
  nameWithType: "HubMessageType.PING"
  fullName: "com.microsoft.signalr.HubMessageType.PING"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType PING"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.STREAM_INVOCATION"
  id: "STREAM_INVOCATION"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "STREAM_INVOCATION"
  nameWithType: "HubMessageType.STREAM_INVOCATION"
  fullName: "com.microsoft.signalr.HubMessageType.STREAM_INVOCATION"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType STREAM_INVOCATION"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.STREAM_ITEM"
  id: "STREAM_ITEM"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "STREAM_ITEM"
  nameWithType: "HubMessageType.STREAM_ITEM"
  fullName: "com.microsoft.signalr.HubMessageType.STREAM_ITEM"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static final HubMessageType STREAM_ITEM"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.value"
  id: "value"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "value"
  nameWithType: "HubMessageType.value"
  fullName: "com.microsoft.signalr.HubMessageType.value"
  type: "Field"
  package: "com.microsoft.signalr"
  syntax:
    content: "public int value"
    return:
      type: "int"
- uid: "com.microsoft.signalr.HubMessageType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "HubMessageType.valueOf(String name)"
  fullName: "com.microsoft.signalr.HubMessageType.valueOf(String name)"
  overload: "com.microsoft.signalr.HubMessageType.valueOf*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static HubMessageType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.microsoft.signalr.HubMessageType"
- uid: "com.microsoft.signalr.HubMessageType.values()"
  id: "values()"
  parent: "com.microsoft.signalr.HubMessageType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "HubMessageType.values()"
  fullName: "com.microsoft.signalr.HubMessageType.values()"
  overload: "com.microsoft.signalr.HubMessageType.values*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static HubMessageType[] values()"
    return:
      type: "com.microsoft.signalr.HubMessageType[]"
references:
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.signalr.HubMessageType.HubMessageType*"
  name: "HubMessageType"
  nameWithType: "HubMessageType.HubMessageType"
  fullName: "com.microsoft.signalr.HubMessageType.HubMessageType"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.HubMessageType[]"
  spec.java:
  - uid: "com.microsoft.signalr.HubMessageType"
    name: "HubMessageType"
    fullName: "com.microsoft.signalr.HubMessageType"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.signalr.HubMessageType.values*"
  name: "values"
  nameWithType: "HubMessageType.values"
  fullName: "com.microsoft.signalr.HubMessageType.values"
  package: "com.microsoft.signalr"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.HubMessageType.valueOf*"
  name: "valueOf"
  nameWithType: "HubMessageType.valueOf"
  fullName: "com.microsoft.signalr.HubMessageType.valueOf"
  package: "com.microsoft.signalr"
- uid: "java.lang.Enum<com.microsoft.signalr.HubMessageType>"
  name: "Enum<HubMessageType>"
  nameWithType: "Enum<HubMessageType>"
  fullName: "java.lang.Enum<com.microsoft.signalr.HubMessageType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
