### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.HandshakeProtocol"
  id: "HandshakeProtocol"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol()"
  - "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage(com.microsoft.signalr.HandshakeRequestMessage)"
  - "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse(java.lang.String)"
  langs:
  - "java"
  name: "HandshakeProtocol"
  nameWithType: "HandshakeProtocol"
  fullName: "com.microsoft.signalr.HandshakeProtocol"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: "final class HandshakeProtocol"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol()"
  id: "HandshakeProtocol()"
  parent: "com.microsoft.signalr.HandshakeProtocol"
  langs:
  - "java"
  name: "HandshakeProtocol()"
  nameWithType: "HandshakeProtocol.HandshakeProtocol()"
  fullName: "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol()"
  overload: "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: " HandshakeProtocol()"
- uid: "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage(com.microsoft.signalr.HandshakeRequestMessage)"
  id: "createHandshakeRequestMessage(com.microsoft.signalr.HandshakeRequestMessage)"
  parent: "com.microsoft.signalr.HandshakeProtocol"
  langs:
  - "java"
  name: "createHandshakeRequestMessage(HandshakeRequestMessage message)"
  nameWithType: "HandshakeProtocol.createHandshakeRequestMessage(HandshakeRequestMessage message)"
  fullName: "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage(HandshakeRequestMessage message)"
  overload: "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static String createHandshakeRequestMessage(HandshakeRequestMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.signalr.HandshakeRequestMessage"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse(java.lang.String)"
  id: "parseHandshakeResponse(java.lang.String)"
  parent: "com.microsoft.signalr.HandshakeProtocol"
  langs:
  - "java"
  name: "parseHandshakeResponse(String message)"
  nameWithType: "HandshakeProtocol.parseHandshakeResponse(String message)"
  fullName: "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse(String message)"
  overload: "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public static HandshakeResponseMessage parseHandshakeResponse(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    return:
      type: "com.microsoft.signalr.HandshakeResponseMessage"
references:
- uid: "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol*"
  name: "HandshakeProtocol"
  nameWithType: "HandshakeProtocol.HandshakeProtocol"
  fullName: "com.microsoft.signalr.HandshakeProtocol.HandshakeProtocol"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.HandshakeRequestMessage"
  name: "HandshakeRequestMessage"
  nameWithType: "HandshakeRequestMessage"
  fullName: "com.microsoft.signalr.HandshakeRequestMessage"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage*"
  name: "createHandshakeRequestMessage"
  nameWithType: "HandshakeProtocol.createHandshakeRequestMessage"
  fullName: "com.microsoft.signalr.HandshakeProtocol.createHandshakeRequestMessage"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.HandshakeResponseMessage"
  name: "HandshakeResponseMessage"
  nameWithType: "HandshakeResponseMessage"
  fullName: "com.microsoft.signalr.HandshakeResponseMessage"
- uid: "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse*"
  name: "parseHandshakeResponse"
  nameWithType: "HandshakeProtocol.parseHandshakeResponse"
  fullName: "com.microsoft.signalr.HandshakeProtocol.parseHandshakeResponse"
  package: "com.microsoft.signalr"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
