### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.models.PartitionContext"
  id: "PartitionContext"
  parent: "com.azure.messaging.eventhubs.models"
  children:
  - "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)"
  - "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.EventProcessorStore)"
  - "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup()"
  - "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName()"
  - "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties()"
  - "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId()"
  - "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(com.azure.messaging.eventhubs.EventData)"
  - "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(long,java.lang.Long)"
  langs:
  - "java"
  name: "PartitionContext"
  nameWithType: "PartitionContext"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext"
  type: "Class"
  package: "com.azure.messaging.eventhubs.models"
  summary: "A model class to contain partition information that will be provided to each instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
  syntax:
    content: "public class PartitionContext"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)"
  id: "PartitionContext(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties)"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "PartitionContext(String partitionId, String eventHubName, String consumerGroup, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  nameWithType: "PartitionContext.PartitionContext(String partitionId, String eventHubName, String consumerGroup, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(String partitionId, String eventHubName, String consumerGroup, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Creates an instance of PartitionContext that contains partition information available for each event."
  syntax:
    content: "public PartitionContext(String partitionId, String eventHubName, String consumerGroup, LastEnqueuedEventProperties lastEnqueuedEventProperties)"
    parameters:
    - id: "partitionId"
      type: "java.lang.String"
      description: "The partition id of the partition."
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The Event Hub name that the event originated from."
    - id: "consumerGroup"
      type: "java.lang.String"
      description: "The consumer group name the event originated from."
    - id: "lastEnqueuedEventProperties"
      type: "com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties"
      description: "Set of information about the last enqueued event of a partition."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.EventProcessorStore)"
  id: "PartitionContext(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.eventhubs.EventProcessorStore)"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "PartitionContext(String partitionId, String eventHubName, String consumerGroup, String ownerId, String eTag, EventProcessorStore eventProcessorStore)"
  nameWithType: "PartitionContext.PartitionContext(String partitionId, String eventHubName, String consumerGroup, String ownerId, String eTag, EventProcessorStore eventProcessorStore)"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext(String partitionId, String eventHubName, String consumerGroup, String ownerId, String eTag, EventProcessorStore eventProcessorStore)"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Creates an instance of PartitionContext that contains partition information available to each <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
  syntax:
    content: "public PartitionContext(String partitionId, String eventHubName, String consumerGroup, String ownerId, String eTag, EventProcessorStore eventProcessorStore)"
    parameters:
    - id: "partitionId"
      type: "java.lang.String"
      description: "The partition id of the partition processed by the <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The Event Hub name associated with the <xref uid=\"com.azure.messaging.eventhubs.EventProcessor\" data-throw-if-not-resolved=\"false\">EventProcessor</xref>."
    - id: "consumerGroup"
      type: "java.lang.String"
      description: "The consumer group name associated with the <xref uid=\"com.azure.messaging.eventhubs.EventProcessor\" data-throw-if-not-resolved=\"false\">EventProcessor</xref>."
    - id: "ownerId"
      type: "java.lang.String"
      description: "The unique identifier of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessor\" data-throw-if-not-resolved=\"false\">EventProcessor</xref> instance."
    - id: "eTag"
      type: "java.lang.String"
      description: "The last known ETag stored in <xref uid=\"com.azure.messaging.eventhubs.EventProcessorStore\" data-throw-if-not-resolved=\"false\">EventProcessorStore</xref> for this partition."
    - id: "eventProcessorStore"
      type: "com.azure.messaging.eventhubs.EventProcessorStore"
      description: "A <xref uid=\"com.azure.messaging.eventhubs.EventProcessorStore\" data-throw-if-not-resolved=\"false\">EventProcessorStore</xref> implementation to read and update partition ownership\n and checkpoint information."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup()"
  id: "getConsumerGroup()"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "getConsumerGroup()"
  nameWithType: "PartitionContext.getConsumerGroup()"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup()"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the consumer group name associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
  syntax:
    content: "public String getConsumerGroup()"
    return:
      type: "java.lang.String"
      description: "The consumer group name associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName()"
  id: "getEventHubName()"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "getEventHubName()"
  nameWithType: "PartitionContext.getEventHubName()"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName()"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the Event Hub name associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
  syntax:
    content: "public String getEventHubName()"
    return:
      type: "java.lang.String"
      description: "The Event Hub name associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties()"
  id: "getLastEnqueuedEventProperties()"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "getLastEnqueuedEventProperties()"
  nameWithType: "PartitionContext.getLastEnqueuedEventProperties()"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties()"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "A set of information about the last enqueued event of a partition, as observed by the consumer as events are received from the Event Hubs service."
  syntax:
    content: "public LastEnqueuedEventProperties getLastEnqueuedEventProperties()"
    return:
      type: "com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties"
      description: "<code>null</code> if <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#getTrackLastEnqueuedEventProperties()</xref> was not set when\n creating the consumer. Otherwise, the properties describing the most recently enqueued event in the partition."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId()"
  id: "getPartitionId()"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "getPartitionId()"
  nameWithType: "PartitionContext.getPartitionId()"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId()"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the partition id associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
  syntax:
    content: "public String getPartitionId()"
    return:
      type: "java.lang.String"
      description: "The partition id associated to an instance of <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref>."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(com.azure.messaging.eventhubs.EventData)"
  id: "updateCheckpoint(com.azure.messaging.eventhubs.EventData)"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "updateCheckpoint(EventData eventData)"
  nameWithType: "PartitionContext.updateCheckpoint(EventData eventData)"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(EventData eventData)"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Updates the checkpoint for this partition using the event data. This will serve as the last known successfully processed event in this partition if the update is successful."
  syntax:
    content: "public Mono<Void> updateCheckpoint(EventData eventData)"
    parameters:
    - id: "eventData"
      type: "com.azure.messaging.eventhubs.EventData"
      description: "The event data to use for updating the checkpoint."
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of deferred execution of this call."
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(long,java.lang.Long)"
  id: "updateCheckpoint(long,java.lang.Long)"
  parent: "com.azure.messaging.eventhubs.models.PartitionContext"
  langs:
  - "java"
  name: "updateCheckpoint(long sequenceNumber, Long offset)"
  nameWithType: "PartitionContext.updateCheckpoint(long sequenceNumber, Long offset)"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint(long sequenceNumber, Long offset)"
  overload: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Updates a checkpoint using the given offset and sequence number. This will serve as the last known successfully processed event in this partition if the update is successful."
  syntax:
    content: "public Mono<Void> updateCheckpoint(long sequenceNumber, Long offset)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
      description: "The sequence number to update the checkpoint."
    - id: "offset"
      type: "java.lang.Long"
      description: "The offset to update the checkpoint."
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of deferred execution of this call."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventProcessorStore"
  name: "EventProcessorStore"
  nameWithType: "EventProcessorStore"
  fullName: "com.azure.messaging.eventhubs.EventProcessorStore"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext*"
  name: "PartitionContext"
  nameWithType: "PartitionContext.PartitionContext"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.PartitionContext"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties"
  name: "LastEnqueuedEventProperties"
  nameWithType: "LastEnqueuedEventProperties"
  fullName: "com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId*"
  name: "getPartitionId"
  nameWithType: "PartitionContext.getPartitionId"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getPartitionId"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName*"
  name: "getEventHubName"
  nameWithType: "PartitionContext.getEventHubName"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getEventHubName"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup*"
  name: "getConsumerGroup"
  nameWithType: "PartitionContext.getConsumerGroup"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getConsumerGroup"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties*"
  name: "getLastEnqueuedEventProperties"
  nameWithType: "PartitionContext.getLastEnqueuedEventProperties"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.getLastEnqueuedEventProperties"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.EventData"
  name: "EventData"
  nameWithType: "EventData"
  fullName: "com.azure.messaging.eventhubs.EventData"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint*"
  name: "updateCheckpoint"
  nameWithType: "PartitionContext.updateCheckpoint"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext.updateCheckpoint"
  package: "com.azure.messaging.eventhubs.models"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
