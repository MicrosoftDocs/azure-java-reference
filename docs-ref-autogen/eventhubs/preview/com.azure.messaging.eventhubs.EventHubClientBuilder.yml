### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  id: "EventHubClientBuilder"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer()"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.connection(com.azure.messaging.eventhubs.EventHubConnection)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String,java.lang.String)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup(java.lang.String)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions(com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration(com.azure.core.amqp.models.ProxyConfiguration)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.retry(com.azure.core.amqp.RetryOptions)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler(reactor.core.scheduler.Scheduler)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition(com.azure.messaging.eventhubs.models.EventPosition)"
  - "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType(com.azure.core.amqp.TransportType)"
  langs:
  - "java"
  name: "EventHubClientBuilder"
  nameWithType: "EventHubClientBuilder"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "This class provides a fluent builder API to aid the instantiation of <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubClient\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>. Calling <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient()</xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient()</xref> constructs an instance of the respective client.\n\n**Credentials are required** to perform operations against Azure Event Hubs. They can be set by using one of the following methods:\n\n *  <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">connectionString(String)</xref> with a connection string to a specific Event Hub.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\">connectionString(String, String)</xref> with an Event Hub *namespace* connection string and the Event Hub name.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\">credential(String, String, TokenCredential)</xref> with the fully qualified domain name (FQDN), Event Hub name, and a set of credentials authorized to use the Event Hub.\n\n**Starting position**, **consumer group**, and **credentials** are **required** when creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref>. <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions(com.azure.messaging.eventhubs.models.EventHubConsumerOptions)\" data-throw-if-not-resolved=\"false\">Consumer options</xref> can be supplied for optional consumer customizations.\n\n**Creating an asynchronous <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubProducerAsyncClient</xref> using Event Hubs namespace connection string** \n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubasyncproducerclient.instantiation\\}\n\n**Creating a synchronous <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref> using an Event Hub instance connection string** \n\n\\{@codesnippet com.azure.messaging.eventhubs.eventhubconsumerasyncclient.instantiation\\}"
  syntax:
    content: "public class EventHubClientBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME"
  id: "DEFAULT_CONSUMER_GROUP_NAME"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "DEFAULT_CONSUMER_GROUP_NAME"
  nameWithType: "EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME"
  type: "Field"
  package: "com.azure.messaging.eventhubs"
  summary: "The name of the default consumer group in the Event Hubs service."
  syntax:
    content: "public static final String DEFAULT_CONSUMER_GROUP_NAME"
    return:
      type: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder()"
  id: "EventHubClientBuilder()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "EventHubClientBuilder()"
  nameWithType: "EventHubClientBuilder.EventHubClientBuilder()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new instance with the default transport <xref uid=\"\" data-throw-if-not-resolved=\"false\">TransportType#AMQP</xref>."
  syntax:
    content: "public EventHubClientBuilder()"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "EventHubClientBuilder.buildAsyncClient()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> based on options set on this builder. Every time `buildAsyncClient()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> is created.\n\nThe following options are used if ones are not specified in the builder:\n\n *  If no configuration is specified, the <xref uid=\"\" data-throw-if-not-resolved=\"false\">global configuration</xref> is used to provide any shared configuration values. The configuration values read are the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#PROPERTY_HTTP_PROXY</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProxyConfiguration#PROXY_USERNAME</xref>, and <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProxyConfiguration#PROXY_PASSWORD</xref>.\n *  If no retry is specified, the default retry options are used.\n *  If no proxy is specified, the builder checks the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n     configuration</xref> for a configured proxy, then it checks to see if a system proxy is configured.\n *  If no timeout is specified, a <xref uid=\"com.azure.messaging.eventhubs.implementation.ClientConstants.OPERATION_TIMEOUT\" data-throw-if-not-resolved=\"false\">timeout of one minute</xref> is used.\n *  If no scheduler is specified, an <xref uid=\"\" data-throw-if-not-resolved=\"false\">elastic scheduler</xref> is used."
  syntax:
    content: " EventHubAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubAsyncClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> instance with all the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer()"
  id: "buildAsyncConsumer()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildAsyncConsumer()"
  nameWithType: "EventHubClientBuilder.buildAsyncConsumer()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> based on the options set on this builder. Every time `buildAsyncConsumer()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> is created."
  syntax:
    content: "public EventHubConsumerAsyncClient buildAsyncConsumer()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> with the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer()"
  id: "buildAsyncProducer()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildAsyncProducer()"
  nameWithType: "EventHubClientBuilder.buildAsyncProducer()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubProducerAsyncClient</xref> based on options set on this builder. Every time `buildAsyncProducer()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubProducerAsyncClient</xref> is created."
  syntax:
    content: "public EventHubProducerAsyncClient buildAsyncProducer()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubProducerAsyncClient</xref> instance with all the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "EventHubClientBuilder.buildClient()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubClient\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> based on options set on this builder. Every time `buildClient()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubClient\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> is created.\n\nThe following options are used if ones are not specified in the builder:\n\n *  If no configuration is specified, the <xref uid=\"\" data-throw-if-not-resolved=\"false\">global configuration</xref> is used to provide any shared configuration values. The configuration values read are the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#PROPERTY_HTTP_PROXY</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProxyConfiguration#PROXY_USERNAME</xref>, and <xref uid=\"\" data-throw-if-not-resolved=\"false\">ProxyConfiguration#PROXY_PASSWORD</xref>.\n *  If no retry is specified, the default retry options are used.\n *  If no proxy is specified, the builder checks the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n     configuration</xref> for a configured proxy, then it checks to see if a system proxy is configured.\n *  If no timeout is specified, a <xref uid=\"com.azure.messaging.eventhubs.implementation.ClientConstants.OPERATION_TIMEOUT\" data-throw-if-not-resolved=\"false\">timeout of one minute</xref> is used.\n *  If no scheduler is specified, an <xref uid=\"\" data-throw-if-not-resolved=\"false\">elastic scheduler</xref> is used."
  syntax:
    content: " EventHubClient buildClient()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubClient\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> instance with all the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection()"
  id: "buildConnection()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildConnection()"
  nameWithType: "EventHubClientBuilder.buildConnection()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubConnection\" data-throw-if-not-resolved=\"false\">EventHubConnection</xref> based on the options set on this builder. Every time `buildConnection()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubConnection\" data-throw-if-not-resolved=\"false\">EventHubConnection</xref> is created."
  syntax:
    content: "public EventHubConnection buildConnection()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubConnection"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubConnection\" data-throw-if-not-resolved=\"false\">EventHubConnection</xref> with the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer()"
  id: "buildConsumer()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildConsumer()"
  nameWithType: "EventHubClientBuilder.buildConsumer()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref> based on the options set on this builder. Every time `buildConsumer()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref> is created."
  syntax:
    content: "public EventHubConsumerClient buildConsumer()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubConsumerClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref> with the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer()"
  id: "buildProducer()"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "buildProducer()"
  nameWithType: "EventHubClientBuilder.buildProducer()"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer()"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates a new <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerClient\" data-throw-if-not-resolved=\"false\">EventHubProducerClient</xref> based on options set on this builder. Every time `buildAsyncProducer()` is invoked, a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerClient\" data-throw-if-not-resolved=\"false\">EventHubProducerClient</xref> is created."
  syntax:
    content: "public EventHubProducerClient buildProducer()"
    return:
      type: "com.azure.messaging.eventhubs.EventHubProducerClient"
      description: "A new <xref uid=\"com.azure.messaging.eventhubs.EventHubProducerClient\" data-throw-if-not-resolved=\"false\">EventHubProducerClient</xref> instance with all the configured options."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "EventHubClientBuilder.configuration(Configuration configuration)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration(Configuration configuration)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the configuration store that is used during construction of the service client. If not specified, the default configuration store is used to configure the <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. Use <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction."
  syntax:
    content: "public EventHubClientBuilder configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "The configuration store used to configure the <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.connection(com.azure.messaging.eventhubs.EventHubConnection)"
  id: "connection(com.azure.messaging.eventhubs.EventHubConnection)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "connection(EventHubConnection eventHubConnection)"
  nameWithType: "EventHubClientBuilder.connection(EventHubConnection eventHubConnection)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.connection(EventHubConnection eventHubConnection)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.connection*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the Event Hub connection to use when interacting with Event Hubs. If not set, a new connection will be constructed and used. If a connection is provided, end users are responsible for disposing of it."
  syntax:
    content: "public EventHubClientBuilder connection(EventHubConnection eventHubConnection)"
    parameters:
    - id: "eventHubConnection"
      type: "com.azure.messaging.eventhubs.EventHubConnection"
      description: "Event Hub connection to use."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String)"
  id: "connectionString(java.lang.String)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "connectionString(String connectionString)"
  nameWithType: "EventHubClientBuilder.connectionString(String connectionString)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(String connectionString)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the credential information given a connection string to the Event Hub instance.\n\nIf the connection string is copied from the Event Hubs namespace, it will likely not contain the name to the desired Event Hub, which is needed. In this case, the name can be added manually by adding \"EntityPath=EVENT\\_HUB\\_NAME\" to the end of the connection string. For example, \"EntityPath=telemetry-hub\".\n\nIf you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name."
  syntax:
    content: "public EventHubClientBuilder connectionString(String connectionString)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "The connection string to use for connecting to the Event Hub instance. It is expected\n     that the Event Hub name and the shared access key properties are contained in this connection string."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(java.lang.String,java.lang.String)"
  id: "connectionString(java.lang.String,java.lang.String)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "connectionString(String connectionString, String eventHubName)"
  nameWithType: "EventHubClientBuilder.connectionString(String connectionString, String eventHubName)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString(String connectionString, String eventHubName)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the credential information given a connection string to the Event Hubs namespace and name to a specific Event Hub instance."
  syntax:
    content: "public EventHubClientBuilder connectionString(String connectionString, String eventHubName)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "The connection string to use for connecting to the Event Hubs namespace; it is\n     expected that the shared access key properties are contained in this connection string, but not the Event Hub\n     name."
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The name of the Event Hub to connect the client to."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup(java.lang.String)"
  id: "consumerGroup(java.lang.String)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "consumerGroup(String consumerGroup)"
  nameWithType: "EventHubClientBuilder.consumerGroup(String consumerGroup)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup(String consumerGroup)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the name of the consumer group this consumer is associated with. Events are read in the context of this group. The name of the consumer group that is created by default is <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME\" data-throw-if-not-resolved=\"false\">&quot;$Default&quot;</xref>."
  syntax:
    content: "public EventHubClientBuilder consumerGroup(String consumerGroup)"
    parameters:
    - id: "consumerGroup"
      type: "java.lang.String"
      description: "The name of the consumer group this consumer is associated with. Events are read in the\n context of this group. The name of the consumer group that is created by default is\n <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder.DEFAULT_CONSUMER_GROUP_NAME\" data-throw-if-not-resolved=\"false\">\"$Default\"</xref>."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions(com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  id: "consumerOptions(com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "consumerOptions(EventHubConsumerOptions consumerOptions)"
  nameWithType: "EventHubClientBuilder.consumerOptions(EventHubConsumerOptions consumerOptions)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions(EventHubConsumerOptions consumerOptions)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the set of options to apply when creating the consumer."
  syntax:
    content: "public EventHubClientBuilder consumerOptions(EventHubConsumerOptions consumerOptions)"
    parameters:
    - id: "consumerOptions"
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "The set of options to apply when creating the consumer."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)"
  id: "credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  nameWithType: "EventHubClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.credential*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  syntax:
    content: "public EventHubClientBuilder credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
    parameters:
    - id: "fullyQualifiedNamespace"
      type: "java.lang.String"
      description: "The fully qualified name for the Event Hubs namespace. This is likely to be\n     similar to <strong>\"{your-namespace}.servicebus.windows.net\"</strong>."
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The name of the Event Hub to connect the client to."
    - id: "credential"
      type: "com.azure.core.credential.TokenCredential"
      description: "The token credential to use for authorization. Access controls may be specified by the\n     Event Hubs namespace or the requested Event Hub, depending on Azure configuration."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration(com.azure.core.amqp.models.ProxyConfiguration)"
  id: "proxyConfiguration(com.azure.core.amqp.models.ProxyConfiguration)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "proxyConfiguration(ProxyConfiguration proxyConfiguration)"
  nameWithType: "EventHubClientBuilder.proxyConfiguration(ProxyConfiguration proxyConfiguration)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration(ProxyConfiguration proxyConfiguration)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the proxy configuration to use for <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. When a proxy is configured, <xref uid=\"\" data-throw-if-not-resolved=\"false\">TransportType#AMQP_WEB_SOCKETS</xref> must be used for the transport type."
  syntax:
    content: "public EventHubClientBuilder proxyConfiguration(ProxyConfiguration proxyConfiguration)"
    parameters:
    - id: "proxyConfiguration"
      type: "com.azure.core.amqp.models.ProxyConfiguration"
      description: "The proxy configuration to use."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.retry(com.azure.core.amqp.RetryOptions)"
  id: "retry(com.azure.core.amqp.RetryOptions)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "retry(RetryOptions retryOptions)"
  nameWithType: "EventHubClientBuilder.retry(RetryOptions retryOptions)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.retry(RetryOptions retryOptions)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.retry*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the retry policy for <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref>. If not specified, the default retry options are used."
  syntax:
    content: "public EventHubClientBuilder retry(RetryOptions retryOptions)"
    parameters:
    - id: "retryOptions"
      type: "com.azure.core.amqp.RetryOptions"
      description: "The retry policy to use."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler(reactor.core.scheduler.Scheduler)"
  id: "scheduler(reactor.core.scheduler.Scheduler)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "scheduler(Scheduler scheduler)"
  nameWithType: "EventHubClientBuilder.scheduler(Scheduler scheduler)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler(Scheduler scheduler)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the scheduler for operations such as connecting to and receiving or sending data to Event Hubs. If none is specified, an elastic pool is used."
  syntax:
    content: "public EventHubClientBuilder scheduler(Scheduler scheduler)"
    parameters:
    - id: "scheduler"
      type: "reactor.core.scheduler.Scheduler"
      description: "The scheduler for operations such as connecting to and receiving or sending data to Event Hubs."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition(com.azure.messaging.eventhubs.models.EventPosition)"
  id: "startingPosition(com.azure.messaging.eventhubs.models.EventPosition)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "startingPosition(EventPosition eventPosition)"
  nameWithType: "EventHubClientBuilder.startingPosition(EventPosition eventPosition)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition(EventPosition eventPosition)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the position within the partition where the consumer should begin reading events."
  syntax:
    content: "public EventHubClientBuilder startingPosition(EventPosition eventPosition)"
    parameters:
    - id: "eventPosition"
      type: "com.azure.messaging.eventhubs.models.EventPosition"
      description: "Position within an Event Hub partition to begin consuming events."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType(com.azure.core.amqp.TransportType)"
  id: "transportType(com.azure.core.amqp.TransportType)"
  parent: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  langs:
  - "java"
  name: "transportType(TransportType transport)"
  nameWithType: "EventHubClientBuilder.transportType(TransportType transport)"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType(TransportType transport)"
  overload: "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is <xref uid=\"\" data-throw-if-not-resolved=\"false\">TransportType#AMQP</xref>."
  syntax:
    content: "public EventHubClientBuilder transportType(TransportType transport)"
    parameters:
    - id: "transport"
      type: "com.azure.core.amqp.TransportType"
      description: "The transport type to use."
    return:
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> object."
references:
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder*"
  name: "EventHubClientBuilder"
  nameWithType: "EventHubClientBuilder.EventHubClientBuilder"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.EventHubClientBuilder"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString*"
  name: "connectionString"
  nameWithType: "EventHubClientBuilder.connectionString"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.connectionString"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "EventHubClientBuilder.configuration"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.configuration"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubConnection"
  name: "EventHubConnection"
  nameWithType: "EventHubConnection"
  fullName: "com.azure.messaging.eventhubs.EventHubConnection"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.connection*"
  name: "connection"
  nameWithType: "EventHubClientBuilder.connection"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.connection"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.credential.TokenCredential"
  spec.java:
  - uid: "com.azure.core.credential.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.credential*"
  name: "credential"
  nameWithType: "EventHubClientBuilder.credential"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.credential"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.amqp.models.ProxyConfiguration"
  spec.java:
  - uid: "com.azure.core.amqp.models.ProxyConfiguration"
    name: "ProxyConfiguration"
    fullName: "com.azure.core.amqp.models.ProxyConfiguration"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration*"
  name: "proxyConfiguration"
  nameWithType: "EventHubClientBuilder.proxyConfiguration"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.proxyConfiguration"
  package: "com.azure.messaging.eventhubs"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler*"
  name: "scheduler"
  nameWithType: "EventHubClientBuilder.scheduler"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.scheduler"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.amqp.TransportType"
  spec.java:
  - uid: "com.azure.core.amqp.TransportType"
    name: "TransportType"
    fullName: "com.azure.core.amqp.TransportType"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType*"
  name: "transportType"
  nameWithType: "EventHubClientBuilder.transportType"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.transportType"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.amqp.RetryOptions"
  spec.java:
  - uid: "com.azure.core.amqp.RetryOptions"
    name: "RetryOptions"
    fullName: "com.azure.core.amqp.RetryOptions"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.retry*"
  name: "retry"
  nameWithType: "EventHubClientBuilder.retry"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.retry"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.models.EventPosition"
  name: "EventPosition"
  nameWithType: "EventPosition"
  fullName: "com.azure.messaging.eventhubs.models.EventPosition"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition*"
  name: "startingPosition"
  nameWithType: "EventHubClientBuilder.startingPosition"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.startingPosition"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup*"
  name: "consumerGroup"
  nameWithType: "EventHubClientBuilder.consumerGroup"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerGroup"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  name: "EventHubConsumerOptions"
  nameWithType: "EventHubConsumerOptions"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions*"
  name: "consumerOptions"
  nameWithType: "EventHubClientBuilder.consumerOptions"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.consumerOptions"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection*"
  name: "buildConnection"
  nameWithType: "EventHubClientBuilder.buildConnection"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConnection"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient"
  name: "EventHubConsumerAsyncClient"
  nameWithType: "EventHubConsumerAsyncClient"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerAsyncClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer*"
  name: "buildAsyncConsumer"
  nameWithType: "EventHubClientBuilder.buildAsyncConsumer"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncConsumer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient"
  name: "EventHubConsumerClient"
  nameWithType: "EventHubConsumerClient"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer*"
  name: "buildConsumer"
  nameWithType: "EventHubClientBuilder.buildConsumer"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildConsumer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient"
  name: "EventHubProducerAsyncClient"
  nameWithType: "EventHubProducerAsyncClient"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerAsyncClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer*"
  name: "buildAsyncProducer"
  nameWithType: "EventHubClientBuilder.buildAsyncProducer"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncProducer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubProducerClient"
  name: "EventHubProducerClient"
  nameWithType: "EventHubProducerClient"
  fullName: "com.azure.messaging.eventhubs.EventHubProducerClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer*"
  name: "buildProducer"
  nameWithType: "EventHubClientBuilder.buildProducer"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildProducer"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubAsyncClient"
  name: "EventHubAsyncClient"
  nameWithType: "EventHubAsyncClient"
  fullName: "com.azure.messaging.eventhubs.EventHubAsyncClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "EventHubClientBuilder.buildAsyncClient"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildAsyncClient"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventHubClient"
  name: "EventHubClient"
  nameWithType: "EventHubClient"
  fullName: "com.azure.messaging.eventhubs.EventHubClient"
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "EventHubClientBuilder.buildClient"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder.buildClient"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
