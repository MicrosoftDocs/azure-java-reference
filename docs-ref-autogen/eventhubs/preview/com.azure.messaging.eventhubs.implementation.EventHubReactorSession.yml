### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession"
  id: "EventHubReactorSession"
  parent: "com.azure.messaging.eventhubs.implementation"
  children:
  - "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.CBSNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer)"
  - "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  langs:
  - "java"
  name: "EventHubReactorSession"
  nameWithType: "EventHubReactorSession"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession"
  type: "Class"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "An AMQP session for Event Hubs."
  syntax:
    content: " class EventHubReactorSession extends ReactorSession implements EventHubSession"
  inheritance:
  - "java.lang.Object"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase"
  - "com.azure.core.amqp.implementation.ReactorSession"
  implements:
  - "com.azure.messaging.eventhubs.implementation.EventHubSession"
  inheritedMembers:
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getConnectionStates()"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getCurrentState()"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getErrors()"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getShutdownSignals()"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyEndpointState(org.apache.qpid.proton.engine.EndpointState)"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyError(java.lang.Throwable)"
  - "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyShutdown(com.azure.core.amqp.AmqpShutdownSignal)"
  - "com.azure.core.amqp.implementation.ReactorSession.close()"
  - "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
  - "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  - "com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
  - "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
  - "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
  - "com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)"
  - "com.azure.core.amqp.implementation.ReactorSession.session()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.CBSNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer)"
  id: "EventHubReactorSession(org.apache.qpid.proton.engine.Session,com.azure.core.amqp.implementation.handler.SessionHandler,java.lang.String,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.ReactorHandlerProvider,reactor.core.publisher.Mono<com.azure.core.amqp.CBSNode>,com.azure.core.amqp.implementation.TokenManagerProvider,java.time.Duration,com.azure.core.amqp.implementation.MessageSerializer)"
  parent: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession"
  langs:
  - "java"
  name: "EventHubReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<CBSNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer)"
  nameWithType: "EventHubReactorSession.EventHubReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<CBSNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer)"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<CBSNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer)"
  overload: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "Creates a new AMQP session using proton-j."
  syntax:
    content: " EventHubReactorSession(Session session, SessionHandler sessionHandler, String sessionName, ReactorProvider provider, ReactorHandlerProvider handlerProvider, Mono<CBSNode> cbsNodeSupplier, TokenManagerProvider tokenManagerProvider, Duration openTimeout, MessageSerializer messageSerializer)"
    parameters:
    - id: "session"
      type: "org.apache.qpid.proton.engine.Session"
      description: "Proton-j session for this AMQP session."
    - id: "sessionHandler"
      type: "com.azure.core.amqp.implementation.handler.SessionHandler"
      description: "Handler for events that occur in the session."
    - id: "sessionName"
      type: "java.lang.String"
      description: "Name of the session."
    - id: "provider"
      type: "com.azure.core.amqp.implementation.ReactorProvider"
      description: "Provides reactor instances for messages to sent with."
    - id: "handlerProvider"
      type: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
      description: "Providers reactor handlers for listening to proton-j reactor events."
    - id: "cbsNodeSupplier"
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.CBSNode>"
      description: "Mono that returns a reference to the <xref uid=\"com.azure.core.amqp.CBSNode\" data-throw-if-not-resolved=\"false\">CBSNode</xref>."
    - id: "tokenManagerProvider"
      type: "com.azure.core.amqp.implementation.TokenManagerProvider"
      description: "Provides <xref uid=\"\" data-throw-if-not-resolved=\"false\">TokenManager</xref> that authorizes the client when performing\n     operations on the message broker."
    - id: "openTimeout"
      type: "java.time.Duration"
      description: "Timeout to wait for the session operation to complete."
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  id: "createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.models.EventHubConsumerOptions)"
  parent: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession"
  langs:
  - "java"
  name: "createConsumer(String linkName, String entityPath, Duration timeout, RetryPolicy retry, EventPosition eventPosition, EventHubConsumerOptions options)"
  nameWithType: "EventHubReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, RetryPolicy retry, EventPosition eventPosition, EventHubConsumerOptions options)"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer(String linkName, String entityPath, Duration timeout, RetryPolicy retry, EventPosition eventPosition, EventHubConsumerOptions options)"
  overload: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.implementation"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, Duration timeout, RetryPolicy retry, EventPosition eventPosition, EventHubConsumerOptions options)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.time.Duration"
    - id: "retry"
      type: "com.azure.core.amqp.RetryPolicy"
    - id: "eventPosition"
      type: "com.azure.messaging.eventhubs.models.EventPosition"
    - id: "options"
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
references:
- uid: "org.apache.qpid.proton.engine.Session"
  spec.java:
  - uid: "org.apache.qpid.proton.engine.Session"
    name: "Session"
    fullName: "org.apache.qpid.proton.engine.Session"
- uid: "com.azure.core.amqp.implementation.handler.SessionHandler"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.handler.SessionHandler"
    name: "SessionHandler"
    fullName: "com.azure.core.amqp.implementation.handler.SessionHandler"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ReactorProvider"
    name: "ReactorProvider"
    fullName: "com.azure.core.amqp.implementation.ReactorProvider"
- uid: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
    name: "ReactorHandlerProvider"
    fullName: "com.azure.core.amqp.implementation.ReactorHandlerProvider"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.CBSNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.CBSNode"
    name: "CBSNode"
    fullName: "com.azure.core.amqp.CBSNode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.TokenManagerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.TokenManagerProvider"
    name: "TokenManagerProvider"
    fullName: "com.azure.core.amqp.implementation.TokenManagerProvider"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.MessageSerializer"
    name: "MessageSerializer"
    fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession*"
  name: "EventHubReactorSession"
  nameWithType: "EventHubReactorSession.EventHubReactorSession"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.EventHubReactorSession"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "com.azure.core.amqp.RetryPolicy"
  spec.java:
  - uid: "com.azure.core.amqp.RetryPolicy"
    name: "RetryPolicy"
    fullName: "com.azure.core.amqp.RetryPolicy"
- uid: "com.azure.messaging.eventhubs.models.EventPosition"
  name: "EventPosition"
  nameWithType: "EventPosition"
  fullName: "com.azure.messaging.eventhubs.models.EventPosition"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  name: "EventHubConsumerOptions"
  nameWithType: "EventHubConsumerOptions"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer*"
  name: "createConsumer"
  nameWithType: "EventHubReactorSession.createConsumer"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubReactorSession.createConsumer"
  package: "com.azure.messaging.eventhubs.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSession"
  name: "ReactorSession"
  nameWithType: "ReactorSession"
  fullName: "com.azure.core.amqp.implementation.ReactorSession"
- uid: "com.azure.messaging.eventhubs.implementation.EventHubSession"
  name: "EventHubSession"
  nameWithType: "EventHubSession"
  fullName: "com.azure.messaging.eventhubs.implementation.EventHubSession"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
  name: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy)"
  nameWithType: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getConnectionStates()"
  name: "EndpointStateNotifierBase.getConnectionStates()"
  nameWithType: "EndpointStateNotifierBase.getConnectionStates()"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getConnectionStates()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.close()"
  name: "ReactorSession.close()"
  nameWithType: "ReactorSession.close()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.close()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
  name: "ReactorSession.createProducer(String,String,Duration,RetryPolicy)"
  nameWithType: "ReactorSession.createProducer(String,String,Duration,RetryPolicy)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createProducer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy)"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getErrors()"
  name: "EndpointStateNotifierBase.getErrors()"
  nameWithType: "EndpointStateNotifierBase.getErrors()"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getErrors()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyError(java.lang.Throwable)"
  name: "EndpointStateNotifierBase.notifyError(Throwable)"
  nameWithType: "EndpointStateNotifierBase.notifyError(Throwable)"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyError(java.lang.Throwable)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getShutdownSignals()"
  name: "EndpointStateNotifierBase.getShutdownSignals()"
  nameWithType: "EndpointStateNotifierBase.getShutdownSignals()"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getShutdownSignals()"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyShutdown(com.azure.core.amqp.AmqpShutdownSignal)"
  name: "EndpointStateNotifierBase.notifyShutdown(AmqpShutdownSignal)"
  nameWithType: "EndpointStateNotifierBase.notifyShutdown(AmqpShutdownSignal)"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyShutdown(com.azure.core.amqp.AmqpShutdownSignal)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)"
  name: "ReactorSession.removeLink(String)"
  nameWithType: "ReactorSession.removeLink(String)"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.removeLink(java.lang.String)"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  name: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy,Map<Symbol,UnknownDescribedType>,Map<Symbol,Object>,Symbol[])"
  nameWithType: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy,Map<Symbol,UnknownDescribedType>,Map<Symbol,Object>,Symbol[])"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,java.util.Map<org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map<org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getCurrentState()"
  name: "EndpointStateNotifierBase.getCurrentState()"
  nameWithType: "EndpointStateNotifierBase.getCurrentState()"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.getCurrentState()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyEndpointState(org.apache.qpid.proton.engine.EndpointState)"
  name: "EndpointStateNotifierBase.notifyEndpointState(EndpointState)"
  nameWithType: "EndpointStateNotifierBase.notifyEndpointState(EndpointState)"
  fullName: "com.azure.core.amqp.implementation.EndpointStateNotifierBase.notifyEndpointState(org.apache.qpid.proton.engine.EndpointState)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
  name: "ReactorSession.getOperationTimeout()"
  nameWithType: "ReactorSession.getOperationTimeout()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getOperationTimeout()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.session()"
  name: "ReactorSession.session()"
  nameWithType: "ReactorSession.session()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.session()"
- uid: "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
  name: "ReactorSession.getSessionName()"
  nameWithType: "ReactorSession.getSessionName()"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.getSessionName()"
- uid: "com.azure.core.amqp.CBSNode"
  name: "CBSNode"
  nameWithType: "CBSNode"
  fullName: "com.azure.core.amqp.CBSNode"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
- uid: "org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
  name: "Symbol,Object>,Symbol[])"
  nameWithType: "Symbol,Object>,Symbol[])"
  fullName: "org.apache.qpid.proton.amqp.Symbol,java.lang.Object>,org.apache.qpid.proton.amqp.Symbol[])"
- uid: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,java.util.Map"
  name: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy,Map"
  nameWithType: "ReactorSession.createConsumer(String,String,Duration,RetryPolicy,Map"
  fullName: "com.azure.core.amqp.implementation.ReactorSession.createConsumer(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.amqp.RetryPolicy,java.util.Map"
- uid: "org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map"
  name: "Symbol,UnknownDescribedType>,Map"
  nameWithType: "Symbol,UnknownDescribedType>,Map"
  fullName: "org.apache.qpid.proton.amqp.Symbol,org.apache.qpid.proton.amqp.UnknownDescribedType>,java.util.Map"
