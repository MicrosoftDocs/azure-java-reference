### YamlMime:ManagedReference
items:
- uid: com.microsoft.signalr._http_connection_options
  id: _http_connection_options
  parent: com.microsoft.signalr
  children:
  - com.microsoft.signalr._http_connection_options.getAccessTokenProvider()
  - com.microsoft.signalr._http_connection_options.getLogger()
  - com.microsoft.signalr._http_connection_options.getLoglevel()
  - com.microsoft.signalr._http_connection_options.getSkipNegotiate()
  - com.microsoft.signalr._http_connection_options.getTransport()
  - com.microsoft.signalr._http_connection_options.HttpConnectionOptions()
  - com.microsoft.signalr._http_connection_options.HttpConnectionOptions(Transport,Logger,boolean)
  - com.microsoft.signalr._http_connection_options.HttpConnectionOptions(Transport,LogLevel,boolean)
  - com.microsoft.signalr._http_connection_options.setAccessTokenProvider(Supplier<CompletableFuture<String>>)
  - com.microsoft.signalr._http_connection_options.setLogger(Logger)
  - com.microsoft.signalr._http_connection_options.setLoglevel(LogLevel)
  - com.microsoft.signalr._http_connection_options.setSkipNegotiate(boolean)
  - com.microsoft.signalr._http_connection_options.setTransport(Transport)
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: HttpConnectionOptions
  nameWithType: HttpConnectionOptions
  fullName: com.microsoft.signalr.HttpConnectionOptions
  type: Class
  source:
    remote: &o0
      path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
      branch: release/2.2
      repo: https://github.com/aspnet/SignalR
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 8
  package: com.microsoft.signalr
  syntax:
    content: public class HttpConnectionOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.signalr._http_connection_options.getAccessTokenProvider()
  id: getAccessTokenProvider()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: getAccessTokenProvider()
  nameWithType: HttpConnectionOptions.getAccessTokenProvider()
  fullName: com.microsoft.signalr.HttpConnectionOptions.getAccessTokenProvider()
  overload: com.microsoft.signalr._http_connection_options.getAccessTokenProvider*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 66
  package: com.microsoft.signalr
  syntax:
    content: public Supplier<CompletableFuture<String>> getAccessTokenProvider()
    return:
      type: e3889fc4
- uid: com.microsoft.signalr._http_connection_options.getLogger()
  id: getLogger()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: getLogger()
  nameWithType: HttpConnectionOptions.getLogger()
  fullName: com.microsoft.signalr.HttpConnectionOptions.getLogger()
  overload: com.microsoft.signalr._http_connection_options.getLogger*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 54
  package: com.microsoft.signalr
  syntax:
    content: public Logger getLogger()
    return:
      type: com.microsoft.signalr._logger
- uid: com.microsoft.signalr._http_connection_options.getLoglevel()
  id: getLoglevel()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: getLoglevel()
  nameWithType: HttpConnectionOptions.getLoglevel()
  fullName: com.microsoft.signalr.HttpConnectionOptions.getLoglevel()
  overload: com.microsoft.signalr._http_connection_options.getLoglevel*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 46
  package: com.microsoft.signalr
  syntax:
    content: public LogLevel getLoglevel()
    return:
      type: com.microsoft.signalr._log_level
- uid: com.microsoft.signalr._http_connection_options.getSkipNegotiate()
  id: getSkipNegotiate()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: getSkipNegotiate()
  nameWithType: HttpConnectionOptions.getSkipNegotiate()
  fullName: com.microsoft.signalr.HttpConnectionOptions.getSkipNegotiate()
  overload: com.microsoft.signalr._http_connection_options.getSkipNegotiate*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 50
  package: com.microsoft.signalr
  syntax:
    content: public boolean getSkipNegotiate()
    return:
      type: 4fc6e284
- uid: com.microsoft.signalr._http_connection_options.getTransport()
  id: getTransport()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: getTransport()
  nameWithType: HttpConnectionOptions.getTransport()
  fullName: com.microsoft.signalr.HttpConnectionOptions.getTransport()
  overload: com.microsoft.signalr._http_connection_options.getTransport*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 42
  package: com.microsoft.signalr
  syntax:
    content: public Transport getTransport()
    return:
      type: 88c4f0f5
- uid: com.microsoft.signalr._http_connection_options.HttpConnectionOptions()
  id: HttpConnectionOptions()
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: HttpConnectionOptions()
  nameWithType: HttpConnectionOptions.HttpConnectionOptions()
  fullName: com.microsoft.signalr.HttpConnectionOptions.HttpConnectionOptions()
  overload: com.microsoft.signalr._http_connection_options.HttpConnectionOptions*
  type: Constructor
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 16
  package: com.microsoft.signalr
  syntax:
    content: public HttpConnectionOptions()
- uid: com.microsoft.signalr._http_connection_options.HttpConnectionOptions(Transport,Logger,boolean)
  id: HttpConnectionOptions(Transport,Logger,boolean)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: HttpConnectionOptions(Transport transport, Logger logger, boolean skipNegotiate)
  nameWithType: HttpConnectionOptions.HttpConnectionOptions(Transport transport, Logger logger, boolean skipNegotiate)
  fullName: com.microsoft.signalr.HttpConnectionOptions.HttpConnectionOptions(Transport transport, Logger logger, boolean skipNegotiate)
  overload: com.microsoft.signalr._http_connection_options.HttpConnectionOptions*
  type: Constructor
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 24
  package: com.microsoft.signalr
  syntax:
    content: public HttpConnectionOptions(Transport transport, Logger logger, boolean skipNegotiate)
    parameters:
    - id: transport
      type: 88c4f0f5
    - id: logger
      type: com.microsoft.signalr._logger
    - id: skipNegotiate
      type: 4fc6e284
- uid: com.microsoft.signalr._http_connection_options.HttpConnectionOptions(Transport,LogLevel,boolean)
  id: HttpConnectionOptions(Transport,LogLevel,boolean)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: HttpConnectionOptions(Transport transport, LogLevel logLevel, boolean skipNegotiate)
  nameWithType: HttpConnectionOptions.HttpConnectionOptions(Transport transport, LogLevel logLevel, boolean skipNegotiate)
  fullName: com.microsoft.signalr.HttpConnectionOptions.HttpConnectionOptions(Transport transport, LogLevel logLevel, boolean skipNegotiate)
  overload: com.microsoft.signalr._http_connection_options.HttpConnectionOptions*
  type: Constructor
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 18
  package: com.microsoft.signalr
  syntax:
    content: public HttpConnectionOptions(Transport transport, LogLevel logLevel, boolean skipNegotiate)
    parameters:
    - id: transport
      type: 88c4f0f5
    - id: logLevel
      type: com.microsoft.signalr._log_level
    - id: skipNegotiate
      type: 4fc6e284
- uid: com.microsoft.signalr._http_connection_options.setAccessTokenProvider(Supplier<CompletableFuture<String>>)
  id: setAccessTokenProvider(Supplier<CompletableFuture<String>>)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: setAccessTokenProvider(Supplier<CompletableFuture<String>> accessTokenProvider)
  nameWithType: HttpConnectionOptions.setAccessTokenProvider(Supplier<CompletableFuture<String>> accessTokenProvider)
  fullName: com.microsoft.signalr.HttpConnectionOptions.setAccessTokenProvider(Supplier<CompletableFuture<String>> accessTokenProvider)
  overload: com.microsoft.signalr._http_connection_options.setAccessTokenProvider*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 62
  package: com.microsoft.signalr
  syntax:
    content: public void setAccessTokenProvider(Supplier<CompletableFuture<String>> accessTokenProvider)
    parameters:
    - id: accessTokenProvider
      type: e3889fc4
- uid: com.microsoft.signalr._http_connection_options.setLogger(Logger)
  id: setLogger(Logger)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: setLogger(Logger logger)
  nameWithType: HttpConnectionOptions.setLogger(Logger logger)
  fullName: com.microsoft.signalr.HttpConnectionOptions.setLogger(Logger logger)
  overload: com.microsoft.signalr._http_connection_options.setLogger*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 58
  package: com.microsoft.signalr
  syntax:
    content: public void setLogger(Logger logger)
    parameters:
    - id: logger
      type: com.microsoft.signalr._logger
- uid: com.microsoft.signalr._http_connection_options.setLoglevel(LogLevel)
  id: setLoglevel(LogLevel)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: setLoglevel(LogLevel loglevel)
  nameWithType: HttpConnectionOptions.setLoglevel(LogLevel loglevel)
  fullName: com.microsoft.signalr.HttpConnectionOptions.setLoglevel(LogLevel loglevel)
  overload: com.microsoft.signalr._http_connection_options.setLoglevel*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 34
  package: com.microsoft.signalr
  syntax:
    content: public void setLoglevel(LogLevel loglevel)
    parameters:
    - id: loglevel
      type: com.microsoft.signalr._log_level
- uid: com.microsoft.signalr._http_connection_options.setSkipNegotiate(boolean)
  id: setSkipNegotiate(boolean)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: setSkipNegotiate(boolean skipNegotiate)
  nameWithType: HttpConnectionOptions.setSkipNegotiate(boolean skipNegotiate)
  fullName: com.microsoft.signalr.HttpConnectionOptions.setSkipNegotiate(boolean skipNegotiate)
  overload: com.microsoft.signalr._http_connection_options.setSkipNegotiate*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 38
  package: com.microsoft.signalr
  syntax:
    content: public void setSkipNegotiate(boolean skipNegotiate)
    parameters:
    - id: skipNegotiate
      type: 4fc6e284
- uid: com.microsoft.signalr._http_connection_options.setTransport(Transport)
  id: setTransport(Transport)
  parent: com.microsoft.signalr._http_connection_options
  href: com.microsoft.signalr._http_connection_options.yml
  langs:
  - java
  name: setTransport(Transport transport)
  nameWithType: HttpConnectionOptions.setTransport(Transport transport)
  fullName: com.microsoft.signalr.HttpConnectionOptions.setTransport(Transport transport)
  overload: com.microsoft.signalr._http_connection_options.setTransport*
  type: Method
  source:
    remote: *o0
    path: clients/java/signalr/src/main/java/com/microsoft/signalr/HttpConnectionOptions.java
    startLine: 30
  package: com.microsoft.signalr
  syntax:
    content: public void setTransport(Transport transport)
    parameters:
    - id: transport
      type: 88c4f0f5
references:
- uid: com.microsoft.signalr._http_connection_options.HttpConnectionOptions*
  name: HttpConnectionOptions
  nameWithType: HttpConnectionOptions.HttpConnectionOptions
  fullName: com.microsoft.signalr.HttpConnectionOptions.HttpConnectionOptions
  package: com.microsoft.signalr
- uid: 88c4f0f5
  spec.java:
  - name: Transport
    fullName: Transport
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.signalr._http_connection_options.setTransport*
  name: setTransport
  nameWithType: HttpConnectionOptions.setTransport
  fullName: com.microsoft.signalr.HttpConnectionOptions.setTransport
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.setLoglevel*
  name: setLoglevel
  nameWithType: HttpConnectionOptions.setLoglevel
  fullName: com.microsoft.signalr.HttpConnectionOptions.setLoglevel
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.setSkipNegotiate*
  name: setSkipNegotiate
  nameWithType: HttpConnectionOptions.setSkipNegotiate
  fullName: com.microsoft.signalr.HttpConnectionOptions.setSkipNegotiate
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.getTransport*
  name: getTransport
  nameWithType: HttpConnectionOptions.getTransport
  fullName: com.microsoft.signalr.HttpConnectionOptions.getTransport
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.getLoglevel*
  name: getLoglevel
  nameWithType: HttpConnectionOptions.getLoglevel
  fullName: com.microsoft.signalr.HttpConnectionOptions.getLoglevel
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.getSkipNegotiate*
  name: getSkipNegotiate
  nameWithType: HttpConnectionOptions.getSkipNegotiate
  fullName: com.microsoft.signalr.HttpConnectionOptions.getSkipNegotiate
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.getLogger*
  name: getLogger
  nameWithType: HttpConnectionOptions.getLogger
  fullName: com.microsoft.signalr.HttpConnectionOptions.getLogger
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.setLogger*
  name: setLogger
  nameWithType: HttpConnectionOptions.setLogger
  fullName: com.microsoft.signalr.HttpConnectionOptions.setLogger
  package: com.microsoft.signalr
- uid: e3889fc4
  spec.java:
  - name: Supplier<CompletableFuture<String>>
    fullName: Supplier<CompletableFuture<String>>
- uid: com.microsoft.signalr._http_connection_options.setAccessTokenProvider*
  name: setAccessTokenProvider
  nameWithType: HttpConnectionOptions.setAccessTokenProvider
  fullName: com.microsoft.signalr.HttpConnectionOptions.setAccessTokenProvider
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._http_connection_options.getAccessTokenProvider*
  name: getAccessTokenProvider
  nameWithType: HttpConnectionOptions.getAccessTokenProvider
  fullName: com.microsoft.signalr.HttpConnectionOptions.getAccessTokenProvider
  package: com.microsoft.signalr
- uid: com.microsoft.signalr._log_level
  parent: com.microsoft.signalr
  href: com.microsoft.signalr._log_level.yml
  name: LogLevel
  nameWithType: LogLevel
  fullName: com.microsoft.signalr.LogLevel
  type: Enum
  syntax:
    content: public enum LogLevel
- uid: com.microsoft.signalr._logger
  parent: com.microsoft.signalr
  href: com.microsoft.signalr._logger.yml
  name: Logger
  nameWithType: Logger
  fullName: com.microsoft.signalr.Logger
  type: Interface
  syntax:
    content: public interface Logger
