### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.Action3"
  id: "Action3"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.Action3.invoke(T1,T2,T3)"
  langs:
  - "java"
  name: "Action3<T1,T2,T3>"
  nameWithType: "Action3<T1,T2,T3>"
  fullName: "com.microsoft.signalr.Action3<T1,T2,T3>"
  type: "Interface"
  package: "com.microsoft.signalr"
  summary: "A callback that takes three parameters."
  syntax:
    content: "public interface Action3<T1,T2,T3>"
    typeParameters:
    - id: "T1"
    - id: "T2"
    - id: "T3"
- uid: "com.microsoft.signalr.Action3.invoke(T1,T2,T3)"
  id: "invoke(T1,T2,T3)"
  parent: "com.microsoft.signalr.Action3"
  langs:
  - "java"
  name: "invoke(T1 param1, T2 param2, T3 param3)"
  nameWithType: "Action3<T1,T2,T3>.invoke(T1 param1, T2 param2, T3 param3)"
  fullName: "com.microsoft.signalr.Action3<T1,T2,T3>.invoke(T1 param1, T2 param2, T3 param3)"
  overload: "com.microsoft.signalr.Action3.invoke*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract void invoke(T1 param1, T2 param2, T3 param3)"
    parameters:
    - id: "param1"
      type: "T1"
    - id: "param2"
      type: "T2"
    - id: "param3"
      type: "T3"
references:
- uid: "T1"
  spec.java:
  - uid: "T1"
    name: "T1"
    fullName: "T1"
- uid: "T2"
  spec.java:
  - uid: "T2"
    name: "T2"
    fullName: "T2"
- uid: "T3"
  spec.java:
  - uid: "T3"
    name: "T3"
    fullName: "T3"
- uid: "com.microsoft.signalr.Action3.invoke*"
  name: "invoke"
  nameWithType: "Action3<T1,T2,T3>.invoke"
  fullName: "com.microsoft.signalr.Action3<T1,T2,T3>.invoke"
  package: "com.microsoft.signalr"
