### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.NegotiateResponse"
  id: "NegotiateResponse"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.NegotiateResponse.NegotiateResponse(java.lang.String)"
  - "com.microsoft.signalr.NegotiateResponse.getAccessToken()"
  - "com.microsoft.signalr.NegotiateResponse.getAvailableTransports()"
  - "com.microsoft.signalr.NegotiateResponse.getConnectionId()"
  - "com.microsoft.signalr.NegotiateResponse.getError()"
  - "com.microsoft.signalr.NegotiateResponse.getRedirectUrl()"
  langs:
  - "java"
  name: "NegotiateResponse"
  nameWithType: "NegotiateResponse"
  fullName: "com.microsoft.signalr.NegotiateResponse"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: " class NegotiateResponse"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.NegotiateResponse.NegotiateResponse(java.lang.String)"
  id: "NegotiateResponse(java.lang.String)"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "NegotiateResponse(String negotiatePayload)"
  nameWithType: "NegotiateResponse.NegotiateResponse(String negotiatePayload)"
  fullName: "com.microsoft.signalr.NegotiateResponse.NegotiateResponse(String negotiatePayload)"
  overload: "com.microsoft.signalr.NegotiateResponse.NegotiateResponse*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: "public NegotiateResponse(String negotiatePayload)"
    parameters:
    - id: "negotiatePayload"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.NegotiateResponse.getAccessToken()"
  id: "getAccessToken()"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "getAccessToken()"
  nameWithType: "NegotiateResponse.getAccessToken()"
  fullName: "com.microsoft.signalr.NegotiateResponse.getAccessToken()"
  overload: "com.microsoft.signalr.NegotiateResponse.getAccessToken*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getAccessToken()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.NegotiateResponse.getAvailableTransports()"
  id: "getAvailableTransports()"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "getAvailableTransports()"
  nameWithType: "NegotiateResponse.getAvailableTransports()"
  fullName: "com.microsoft.signalr.NegotiateResponse.getAvailableTransports()"
  overload: "com.microsoft.signalr.NegotiateResponse.getAvailableTransports*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public Set<String> getAvailableTransports()"
    return:
      type: "java.util.Set<java.lang.String>"
- uid: "com.microsoft.signalr.NegotiateResponse.getConnectionId()"
  id: "getConnectionId()"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "getConnectionId()"
  nameWithType: "NegotiateResponse.getConnectionId()"
  fullName: "com.microsoft.signalr.NegotiateResponse.getConnectionId()"
  overload: "com.microsoft.signalr.NegotiateResponse.getConnectionId*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getConnectionId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.NegotiateResponse.getError()"
  id: "getError()"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "getError()"
  nameWithType: "NegotiateResponse.getError()"
  fullName: "com.microsoft.signalr.NegotiateResponse.getError()"
  overload: "com.microsoft.signalr.NegotiateResponse.getError*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getError()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.signalr.NegotiateResponse.getRedirectUrl()"
  id: "getRedirectUrl()"
  parent: "com.microsoft.signalr.NegotiateResponse"
  langs:
  - "java"
  name: "getRedirectUrl()"
  nameWithType: "NegotiateResponse.getRedirectUrl()"
  fullName: "com.microsoft.signalr.NegotiateResponse.getRedirectUrl()"
  overload: "com.microsoft.signalr.NegotiateResponse.getRedirectUrl*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public String getRedirectUrl()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.NegotiateResponse.NegotiateResponse*"
  name: "NegotiateResponse"
  nameWithType: "NegotiateResponse.NegotiateResponse"
  fullName: "com.microsoft.signalr.NegotiateResponse.NegotiateResponse"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.NegotiateResponse.getConnectionId*"
  name: "getConnectionId"
  nameWithType: "NegotiateResponse.getConnectionId"
  fullName: "com.microsoft.signalr.NegotiateResponse.getConnectionId"
  package: "com.microsoft.signalr"
- uid: "java.util.Set<java.lang.String>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.signalr.NegotiateResponse.getAvailableTransports*"
  name: "getAvailableTransports"
  nameWithType: "NegotiateResponse.getAvailableTransports"
  fullName: "com.microsoft.signalr.NegotiateResponse.getAvailableTransports"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.NegotiateResponse.getRedirectUrl*"
  name: "getRedirectUrl"
  nameWithType: "NegotiateResponse.getRedirectUrl"
  fullName: "com.microsoft.signalr.NegotiateResponse.getRedirectUrl"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.NegotiateResponse.getAccessToken*"
  name: "getAccessToken"
  nameWithType: "NegotiateResponse.getAccessToken"
  fullName: "com.microsoft.signalr.NegotiateResponse.getAccessToken"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.NegotiateResponse.getError*"
  name: "getError"
  nameWithType: "NegotiateResponse.getError"
  fullName: "com.microsoft.signalr.NegotiateResponse.getError"
  package: "com.microsoft.signalr"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
