### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.WebSocketWrapper"
  id: "WebSocketWrapper"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper()"
  - "com.microsoft.signalr.WebSocketWrapper.send(java.lang.String)"
  - "com.microsoft.signalr.WebSocketWrapper.setOnClose(com.microsoft.signalr.WebSocketOnClosedCallback)"
  - "com.microsoft.signalr.WebSocketWrapper.setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  - "com.microsoft.signalr.WebSocketWrapper.start()"
  - "com.microsoft.signalr.WebSocketWrapper.stop()"
  langs:
  - "java"
  name: "WebSocketWrapper"
  nameWithType: "WebSocketWrapper"
  fullName: "com.microsoft.signalr.WebSocketWrapper"
  type: "Class"
  package: "com.microsoft.signalr"
  syntax:
    content: "abstract class WebSocketWrapper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper()"
  id: "WebSocketWrapper()"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "WebSocketWrapper()"
  nameWithType: "WebSocketWrapper.WebSocketWrapper()"
  fullName: "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper()"
  overload: "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: " WebSocketWrapper()"
- uid: "com.microsoft.signalr.WebSocketWrapper.send(java.lang.String)"
  id: "send(java.lang.String)"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "send(String message)"
  nameWithType: "WebSocketWrapper.send(String message)"
  fullName: "com.microsoft.signalr.WebSocketWrapper.send(String message)"
  overload: "com.microsoft.signalr.WebSocketWrapper.send*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract Completable send(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
    return:
      type: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketWrapper.setOnClose(com.microsoft.signalr.WebSocketOnClosedCallback)"
  id: "setOnClose(com.microsoft.signalr.WebSocketOnClosedCallback)"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "setOnClose(WebSocketOnClosedCallback onClose)"
  nameWithType: "WebSocketWrapper.setOnClose(WebSocketOnClosedCallback onClose)"
  fullName: "com.microsoft.signalr.WebSocketWrapper.setOnClose(WebSocketOnClosedCallback onClose)"
  overload: "com.microsoft.signalr.WebSocketWrapper.setOnClose*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract void setOnClose(WebSocketOnClosedCallback onClose)"
    parameters:
    - id: "onClose"
      type: "com.microsoft.signalr.WebSocketOnClosedCallback"
- uid: "com.microsoft.signalr.WebSocketWrapper.setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  id: "setOnReceive(com.microsoft.signalr.OnReceiveCallBack)"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "setOnReceive(OnReceiveCallBack onReceive)"
  nameWithType: "WebSocketWrapper.setOnReceive(OnReceiveCallBack onReceive)"
  fullName: "com.microsoft.signalr.WebSocketWrapper.setOnReceive(OnReceiveCallBack onReceive)"
  overload: "com.microsoft.signalr.WebSocketWrapper.setOnReceive*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract void setOnReceive(OnReceiveCallBack onReceive)"
    parameters:
    - id: "onReceive"
      type: "com.microsoft.signalr.OnReceiveCallBack"
- uid: "com.microsoft.signalr.WebSocketWrapper.start()"
  id: "start()"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "start()"
  nameWithType: "WebSocketWrapper.start()"
  fullName: "com.microsoft.signalr.WebSocketWrapper.start()"
  overload: "com.microsoft.signalr.WebSocketWrapper.start*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract Completable start()"
    return:
      type: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketWrapper.stop()"
  id: "stop()"
  parent: "com.microsoft.signalr.WebSocketWrapper"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "WebSocketWrapper.stop()"
  fullName: "com.microsoft.signalr.WebSocketWrapper.stop()"
  overload: "com.microsoft.signalr.WebSocketWrapper.stop*"
  type: "Method"
  package: "com.microsoft.signalr"
  syntax:
    content: "public abstract Completable stop()"
    return:
      type: "io.reactivex.Completable"
references:
- uid: "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper*"
  name: "WebSocketWrapper"
  nameWithType: "WebSocketWrapper.WebSocketWrapper"
  fullName: "com.microsoft.signalr.WebSocketWrapper.WebSocketWrapper"
  package: "com.microsoft.signalr"
- uid: "io.reactivex.Completable"
  spec.java:
  - uid: "io.reactivex.Completable"
    name: "Completable"
    fullName: "io.reactivex.Completable"
- uid: "com.microsoft.signalr.WebSocketWrapper.start*"
  name: "start"
  nameWithType: "WebSocketWrapper.start"
  fullName: "com.microsoft.signalr.WebSocketWrapper.start"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.WebSocketWrapper.stop*"
  name: "stop"
  nameWithType: "WebSocketWrapper.stop"
  fullName: "com.microsoft.signalr.WebSocketWrapper.stop"
  package: "com.microsoft.signalr"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.WebSocketWrapper.send*"
  name: "send"
  nameWithType: "WebSocketWrapper.send"
  fullName: "com.microsoft.signalr.WebSocketWrapper.send"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.OnReceiveCallBack"
  name: "OnReceiveCallBack"
  nameWithType: "OnReceiveCallBack"
  fullName: "com.microsoft.signalr.OnReceiveCallBack"
- uid: "com.microsoft.signalr.WebSocketWrapper.setOnReceive*"
  name: "setOnReceive"
  nameWithType: "WebSocketWrapper.setOnReceive"
  fullName: "com.microsoft.signalr.WebSocketWrapper.setOnReceive"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.WebSocketOnClosedCallback"
  name: "WebSocketOnClosedCallback"
  nameWithType: "WebSocketOnClosedCallback"
  fullName: "com.microsoft.signalr.WebSocketOnClosedCallback"
- uid: "com.microsoft.signalr.WebSocketWrapper.setOnClose*"
  name: "setOnClose"
  nameWithType: "WebSocketWrapper.setOnClose"
  fullName: "com.microsoft.signalr.WebSocketWrapper.setOnClose"
  package: "com.microsoft.signalr"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
