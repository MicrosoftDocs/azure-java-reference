### YamlMime:ManagedReference
items:
- uid: "com.microsoft.signalr.Subscription"
  id: "Subscription"
  parent: "com.microsoft.signalr"
  children:
  - "com.microsoft.signalr.Subscription.Subscription(com.microsoft.signalr.CallbackMap,com.microsoft.signalr.InvocationHandler,java.lang.String)"
  - "com.microsoft.signalr.Subscription.unsubscribe()"
  langs:
  - "java"
  name: "Subscription"
  nameWithType: "Subscription"
  fullName: "com.microsoft.signalr.Subscription"
  type: "Class"
  package: "com.microsoft.signalr"
  summary: "Represents the registration of a handler for a client method."
  syntax:
    content: "public class Subscription"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.signalr.Subscription.Subscription(com.microsoft.signalr.CallbackMap,com.microsoft.signalr.InvocationHandler,java.lang.String)"
  id: "Subscription(com.microsoft.signalr.CallbackMap,com.microsoft.signalr.InvocationHandler,java.lang.String)"
  parent: "com.microsoft.signalr.Subscription"
  langs:
  - "java"
  name: "Subscription(CallbackMap handlers, InvocationHandler handler, String target)"
  nameWithType: "Subscription.Subscription(CallbackMap handlers, InvocationHandler handler, String target)"
  fullName: "com.microsoft.signalr.Subscription.Subscription(CallbackMap handlers, InvocationHandler handler, String target)"
  overload: "com.microsoft.signalr.Subscription.Subscription*"
  type: "Constructor"
  package: "com.microsoft.signalr"
  syntax:
    content: " Subscription(CallbackMap handlers, InvocationHandler handler, String target)"
    parameters:
    - id: "handlers"
      type: "com.microsoft.signalr.CallbackMap"
    - id: "handler"
      type: "com.microsoft.signalr.InvocationHandler"
    - id: "target"
      type: "java.lang.String"
- uid: "com.microsoft.signalr.Subscription.unsubscribe()"
  id: "unsubscribe()"
  parent: "com.microsoft.signalr.Subscription"
  langs:
  - "java"
  name: "unsubscribe()"
  nameWithType: "Subscription.unsubscribe()"
  fullName: "com.microsoft.signalr.Subscription.unsubscribe()"
  overload: "com.microsoft.signalr.Subscription.unsubscribe*"
  type: "Method"
  package: "com.microsoft.signalr"
  summary: "Removes the client method handler represented by this subscription."
  syntax:
    content: "public void unsubscribe()"
references:
- uid: "com.microsoft.signalr.CallbackMap"
  name: "CallbackMap"
  nameWithType: "CallbackMap"
  fullName: "com.microsoft.signalr.CallbackMap"
- uid: "com.microsoft.signalr.InvocationHandler"
  name: "InvocationHandler"
  nameWithType: "InvocationHandler"
  fullName: "com.microsoft.signalr.InvocationHandler"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.signalr.Subscription.Subscription*"
  name: "Subscription"
  nameWithType: "Subscription.Subscription"
  fullName: "com.microsoft.signalr.Subscription.Subscription"
  package: "com.microsoft.signalr"
- uid: "com.microsoft.signalr.Subscription.unsubscribe*"
  name: "unsubscribe"
  nameWithType: "Subscription.unsubscribe"
  fullName: "com.microsoft.signalr.Subscription.unsubscribe"
  package: "com.microsoft.signalr"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
