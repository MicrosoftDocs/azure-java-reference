### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.changefeed.Lease"
  id: "Lease"
  parent: "com.azure.cosmos.internal.changefeed"
  children:
  - "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken()"
  - "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken()"
  - "com.azure.cosmos.internal.changefeed.Lease.getId()"
  - "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken()"
  - "com.azure.cosmos.internal.changefeed.Lease.getOwner()"
  - "com.azure.cosmos.internal.changefeed.Lease.getProperties()"
  - "com.azure.cosmos.internal.changefeed.Lease.getTimestamp()"
  - "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken(java.lang.String)"
  - "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken(java.lang.String)"
  - "com.azure.cosmos.internal.changefeed.Lease.setId(java.lang.String)"
  - "com.azure.cosmos.internal.changefeed.Lease.setOwner(java.lang.String)"
  - "com.azure.cosmos.internal.changefeed.Lease.setProperties(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.internal.changefeed.Lease.setTimestamp(java.time.ZonedDateTime)"
  langs:
  - "java"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.internal.changefeed.Lease"
  type: "Interface"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Represents a lease that is persisted as a document in the lease collection.\n\nLeases are used to: Keep track of the <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> progress for a particular Partition Key RANGE. Distribute load between different instances of <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref>. Ensure reliable recovery for cases when an instance of <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> gets disconnected, hangs or crashes."
  syntax:
    content: "public interface Lease"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken()"
  id: "getConcurrencyToken()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getConcurrencyToken()"
  nameWithType: "Lease.getConcurrencyToken()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the concurrency token."
  syntax:
    content: "public abstract String getConcurrencyToken()"
    return:
      type: "java.lang.String"
      description: "the concurrency token."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken()"
  id: "getContinuationToken()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getContinuationToken()"
  nameWithType: "Lease.getContinuationToken()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the continuation token used to determine the last processed point of the Change Feed."
  syntax:
    content: "public abstract String getContinuationToken()"
    return:
      type: "java.lang.String"
      description: "the continuation token used to determine the last processed point of the Change Feed."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getId()"
  id: "getId()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "Lease.getId()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getId()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getId*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the lease ID."
  syntax:
    content: "public abstract String getId()"
    return:
      type: "java.lang.String"
      description: "the lease ID."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken()"
  id: "getLeaseToken()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getLeaseToken()"
  nameWithType: "Lease.getLeaseToken()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the partition associated with the lease."
  syntax:
    content: "public abstract String getLeaseToken()"
    return:
      type: "java.lang.String"
      description: "the partition associated with the lease."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getOwner()"
  id: "getOwner()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getOwner()"
  nameWithType: "Lease.getOwner()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getOwner()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getOwner*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the host name owner of the lease.\n\nThe Owner keeps track which <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> is currently processing that Partition Key RANGE."
  syntax:
    content: "public abstract String getOwner()"
    return:
      type: "java.lang.String"
      description: "the host name owner of the lease."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getProperties()"
  id: "getProperties()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "Lease.getProperties()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getProperties()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getProperties*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the custom lease item which can be managed from <xref uid=\"com.azure.cosmos.internal.changefeed.PartitionLoadBalancingStrategy\" data-throw-if-not-resolved=\"false\">PartitionLoadBalancingStrategy</xref>."
  syntax:
    content: "public abstract Map<String,String> getProperties()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the custom lease item."
- uid: "com.azure.cosmos.internal.changefeed.Lease.getTimestamp()"
  id: "getTimestamp()"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "getTimestamp()"
  nameWithType: "Lease.getTimestamp()"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getTimestamp()"
  overload: "com.azure.cosmos.internal.changefeed.Lease.getTimestamp*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Gets the timestamp of the lease."
  syntax:
    content: "public abstract String getTimestamp()"
    return:
      type: "java.lang.String"
      description: "the timestamp of the lease."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken(java.lang.String)"
  id: "setConcurrencyToken(java.lang.String)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setConcurrencyToken(String concurrencyToken)"
  nameWithType: "Lease.setConcurrencyToken(String concurrencyToken)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken(String concurrencyToken)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the concurrency token."
  syntax:
    content: "public abstract void setConcurrencyToken(String concurrencyToken)"
    parameters:
    - id: "concurrencyToken"
      type: "java.lang.String"
      description: "the concurrency token."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken(java.lang.String)"
  id: "setContinuationToken(java.lang.String)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setContinuationToken(String continuationToken)"
  nameWithType: "Lease.setContinuationToken(String continuationToken)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken(String continuationToken)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the continuation token used to determine the last processed point of the Change Feed."
  syntax:
    content: "public abstract void setContinuationToken(String continuationToken)"
    parameters:
    - id: "continuationToken"
      type: "java.lang.String"
      description: "the continuation token used to determine the last processed point of the Change Feed."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setId(java.lang.String)"
  id: "setId(java.lang.String)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setId(String id)"
  nameWithType: "Lease.setId(String id)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setId(String id)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setId*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the lease ID."
  syntax:
    content: "public abstract void setId(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the lease ID."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setOwner(java.lang.String)"
  id: "setOwner(java.lang.String)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setOwner(String owner)"
  nameWithType: "Lease.setOwner(String owner)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setOwner(String owner)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setOwner*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the host name owner of the lease.\n\nThe Owner keeps track which <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> is currently processing that Partition Key RANGE."
  syntax:
    content: "public abstract void setOwner(String owner)"
    parameters:
    - id: "owner"
      type: "java.lang.String"
      description: "the host name owner of the lease."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setProperties(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setProperties(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setProperties(Map<String,String> properties)"
  nameWithType: "Lease.setProperties(Map<String,String> properties)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setProperties(Map<String,String> properties)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setProperties*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the custom lease item which can be managed from <xref uid=\"com.azure.cosmos.internal.changefeed.PartitionLoadBalancingStrategy\" data-throw-if-not-resolved=\"false\">PartitionLoadBalancingStrategy</xref>."
  syntax:
    content: "public abstract void setProperties(Map<String,String> properties)"
    parameters:
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the custom lease item."
- uid: "com.azure.cosmos.internal.changefeed.Lease.setTimestamp(java.time.ZonedDateTime)"
  id: "setTimestamp(java.time.ZonedDateTime)"
  parent: "com.azure.cosmos.internal.changefeed.Lease"
  langs:
  - "java"
  name: "setTimestamp(ZonedDateTime timestamp)"
  nameWithType: "Lease.setTimestamp(ZonedDateTime timestamp)"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setTimestamp(ZonedDateTime timestamp)"
  overload: "com.azure.cosmos.internal.changefeed.Lease.setTimestamp*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Sets the timestamp of the lease.\n\nThe timestamp is used to determine lease expiration."
  syntax:
    content: "public abstract void setTimestamp(ZonedDateTime timestamp)"
    parameters:
    - id: "timestamp"
      type: "java.time.ZonedDateTime"
      description: "the timestamp of the lease."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken*"
  name: "getLeaseToken"
  nameWithType: "Lease.getLeaseToken"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getLeaseToken"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getOwner*"
  name: "getOwner"
  nameWithType: "Lease.getOwner"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getOwner"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "Lease.getTimestamp"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getTimestamp"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken*"
  name: "getContinuationToken"
  nameWithType: "Lease.getContinuationToken"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getContinuationToken"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken*"
  name: "setContinuationToken"
  nameWithType: "Lease.setContinuationToken"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setContinuationToken"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getId*"
  name: "getId"
  nameWithType: "Lease.getId"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getId"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken*"
  name: "getConcurrencyToken"
  nameWithType: "Lease.getConcurrencyToken"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getConcurrencyToken"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.Lease.getProperties*"
  name: "getProperties"
  nameWithType: "Lease.getProperties"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.getProperties"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setOwner*"
  name: "setOwner"
  nameWithType: "Lease.setOwner"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setOwner"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "java.time.ZonedDateTime"
  spec.java:
  - uid: "java.time.ZonedDateTime"
    name: "ZonedDateTime"
    fullName: "java.time.ZonedDateTime"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setTimestamp*"
  name: "setTimestamp"
  nameWithType: "Lease.setTimestamp"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setTimestamp"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setId*"
  name: "setId"
  nameWithType: "Lease.setId"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setId"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken*"
  name: "setConcurrencyToken"
  nameWithType: "Lease.setConcurrencyToken"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setConcurrencyToken"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.Lease.setProperties*"
  name: "setProperties"
  nameWithType: "Lease.setProperties"
  fullName: "com.azure.cosmos.internal.changefeed.Lease.setProperties"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
