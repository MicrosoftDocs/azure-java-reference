### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.ResourceId"
  id: "ResourceId"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.ResourceId.Length"
  - "com.azure.cosmos.internal.ResourceId.MAX_PATH_FRAGMENT"
  - "com.azure.cosmos.internal.ResourceId.OFFER_ID_LENGTH"
  - "com.azure.cosmos.internal.ResourceId.blockCopy(byte[],int,byte[],int,int)"
  - "com.azure.cosmos.internal.ResourceId.equals(com.azure.cosmos.internal.ResourceId)"
  - "com.azure.cosmos.internal.ResourceId.fromBase64String(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceId.getAttachment()"
  - "com.azure.cosmos.internal.ResourceId.getAttachmentId()"
  - "com.azure.cosmos.internal.ResourceId.getConflict()"
  - "com.azure.cosmos.internal.ResourceId.getConflictId()"
  - "com.azure.cosmos.internal.ResourceId.getDatabase()"
  - "com.azure.cosmos.internal.ResourceId.getDatabaseId()"
  - "com.azure.cosmos.internal.ResourceId.getDocument()"
  - "com.azure.cosmos.internal.ResourceId.getDocumentCollection()"
  - "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId()"
  - "com.azure.cosmos.internal.ResourceId.getDocumentId()"
  - "com.azure.cosmos.internal.ResourceId.getOffer()"
  - "com.azure.cosmos.internal.ResourceId.getOfferId()"
  - "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange()"
  - "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId()"
  - "com.azure.cosmos.internal.ResourceId.getPermission()"
  - "com.azure.cosmos.internal.ResourceId.getPermissionId()"
  - "com.azure.cosmos.internal.ResourceId.getStoredProcedure()"
  - "com.azure.cosmos.internal.ResourceId.getStoredProcedureId()"
  - "com.azure.cosmos.internal.ResourceId.getTrigger()"
  - "com.azure.cosmos.internal.ResourceId.getTriggerId()"
  - "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId()"
  - "com.azure.cosmos.internal.ResourceId.getUser()"
  - "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction()"
  - "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId()"
  - "com.azure.cosmos.internal.ResourceId.getUserId()"
  - "com.azure.cosmos.internal.ResourceId.getValue()"
  - "com.azure.cosmos.internal.ResourceId.isDatabaseId()"
  - "com.azure.cosmos.internal.ResourceId.newAttachmentId(java.lang.String,int)"
  - "com.azure.cosmos.internal.ResourceId.newDatabaseId(int)"
  - "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(int,int)"
  - "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(java.lang.String,int)"
  - "com.azure.cosmos.internal.ResourceId.newPermissionId(java.lang.String,long)"
  - "com.azure.cosmos.internal.ResourceId.newUserId(java.lang.String,int)"
  - "com.azure.cosmos.internal.ResourceId.parse(com.azure.cosmos.internal.ResourceType,java.lang.String)"
  - "com.azure.cosmos.internal.ResourceId.parse(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceId.toBase64String(byte[])"
  - "com.azure.cosmos.internal.ResourceId.toBase64String(byte[],int,int)"
  - "com.azure.cosmos.internal.ResourceId.toString()"
  - "com.azure.cosmos.internal.ResourceId.tryParse(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceId.verify(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceId.verifyBool(java.lang.String)"
  langs:
  - "java"
  name: "ResourceId"
  nameWithType: "ResourceId"
  fullName: "com.azure.cosmos.internal.ResourceId"
  type: "Class"
  package: "com.azure.cosmos.internal"
  summary: "Used internally to represents a Resource ID in the Azure Cosmos DB database service."
  syntax:
    content: "public class ResourceId"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.ResourceId.Length"
  id: "Length"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "Length"
  nameWithType: "ResourceId.Length"
  fullName: "com.azure.cosmos.internal.ResourceId.Length"
  type: "Field"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static final short Length"
    return:
      type: "short"
- uid: "com.azure.cosmos.internal.ResourceId.MAX_PATH_FRAGMENT"
  id: "MAX_PATH_FRAGMENT"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "MAX_PATH_FRAGMENT"
  nameWithType: "ResourceId.MAX_PATH_FRAGMENT"
  fullName: "com.azure.cosmos.internal.ResourceId.MAX_PATH_FRAGMENT"
  type: "Field"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static final short MAX_PATH_FRAGMENT"
    return:
      type: "short"
- uid: "com.azure.cosmos.internal.ResourceId.OFFER_ID_LENGTH"
  id: "OFFER_ID_LENGTH"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "OFFER_ID_LENGTH"
  nameWithType: "ResourceId.OFFER_ID_LENGTH"
  fullName: "com.azure.cosmos.internal.ResourceId.OFFER_ID_LENGTH"
  type: "Field"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static final short OFFER_ID_LENGTH"
    return:
      type: "short"
- uid: "com.azure.cosmos.internal.ResourceId.ResourceId()"
  id: "ResourceId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "ResourceId()"
  nameWithType: "ResourceId.ResourceId()"
  fullName: "com.azure.cosmos.internal.ResourceId.ResourceId()"
  overload: "com.azure.cosmos.internal.ResourceId.ResourceId*"
  type: "Constructor"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "private ResourceId()"
- uid: "com.azure.cosmos.internal.ResourceId.blockCopy(byte[],int,byte[],int,int)"
  id: "blockCopy(byte[],int,byte[],int,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "blockCopy(byte[] src, int srcOffset, byte[] dst, int dstOffset, int count)"
  nameWithType: "ResourceId.blockCopy(byte[] src, int srcOffset, byte[] dst, int dstOffset, int count)"
  fullName: "com.azure.cosmos.internal.ResourceId.blockCopy(byte[] src, int srcOffset, byte[] dst, int dstOffset, int count)"
  overload: "com.azure.cosmos.internal.ResourceId.blockCopy*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static void blockCopy(byte[] src, int srcOffset, byte[] dst, int dstOffset, int count)"
    parameters:
    - id: "src"
      type: "byte[]"
    - id: "srcOffset"
      type: "int"
    - id: "dst"
      type: "byte[]"
    - id: "dstOffset"
      type: "int"
    - id: "count"
      type: "int"
- uid: "com.azure.cosmos.internal.ResourceId.equals(com.azure.cosmos.internal.ResourceId)"
  id: "equals(com.azure.cosmos.internal.ResourceId)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "equals(ResourceId other)"
  nameWithType: "ResourceId.equals(ResourceId other)"
  fullName: "com.azure.cosmos.internal.ResourceId.equals(ResourceId other)"
  overload: "com.azure.cosmos.internal.ResourceId.equals*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public boolean equals(ResourceId other)"
    parameters:
    - id: "other"
      type: "com.azure.cosmos.internal.ResourceId"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.internal.ResourceId.fromBase64String(java.lang.String)"
  id: "fromBase64String(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "fromBase64String(String s)"
  nameWithType: "ResourceId.fromBase64String(String s)"
  fullName: "com.azure.cosmos.internal.ResourceId.fromBase64String(String s)"
  overload: "com.azure.cosmos.internal.ResourceId.fromBase64String*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static byte[] fromBase64String(String s)"
    parameters:
    - id: "s"
      type: "java.lang.String"
    return:
      type: "byte[]"
- uid: "com.azure.cosmos.internal.ResourceId.getAttachment()"
  id: "getAttachment()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getAttachment()"
  nameWithType: "ResourceId.getAttachment()"
  fullName: "com.azure.cosmos.internal.ResourceId.getAttachment()"
  overload: "com.azure.cosmos.internal.ResourceId.getAttachment*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public int getAttachment()"
    return:
      type: "int"
- uid: "com.azure.cosmos.internal.ResourceId.getAttachmentId()"
  id: "getAttachmentId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getAttachmentId()"
  nameWithType: "ResourceId.getAttachmentId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getAttachmentId()"
  overload: "com.azure.cosmos.internal.ResourceId.getAttachmentId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getAttachmentId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getConflict()"
  id: "getConflict()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getConflict()"
  nameWithType: "ResourceId.getConflict()"
  fullName: "com.azure.cosmos.internal.ResourceId.getConflict()"
  overload: "com.azure.cosmos.internal.ResourceId.getConflict*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getConflict()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getConflictId()"
  id: "getConflictId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getConflictId()"
  nameWithType: "ResourceId.getConflictId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getConflictId()"
  overload: "com.azure.cosmos.internal.ResourceId.getConflictId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getConflictId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getDatabase()"
  id: "getDatabase()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDatabase()"
  nameWithType: "ResourceId.getDatabase()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDatabase()"
  overload: "com.azure.cosmos.internal.ResourceId.getDatabase*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public int getDatabase()"
    return:
      type: "int"
- uid: "com.azure.cosmos.internal.ResourceId.getDatabaseId()"
  id: "getDatabaseId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDatabaseId()"
  nameWithType: "ResourceId.getDatabaseId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDatabaseId()"
  overload: "com.azure.cosmos.internal.ResourceId.getDatabaseId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getDatabaseId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getDocument()"
  id: "getDocument()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDocument()"
  nameWithType: "ResourceId.getDocument()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocument()"
  overload: "com.azure.cosmos.internal.ResourceId.getDocument*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getDocument()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentCollection()"
  id: "getDocumentCollection()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDocumentCollection()"
  nameWithType: "ResourceId.getDocumentCollection()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentCollection()"
  overload: "com.azure.cosmos.internal.ResourceId.getDocumentCollection*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public int getDocumentCollection()"
    return:
      type: "int"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId()"
  id: "getDocumentCollectionId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDocumentCollectionId()"
  nameWithType: "ResourceId.getDocumentCollectionId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId()"
  overload: "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getDocumentCollectionId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentId()"
  id: "getDocumentId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getDocumentId()"
  nameWithType: "ResourceId.getDocumentId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentId()"
  overload: "com.azure.cosmos.internal.ResourceId.getDocumentId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getDocumentId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getOffer()"
  id: "getOffer()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getOffer()"
  nameWithType: "ResourceId.getOffer()"
  fullName: "com.azure.cosmos.internal.ResourceId.getOffer()"
  overload: "com.azure.cosmos.internal.ResourceId.getOffer*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getOffer()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getOfferId()"
  id: "getOfferId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getOfferId()"
  nameWithType: "ResourceId.getOfferId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getOfferId()"
  overload: "com.azure.cosmos.internal.ResourceId.getOfferId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getOfferId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange()"
  id: "getPartitionKeyRange()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getPartitionKeyRange()"
  nameWithType: "ResourceId.getPartitionKeyRange()"
  fullName: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange()"
  overload: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getPartitionKeyRange()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId()"
  id: "getPartitionKeyRangeId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getPartitionKeyRangeId()"
  nameWithType: "ResourceId.getPartitionKeyRangeId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId()"
  overload: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getPartitionKeyRangeId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getPermission()"
  id: "getPermission()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getPermission()"
  nameWithType: "ResourceId.getPermission()"
  fullName: "com.azure.cosmos.internal.ResourceId.getPermission()"
  overload: "com.azure.cosmos.internal.ResourceId.getPermission*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getPermission()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getPermissionId()"
  id: "getPermissionId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getPermissionId()"
  nameWithType: "ResourceId.getPermissionId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getPermissionId()"
  overload: "com.azure.cosmos.internal.ResourceId.getPermissionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getPermissionId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getStoredProcedure()"
  id: "getStoredProcedure()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getStoredProcedure()"
  nameWithType: "ResourceId.getStoredProcedure()"
  fullName: "com.azure.cosmos.internal.ResourceId.getStoredProcedure()"
  overload: "com.azure.cosmos.internal.ResourceId.getStoredProcedure*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getStoredProcedure()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getStoredProcedureId()"
  id: "getStoredProcedureId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getStoredProcedureId()"
  nameWithType: "ResourceId.getStoredProcedureId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getStoredProcedureId()"
  overload: "com.azure.cosmos.internal.ResourceId.getStoredProcedureId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getStoredProcedureId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getTrigger()"
  id: "getTrigger()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getTrigger()"
  nameWithType: "ResourceId.getTrigger()"
  fullName: "com.azure.cosmos.internal.ResourceId.getTrigger()"
  overload: "com.azure.cosmos.internal.ResourceId.getTrigger*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getTrigger()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getTriggerId()"
  id: "getTriggerId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getTriggerId()"
  nameWithType: "ResourceId.getTriggerId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getTriggerId()"
  overload: "com.azure.cosmos.internal.ResourceId.getTriggerId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getTriggerId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId()"
  id: "getUniqueDocumentCollectionId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getUniqueDocumentCollectionId()"
  nameWithType: "ResourceId.getUniqueDocumentCollectionId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId()"
  overload: "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Unique (across all databases) Id for the DocumentCollection. First 4 bytes are DatabaseId and next 4 bytes are CollectionId."
  syntax:
    content: "public long getUniqueDocumentCollectionId()"
    return:
      type: "long"
      description: "the unique collectionId"
- uid: "com.azure.cosmos.internal.ResourceId.getUser()"
  id: "getUser()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getUser()"
  nameWithType: "ResourceId.getUser()"
  fullName: "com.azure.cosmos.internal.ResourceId.getUser()"
  overload: "com.azure.cosmos.internal.ResourceId.getUser*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public int getUser()"
    return:
      type: "int"
- uid: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction()"
  id: "getUserDefinedFunction()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getUserDefinedFunction()"
  nameWithType: "ResourceId.getUserDefinedFunction()"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction()"
  overload: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public long getUserDefinedFunction()"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId()"
  id: "getUserDefinedFunctionId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getUserDefinedFunctionId()"
  nameWithType: "ResourceId.getUserDefinedFunctionId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId()"
  overload: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getUserDefinedFunctionId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getUserId()"
  id: "getUserId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getUserId()"
  nameWithType: "ResourceId.getUserId()"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserId()"
  overload: "com.azure.cosmos.internal.ResourceId.getUserId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceId getUserId()"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.getValue()"
  id: "getValue()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "ResourceId.getValue()"
  fullName: "com.azure.cosmos.internal.ResourceId.getValue()"
  overload: "com.azure.cosmos.internal.ResourceId.getValue*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public byte[] getValue()"
    return:
      type: "byte[]"
- uid: "com.azure.cosmos.internal.ResourceId.isDatabaseId()"
  id: "isDatabaseId()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "isDatabaseId()"
  nameWithType: "ResourceId.isDatabaseId()"
  fullName: "com.azure.cosmos.internal.ResourceId.isDatabaseId()"
  overload: "com.azure.cosmos.internal.ResourceId.isDatabaseId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public boolean isDatabaseId()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.internal.ResourceId.newAttachmentId(java.lang.String,int)"
  id: "newAttachmentId(java.lang.String,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newAttachmentId(String documentId, int attachmentId)"
  nameWithType: "ResourceId.newAttachmentId(String documentId, int attachmentId)"
  fullName: "com.azure.cosmos.internal.ResourceId.newAttachmentId(String documentId, int attachmentId)"
  overload: "com.azure.cosmos.internal.ResourceId.newAttachmentId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId newAttachmentId(String documentId, int attachmentId)"
    parameters:
    - id: "documentId"
      type: "java.lang.String"
    - id: "attachmentId"
      type: "int"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.newDatabaseId(int)"
  id: "newDatabaseId(int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newDatabaseId(int dbid)"
  nameWithType: "ResourceId.newDatabaseId(int dbid)"
  fullName: "com.azure.cosmos.internal.ResourceId.newDatabaseId(int dbid)"
  overload: "com.azure.cosmos.internal.ResourceId.newDatabaseId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId newDatabaseId(int dbid)"
    parameters:
    - id: "dbid"
      type: "int"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(int,int)"
  id: "newDocumentCollectionId(int,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newDocumentCollectionId(int dbId, int collectionId)"
  nameWithType: "ResourceId.newDocumentCollectionId(int dbId, int collectionId)"
  fullName: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(int dbId, int collectionId)"
  overload: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static ResourceId newDocumentCollectionId(int dbId, int collectionId)"
    parameters:
    - id: "dbId"
      type: "int"
    - id: "collectionId"
      type: "int"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(java.lang.String,int)"
  id: "newDocumentCollectionId(java.lang.String,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newDocumentCollectionId(String databaseId, int collectionId)"
  nameWithType: "ResourceId.newDocumentCollectionId(String databaseId, int collectionId)"
  fullName: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId(String databaseId, int collectionId)"
  overload: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId newDocumentCollectionId(String databaseId, int collectionId)"
    parameters:
    - id: "databaseId"
      type: "java.lang.String"
    - id: "collectionId"
      type: "int"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.newPermissionId(java.lang.String,long)"
  id: "newPermissionId(java.lang.String,long)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newPermissionId(String userId, long permissionId)"
  nameWithType: "ResourceId.newPermissionId(String userId, long permissionId)"
  fullName: "com.azure.cosmos.internal.ResourceId.newPermissionId(String userId, long permissionId)"
  overload: "com.azure.cosmos.internal.ResourceId.newPermissionId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId newPermissionId(String userId, long permissionId)"
    parameters:
    - id: "userId"
      type: "java.lang.String"
    - id: "permissionId"
      type: "long"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.newUserId(java.lang.String,int)"
  id: "newUserId(java.lang.String,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "newUserId(String databaseId, int userId)"
  nameWithType: "ResourceId.newUserId(String databaseId, int userId)"
  fullName: "com.azure.cosmos.internal.ResourceId.newUserId(String databaseId, int userId)"
  overload: "com.azure.cosmos.internal.ResourceId.newUserId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId newUserId(String databaseId, int userId)"
    parameters:
    - id: "databaseId"
      type: "java.lang.String"
    - id: "userId"
      type: "int"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
- uid: "com.azure.cosmos.internal.ResourceId.parse(com.azure.cosmos.internal.ResourceType,java.lang.String)"
  id: "parse(com.azure.cosmos.internal.ResourceType,java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "parse(ResourceType type, String id)"
  nameWithType: "ResourceId.parse(ResourceType type, String id)"
  fullName: "com.azure.cosmos.internal.ResourceId.parse(ResourceType type, String id)"
  overload: "com.azure.cosmos.internal.ResourceId.parse*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static byte[] parse(ResourceType type, String id)"
    parameters:
    - id: "type"
      type: "com.azure.cosmos.internal.ResourceType"
    - id: "id"
      type: "java.lang.String"
    return:
      type: "byte[]"
- uid: "com.azure.cosmos.internal.ResourceId.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "parse(String id)"
  nameWithType: "ResourceId.parse(String id)"
  fullName: "com.azure.cosmos.internal.ResourceId.parse(String id)"
  overload: "com.azure.cosmos.internal.ResourceId.parse*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static ResourceId parse(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.internal.ResourceId"
  exceptions:
  - type: "java.lang.IllegalArgumentException"
- uid: "com.azure.cosmos.internal.ResourceId.toBase64String(byte[])"
  id: "toBase64String(byte[])"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "toBase64String(byte[] buffer)"
  nameWithType: "ResourceId.toBase64String(byte[] buffer)"
  fullName: "com.azure.cosmos.internal.ResourceId.toBase64String(byte[] buffer)"
  overload: "com.azure.cosmos.internal.ResourceId.toBase64String*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static String toBase64String(byte[] buffer)"
    parameters:
    - id: "buffer"
      type: "byte[]"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.ResourceId.toBase64String(byte[],int,int)"
  id: "toBase64String(byte[],int,int)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "toBase64String(byte[] buffer, int offset, int length)"
  nameWithType: "ResourceId.toBase64String(byte[] buffer, int offset, int length)"
  fullName: "com.azure.cosmos.internal.ResourceId.toBase64String(byte[] buffer, int offset, int length)"
  overload: "com.azure.cosmos.internal.ResourceId.toBase64String*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static String toBase64String(byte[] buffer, int offset, int length)"
    parameters:
    - id: "buffer"
      type: "byte[]"
    - id: "offset"
      type: "int"
    - id: "length"
      type: "int"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.ResourceId.toString()"
  id: "toString()"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "ResourceId.toString()"
  fullName: "com.azure.cosmos.internal.ResourceId.toString()"
  overload: "com.azure.cosmos.internal.ResourceId.toString*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.ResourceId.tryParse(java.lang.String)"
  id: "tryParse(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "tryParse(String id)"
  nameWithType: "ResourceId.tryParse(String id)"
  fullName: "com.azure.cosmos.internal.ResourceId.tryParse(String id)"
  overload: "com.azure.cosmos.internal.ResourceId.tryParse*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static Pair<Boolean,ResourceId> tryParse(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "org.apache.commons.lang3.tuple.Pair<java.lang.Boolean,com.azure.cosmos.internal.ResourceId>"
- uid: "com.azure.cosmos.internal.ResourceId.verify(java.lang.String)"
  id: "verify(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "verify(String id)"
  nameWithType: "ResourceId.verify(String id)"
  fullName: "com.azure.cosmos.internal.ResourceId.verify(String id)"
  overload: "com.azure.cosmos.internal.ResourceId.verify*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static Pair<Boolean,byte[]> verify(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "org.apache.commons.lang3.tuple.Pair<java.lang.Boolean,byte[]>"
- uid: "com.azure.cosmos.internal.ResourceId.verifyBool(java.lang.String)"
  id: "verifyBool(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceId"
  langs:
  - "java"
  name: "verifyBool(String id)"
  nameWithType: "ResourceId.verifyBool(String id)"
  fullName: "com.azure.cosmos.internal.ResourceId.verifyBool(String id)"
  overload: "com.azure.cosmos.internal.ResourceId.verifyBool*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static boolean verifyBool(String id)"
    parameters:
    - id: "id"
      type: "java.lang.String"
    return:
      type: "boolean"
references:
- uid: "com.azure.cosmos.internal.ResourceId.ResourceId*"
  name: "ResourceId"
  nameWithType: "ResourceId.ResourceId"
  fullName: "com.azure.cosmos.internal.ResourceId.ResourceId"
  package: "com.azure.cosmos.internal"
- uid: "java.lang.IllegalArgumentException"
  spec.java:
  - uid: "java.lang.IllegalArgumentException"
    name: "IllegalArgumentException"
    fullName: "java.lang.IllegalArgumentException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.ResourceId.parse*"
  name: "parse"
  nameWithType: "ResourceId.parse"
  fullName: "com.azure.cosmos.internal.ResourceId.parse"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceType"
  name: "ResourceType"
  nameWithType: "ResourceType"
  fullName: "com.azure.cosmos.internal.ResourceType"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.internal.ResourceId.newDatabaseId*"
  name: "newDatabaseId"
  nameWithType: "ResourceId.newDatabaseId"
  fullName: "com.azure.cosmos.internal.ResourceId.newDatabaseId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId*"
  name: "newDocumentCollectionId"
  nameWithType: "ResourceId.newDocumentCollectionId"
  fullName: "com.azure.cosmos.internal.ResourceId.newDocumentCollectionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.newUserId*"
  name: "newUserId"
  nameWithType: "ResourceId.newUserId"
  fullName: "com.azure.cosmos.internal.ResourceId.newUserId"
  package: "com.azure.cosmos.internal"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.internal.ResourceId.newPermissionId*"
  name: "newPermissionId"
  nameWithType: "ResourceId.newPermissionId"
  fullName: "com.azure.cosmos.internal.ResourceId.newPermissionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.newAttachmentId*"
  name: "newAttachmentId"
  nameWithType: "ResourceId.newAttachmentId"
  fullName: "com.azure.cosmos.internal.ResourceId.newAttachmentId"
  package: "com.azure.cosmos.internal"
- uid: "org.apache.commons.lang3.tuple.Pair<java.lang.Boolean,com.azure.cosmos.internal.ResourceId>"
  spec.java:
  - uid: "org.apache.commons.lang3.tuple.Pair"
    name: "Pair"
    fullName: "org.apache.commons.lang3.tuple.Pair"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "com.azure.cosmos.internal.ResourceId"
    name: "ResourceId"
    fullName: "com.azure.cosmos.internal.ResourceId"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ResourceId.tryParse*"
  name: "tryParse"
  nameWithType: "ResourceId.tryParse"
  fullName: "com.azure.cosmos.internal.ResourceId.tryParse"
  package: "com.azure.cosmos.internal"
- uid: "org.apache.commons.lang3.tuple.Pair<java.lang.Boolean,byte[]>"
  spec.java:
  - uid: "org.apache.commons.lang3.tuple.Pair"
    name: "Pair"
    fullName: "org.apache.commons.lang3.tuple.Pair"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ResourceId.verify*"
  name: "verify"
  nameWithType: "ResourceId.verify"
  fullName: "com.azure.cosmos.internal.ResourceId.verify"
  package: "com.azure.cosmos.internal"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.ResourceId.verifyBool*"
  name: "verifyBool"
  nameWithType: "ResourceId.verifyBool"
  fullName: "com.azure.cosmos.internal.ResourceId.verifyBool"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.fromBase64String*"
  name: "fromBase64String"
  nameWithType: "ResourceId.fromBase64String"
  fullName: "com.azure.cosmos.internal.ResourceId.fromBase64String"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.toBase64String*"
  name: "toBase64String"
  nameWithType: "ResourceId.toBase64String"
  fullName: "com.azure.cosmos.internal.ResourceId.toBase64String"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.blockCopy*"
  name: "blockCopy"
  nameWithType: "ResourceId.blockCopy"
  fullName: "com.azure.cosmos.internal.ResourceId.blockCopy"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.isDatabaseId*"
  name: "isDatabaseId"
  nameWithType: "ResourceId.isDatabaseId"
  fullName: "com.azure.cosmos.internal.ResourceId.isDatabaseId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDatabase*"
  name: "getDatabase"
  nameWithType: "ResourceId.getDatabase"
  fullName: "com.azure.cosmos.internal.ResourceId.getDatabase"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDatabaseId*"
  name: "getDatabaseId"
  nameWithType: "ResourceId.getDatabaseId"
  fullName: "com.azure.cosmos.internal.ResourceId.getDatabaseId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentCollection*"
  name: "getDocumentCollection"
  nameWithType: "ResourceId.getDocumentCollection"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentCollection"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId*"
  name: "getDocumentCollectionId"
  nameWithType: "ResourceId.getDocumentCollectionId"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentCollectionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId*"
  name: "getUniqueDocumentCollectionId"
  nameWithType: "ResourceId.getUniqueDocumentCollectionId"
  fullName: "com.azure.cosmos.internal.ResourceId.getUniqueDocumentCollectionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getStoredProcedure*"
  name: "getStoredProcedure"
  nameWithType: "ResourceId.getStoredProcedure"
  fullName: "com.azure.cosmos.internal.ResourceId.getStoredProcedure"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getStoredProcedureId*"
  name: "getStoredProcedureId"
  nameWithType: "ResourceId.getStoredProcedureId"
  fullName: "com.azure.cosmos.internal.ResourceId.getStoredProcedureId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getTrigger*"
  name: "getTrigger"
  nameWithType: "ResourceId.getTrigger"
  fullName: "com.azure.cosmos.internal.ResourceId.getTrigger"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getTriggerId*"
  name: "getTriggerId"
  nameWithType: "ResourceId.getTriggerId"
  fullName: "com.azure.cosmos.internal.ResourceId.getTriggerId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction*"
  name: "getUserDefinedFunction"
  nameWithType: "ResourceId.getUserDefinedFunction"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunction"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId*"
  name: "getUserDefinedFunctionId"
  nameWithType: "ResourceId.getUserDefinedFunctionId"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserDefinedFunctionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getConflict*"
  name: "getConflict"
  nameWithType: "ResourceId.getConflict"
  fullName: "com.azure.cosmos.internal.ResourceId.getConflict"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getConflictId*"
  name: "getConflictId"
  nameWithType: "ResourceId.getConflictId"
  fullName: "com.azure.cosmos.internal.ResourceId.getConflictId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDocument*"
  name: "getDocument"
  nameWithType: "ResourceId.getDocument"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocument"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getDocumentId*"
  name: "getDocumentId"
  nameWithType: "ResourceId.getDocumentId"
  fullName: "com.azure.cosmos.internal.ResourceId.getDocumentId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange*"
  name: "getPartitionKeyRange"
  nameWithType: "ResourceId.getPartitionKeyRange"
  fullName: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRange"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId*"
  name: "getPartitionKeyRangeId"
  nameWithType: "ResourceId.getPartitionKeyRangeId"
  fullName: "com.azure.cosmos.internal.ResourceId.getPartitionKeyRangeId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getUser*"
  name: "getUser"
  nameWithType: "ResourceId.getUser"
  fullName: "com.azure.cosmos.internal.ResourceId.getUser"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getUserId*"
  name: "getUserId"
  nameWithType: "ResourceId.getUserId"
  fullName: "com.azure.cosmos.internal.ResourceId.getUserId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getPermission*"
  name: "getPermission"
  nameWithType: "ResourceId.getPermission"
  fullName: "com.azure.cosmos.internal.ResourceId.getPermission"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getPermissionId*"
  name: "getPermissionId"
  nameWithType: "ResourceId.getPermissionId"
  fullName: "com.azure.cosmos.internal.ResourceId.getPermissionId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getAttachment*"
  name: "getAttachment"
  nameWithType: "ResourceId.getAttachment"
  fullName: "com.azure.cosmos.internal.ResourceId.getAttachment"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getAttachmentId*"
  name: "getAttachmentId"
  nameWithType: "ResourceId.getAttachmentId"
  fullName: "com.azure.cosmos.internal.ResourceId.getAttachmentId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getOffer*"
  name: "getOffer"
  nameWithType: "ResourceId.getOffer"
  fullName: "com.azure.cosmos.internal.ResourceId.getOffer"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getOfferId*"
  name: "getOfferId"
  nameWithType: "ResourceId.getOfferId"
  fullName: "com.azure.cosmos.internal.ResourceId.getOfferId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.getValue*"
  name: "getValue"
  nameWithType: "ResourceId.getValue"
  fullName: "com.azure.cosmos.internal.ResourceId.getValue"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.toString*"
  name: "toString"
  nameWithType: "ResourceId.toString"
  fullName: "com.azure.cosmos.internal.ResourceId.toString"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceId.equals*"
  name: "equals"
  nameWithType: "ResourceId.equals"
  fullName: "com.azure.cosmos.internal.ResourceId.equals"
  package: "com.azure.cosmos.internal"
- uid: "short"
  spec.java:
  - uid: "short"
    name: "short"
    fullName: "short"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.internal.ResourceId.CollectionChildResourceType"
  name: "ResourceId.CollectionChildResourceType"
  nameWithType: "ResourceId.CollectionChildResourceType"
  fullName: "com.azure.cosmos.internal.ResourceId.CollectionChildResourceType"
- uid: "org.apache.commons.lang3.tuple.Pair"
  name: "Pair"
  nameWithType: "Pair"
  fullName: "org.apache.commons.lang3.tuple.Pair"
- uid: "java.lang.Boolean,com.azure.cosmos.internal.ResourceId"
  name: "Boolean,ResourceId"
  nameWithType: "Boolean,ResourceId"
  fullName: "java.lang.Boolean,com.azure.cosmos.internal.ResourceId"
- uid: "java.lang.Boolean,byte[]"
  name: "Boolean,byte[]"
  nameWithType: "Boolean,byte[]"
  fullName: "java.lang.Boolean,byte[]"
