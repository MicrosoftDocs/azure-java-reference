### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
  id: "ProxyDocumentQueryExecutionContext"
  parent: "com.azure.cosmos.internal.query"
  children:
  - "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.<T>createAsync(com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  - "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.ProxyDocumentQueryExecutionContext(com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>,com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  - "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.executeAsync()"
  langs:
  - "java"
  name: "ProxyDocumentQueryExecutionContext<T>"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>"
  type: "Class"
  package: "com.azure.cosmos.internal.query"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk. This class is used as a proxy to wrap the DefaultDocumentQueryExecutionContext which is needed for sending the query to GATEWAY first and then uses PipelinedDocumentQueryExecutionContext after it gets the necessary info."
  syntax:
    content: "public class ProxyDocumentQueryExecutionContext<T> implements IDocumentQueryExecutionContext<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.<T>createAsync(com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  id: "<T>createAsync(com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  parent: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "<T>createAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.<T>createAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.<T>createAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  overload: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.createAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.query"
  syntax:
    content: "public static Flux<ProxyDocumentQueryExecutionContext<T>> <T>createAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
    parameters:
    - id: "client"
      type: "com.azure.cosmos.internal.query.IDocumentQueryClient"
    - id: "resourceTypeEnum"
      type: "com.azure.cosmos.internal.ResourceType"
    - id: "resourceType"
      type: "java.lang.Class<T>"
    - id: "query"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "feedOptions"
      type: "com.azure.cosmos.FeedOptions"
    - id: "resourceLink"
      type: "java.lang.String"
    - id: "collection"
      type: "com.azure.cosmos.internal.DocumentCollection"
    - id: "isContinuationExpected"
      type: "boolean"
    - id: "correlatedActivityId"
      type: "java.util.UUID"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>>"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.ProxyDocumentQueryExecutionContext(com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>,com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  id: "ProxyDocumentQueryExecutionContext(com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>,com.azure.cosmos.internal.query.IDocumentQueryClient,com.azure.cosmos.internal.ResourceType,java.lang.Class<T>,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions,java.lang.String,com.azure.cosmos.internal.DocumentCollection,boolean,java.util.UUID)"
  parent: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "ProxyDocumentQueryExecutionContext(IDocumentQueryExecutionContext<T> innerExecutionContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.ProxyDocumentQueryExecutionContext(IDocumentQueryExecutionContext<T> innerExecutionContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.ProxyDocumentQueryExecutionContext(IDocumentQueryExecutionContext<T> innerExecutionContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
  overload: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.ProxyDocumentQueryExecutionContext*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.query"
  syntax:
    content: "public ProxyDocumentQueryExecutionContext(IDocumentQueryExecutionContext<T> innerExecutionContext, IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, FeedOptions feedOptions, String resourceLink, DocumentCollection collection, boolean isContinuationExpected, UUID correlatedActivityId)"
    parameters:
    - id: "innerExecutionContext"
      type: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>"
    - id: "client"
      type: "com.azure.cosmos.internal.query.IDocumentQueryClient"
    - id: "resourceTypeEnum"
      type: "com.azure.cosmos.internal.ResourceType"
    - id: "resourceType"
      type: "java.lang.Class<T>"
    - id: "query"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "feedOptions"
      type: "com.azure.cosmos.FeedOptions"
    - id: "resourceLink"
      type: "java.lang.String"
    - id: "collection"
      type: "com.azure.cosmos.internal.DocumentCollection"
    - id: "isContinuationExpected"
      type: "boolean"
    - id: "correlatedActivityId"
      type: "java.util.UUID"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.executeAsync()"
  id: "executeAsync()"
  parent: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
  langs:
  - "java"
  name: "executeAsync()"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.executeAsync()"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.executeAsync()"
  overload: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.executeAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.query"
  syntax:
    content: "public Flux<FeedResponse<T>> executeAsync()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<T>>"
references:
- uid: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext<T>"
  spec.java:
  - uid: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext"
    name: "IDocumentQueryExecutionContext"
    fullName: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.query.IDocumentQueryClient"
  name: "IDocumentQueryClient"
  nameWithType: "IDocumentQueryClient"
  fullName: "com.azure.cosmos.internal.query.IDocumentQueryClient"
- uid: "com.azure.cosmos.internal.ResourceType"
  name: "ResourceType"
  nameWithType: "ResourceType"
  fullName: "com.azure.cosmos.internal.ResourceType"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.SqlQuerySpec"
- uid: "com.azure.cosmos.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.FeedOptions"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.internal.DocumentCollection"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.ProxyDocumentQueryExecutionContext*"
  name: "ProxyDocumentQueryExecutionContext"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.ProxyDocumentQueryExecutionContext"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.ProxyDocumentQueryExecutionContext"
  package: "com.azure.cosmos.internal.query"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.executeAsync*"
  name: "executeAsync"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.executeAsync"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.executeAsync"
  package: "com.azure.cosmos.internal.query"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
    name: "ProxyDocumentQueryExecutionContext"
    fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext.createAsync*"
  name: "<T>createAsync"
  nameWithType: "ProxyDocumentQueryExecutionContext<T>.<T>createAsync"
  fullName: "com.azure.cosmos.internal.query.ProxyDocumentQueryExecutionContext<T>.<T>createAsync"
  package: "com.azure.cosmos.internal.query"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext"
  name: "IDocumentQueryExecutionContext"
  nameWithType: "IDocumentQueryExecutionContext"
  fullName: "com.azure.cosmos.internal.query.IDocumentQueryExecutionContext"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse"
