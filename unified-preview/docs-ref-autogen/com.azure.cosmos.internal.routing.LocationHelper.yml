### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.routing.LocationHelper"
  id: "LocationHelper"
  parent: "com.azure.cosmos.internal.routing"
  children:
  - "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper()"
  - "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint(java.net.URL,java.lang.String)"
  langs:
  - "java"
  name: "LocationHelper"
  nameWithType: "LocationHelper"
  fullName: "com.azure.cosmos.internal.routing.LocationHelper"
  type: "Class"
  package: "com.azure.cosmos.internal.routing"
  syntax:
    content: "public class LocationHelper"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper()"
  id: "LocationHelper()"
  parent: "com.azure.cosmos.internal.routing.LocationHelper"
  langs:
  - "java"
  name: "LocationHelper()"
  nameWithType: "LocationHelper.LocationHelper()"
  fullName: "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper()"
  overload: "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.routing"
  syntax:
    content: "public LocationHelper()"
- uid: "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint(java.net.URL,java.lang.String)"
  id: "getLocationEndpoint(java.net.URL,java.lang.String)"
  parent: "com.azure.cosmos.internal.routing.LocationHelper"
  langs:
  - "java"
  name: "getLocationEndpoint(URL serviceEndpoint, String location)"
  nameWithType: "LocationHelper.getLocationEndpoint(URL serviceEndpoint, String location)"
  fullName: "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint(URL serviceEndpoint, String location)"
  overload: "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.internal.routing"
  summary: "For example, for https://contoso.documents.azure.com:443/ and \"West US\", this will return https://contoso-westus.documents.azure.com:443/ NOTE: This ONLY called by client first boot when the input endpoint is not available."
  syntax:
    content: "public static URL getLocationEndpoint(URL serviceEndpoint, String location)"
    parameters:
    - id: "serviceEndpoint"
      type: "java.net.URL"
    - id: "location"
      type: "java.lang.String"
    return:
      type: "java.net.URL"
references:
- uid: "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper*"
  name: "LocationHelper"
  nameWithType: "LocationHelper.LocationHelper"
  fullName: "com.azure.cosmos.internal.routing.LocationHelper.LocationHelper"
  package: "com.azure.cosmos.internal.routing"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint*"
  name: "getLocationEndpoint"
  nameWithType: "LocationHelper.getLocationEndpoint"
  fullName: "com.azure.cosmos.internal.routing.LocationHelper.getLocationEndpoint"
  package: "com.azure.cosmos.internal.routing"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
