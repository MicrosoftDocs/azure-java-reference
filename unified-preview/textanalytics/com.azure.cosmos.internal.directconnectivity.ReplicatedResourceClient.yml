### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  id: "ReplicatedResourceClient"
  parent: "com.azure.cosmos.internal.directconnectivity"
  children:
  - "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient(com.azure.cosmos.internal.Configs,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean,boolean)"
  - "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.function.Function<com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.internal.RxDocumentServiceRequest>>)"
  - "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled()"
  - "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource(com.azure.cosmos.internal.ResourceType)"
  - "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster(com.azure.cosmos.internal.ResourceType,com.azure.cosmos.internal.OperationType)"
  langs:
  - "java"
  name: "ReplicatedResourceClient"
  nameWithType: "ReplicatedResourceClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  type: "Class"
  package: "com.azure.cosmos.internal.directconnectivity"
  summary: "ReplicatedResourceClient uses the ConsistencyReader to make requests to backend"
  syntax:
    content: "public class ReplicatedResourceClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient(com.azure.cosmos.internal.Configs,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean,boolean)"
  id: "ReplicatedResourceClient(com.azure.cosmos.internal.Configs,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  langs:
  - "java"
  name: "ReplicatedResourceClient(Configs configs, AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, GatewayServiceConfigurationReader serviceConfigReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean enableReadRequestsFallback, boolean useMultipleWriteLocations)"
  nameWithType: "ReplicatedResourceClient.ReplicatedResourceClient(Configs configs, AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, GatewayServiceConfigurationReader serviceConfigReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean enableReadRequestsFallback, boolean useMultipleWriteLocations)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient(Configs configs, AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, GatewayServiceConfigurationReader serviceConfigReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean enableReadRequestsFallback, boolean useMultipleWriteLocations)"
  overload: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public ReplicatedResourceClient(Configs configs, AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, GatewayServiceConfigurationReader serviceConfigReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean enableReadRequestsFallback, boolean useMultipleWriteLocations)"
    parameters:
    - id: "configs"
      type: "com.azure.cosmos.internal.Configs"
    - id: "addressSelector"
      type: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
    - id: "sessionContainer"
      type: "com.azure.cosmos.internal.ISessionContainer"
    - id: "transportClient"
      type: "com.azure.cosmos.internal.directconnectivity.TransportClient"
    - id: "serviceConfigReader"
      type: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
    - id: "authorizationTokenProvider"
      type: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
    - id: "enableReadRequestsFallback"
      type: "boolean"
    - id: "useMultipleWriteLocations"
      type: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.function.Function<com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.internal.RxDocumentServiceRequest>>)"
  id: "invokeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.function.Function<com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.internal.RxDocumentServiceRequest>>)"
  parent: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  langs:
  - "java"
  name: "invokeAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  nameWithType: "ReplicatedResourceClient.invokeAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  overload: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public Mono<StoreResponse> invokeAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "prepareRequestAsyncDelegate"
      type: "java.util.function.Function<com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.internal.RxDocumentServiceRequest>>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled()"
  id: "isGlobalStrongEnabled()"
  parent: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  langs:
  - "java"
  name: "isGlobalStrongEnabled()"
  nameWithType: "ReplicatedResourceClient.isGlobalStrongEnabled()"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled()"
  overload: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public static boolean isGlobalStrongEnabled()"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource(com.azure.cosmos.internal.ResourceType)"
  id: "isMasterResource(com.azure.cosmos.internal.ResourceType)"
  parent: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  langs:
  - "java"
  name: "isMasterResource(ResourceType resourceType)"
  nameWithType: "ReplicatedResourceClient.isMasterResource(ResourceType resourceType)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource(ResourceType resourceType)"
  overload: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public static boolean isMasterResource(ResourceType resourceType)"
    parameters:
    - id: "resourceType"
      type: "com.azure.cosmos.internal.ResourceType"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster(com.azure.cosmos.internal.ResourceType,com.azure.cosmos.internal.OperationType)"
  id: "isReadingFromMaster(com.azure.cosmos.internal.ResourceType,com.azure.cosmos.internal.OperationType)"
  parent: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient"
  langs:
  - "java"
  name: "isReadingFromMaster(ResourceType resourceType, OperationType operationType)"
  nameWithType: "ReplicatedResourceClient.isReadingFromMaster(ResourceType resourceType, OperationType operationType)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster(ResourceType resourceType, OperationType operationType)"
  overload: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public static boolean isReadingFromMaster(ResourceType resourceType, OperationType operationType)"
    parameters:
    - id: "resourceType"
      type: "com.azure.cosmos.internal.ResourceType"
    - id: "operationType"
      type: "com.azure.cosmos.internal.OperationType"
    return:
      type: "boolean"
references:
- uid: "com.azure.cosmos.internal.Configs"
  name: "Configs"
  nameWithType: "Configs"
  fullName: "com.azure.cosmos.internal.Configs"
- uid: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
  name: "AddressSelector"
  nameWithType: "AddressSelector"
  fullName: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
- uid: "com.azure.cosmos.internal.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.TransportClient"
  name: "TransportClient"
  nameWithType: "TransportClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.TransportClient"
- uid: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
  name: "GatewayServiceConfigurationReader"
  nameWithType: "GatewayServiceConfigurationReader"
  fullName: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
- uid: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
  name: "IAuthorizationTokenProvider"
  nameWithType: "IAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient*"
  name: "ReplicatedResourceClient"
  nameWithType: "ReplicatedResourceClient.ReplicatedResourceClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.ReplicatedResourceClient"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.ResourceType"
  name: "ResourceType"
  nameWithType: "ResourceType"
  fullName: "com.azure.cosmos.internal.ResourceType"
- uid: "com.azure.cosmos.internal.OperationType"
  name: "OperationType"
  nameWithType: "OperationType"
  fullName: "com.azure.cosmos.internal.OperationType"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster*"
  name: "isReadingFromMaster"
  nameWithType: "ReplicatedResourceClient.isReadingFromMaster"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isReadingFromMaster"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource*"
  name: "isMasterResource"
  nameWithType: "ReplicatedResourceClient.isMasterResource"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isMasterResource"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled*"
  name: "isGlobalStrongEnabled"
  nameWithType: "ReplicatedResourceClient.isGlobalStrongEnabled"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.isGlobalStrongEnabled"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "java.util.function.Function<com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.internal.RxDocumentServiceRequest>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    name: "RxDocumentServiceRequest"
    fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    name: "RxDocumentServiceRequest"
    fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    name: "StoreResponse"
    fullName: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync*"
  name: "invokeAsync"
  nameWithType: "ReplicatedResourceClient.invokeAsync"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReplicatedResourceClient.invokeAsync"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono"
  name: "RxDocumentServiceRequest,Mono"
  nameWithType: "RxDocumentServiceRequest,Mono"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest,reactor.core.publisher.Mono"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
  name: "StoreResponse"
  nameWithType: "StoreResponse"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
