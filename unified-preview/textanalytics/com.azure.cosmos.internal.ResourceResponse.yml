### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.ResourceResponse"
  id: "ResourceResponse"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.ResourceResponse.ResourceResponse(com.azure.cosmos.internal.RxDocumentServiceResponse,java.lang.Class<T>)"
  - "com.azure.cosmos.internal.ResourceResponse.getActivityId()"
  - "com.azure.cosmos.internal.ResourceResponse.getCollectionQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getCollectionUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnosticString()"
  - "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnostics()"
  - "com.azure.cosmos.internal.ResourceResponse.getCurrentQuotaHeader(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceResponse.getCurrentResourceQuotaUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getDatabaseQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getDatabaseUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getDocumentCountQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getDocumentCountUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getDocumentQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getDocumentUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getIndexTransformationProgress()"
  - "com.azure.cosmos.internal.ResourceResponse.getLazyIndexingProgress()"
  - "com.azure.cosmos.internal.ResourceResponse.getMaxQuotaHeader(java.lang.String)"
  - "com.azure.cosmos.internal.ResourceResponse.getMaxResourceQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getPermissionQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getPermissionUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getRequestCharge()"
  - "com.azure.cosmos.internal.ResourceResponse.getRequestLatency()"
  - "com.azure.cosmos.internal.ResourceResponse.getResource()"
  - "com.azure.cosmos.internal.ResourceResponse.getResponseHeaders()"
  - "com.azure.cosmos.internal.ResourceResponse.getSessionToken()"
  - "com.azure.cosmos.internal.ResourceResponse.getStatusCode()"
  - "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getTriggersQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getTriggersUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsUsage()"
  - "com.azure.cosmos.internal.ResourceResponse.getUserQuota()"
  - "com.azure.cosmos.internal.ResourceResponse.getUserUsage()"
  langs:
  - "java"
  name: "ResourceResponse<T>"
  nameWithType: "ResourceResponse<T>"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>"
  type: "Class"
  package: "com.azure.cosmos.internal"
  summary: "Represents the service response to a request made from DocumentClient in the Azure Cosmos DB database service. Contains both the resource and the response headers."
  syntax:
    content: "public final class ResourceResponse<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.ResourceResponse.ResourceResponse(com.azure.cosmos.internal.RxDocumentServiceResponse,java.lang.Class<T>)"
  id: "ResourceResponse(com.azure.cosmos.internal.RxDocumentServiceResponse,java.lang.Class<T>)"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "ResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  nameWithType: "ResourceResponse<T>.ResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.ResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
  overload: "com.azure.cosmos.internal.ResourceResponse.ResourceResponse*"
  type: "Constructor"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ResourceResponse(RxDocumentServiceResponse response, Class<T> cls)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.internal.RxDocumentServiceResponse"
    - id: "cls"
      type: "java.lang.Class<T>"
- uid: "com.azure.cosmos.internal.ResourceResponse.getActivityId()"
  id: "getActivityId()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getActivityId()"
  nameWithType: "ResourceResponse<T>.getActivityId()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getActivityId()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getActivityId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the Activity ID for the request."
  syntax:
    content: "public String getActivityId()"
    return:
      type: "java.lang.String"
      description: "the activity id."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionQuota()"
  id: "getCollectionQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCollectionQuota()"
  nameWithType: "ResourceResponse<T>.getCollectionQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCollectionQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getCollectionQuota()"
    return:
      type: "long"
      description: "the collection quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeQuota()"
  id: "getCollectionSizeQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCollectionSizeQuota()"
  nameWithType: "ResourceResponse<T>.getCollectionSizeQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionSizeQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getCollectionSizeQuota()"
    return:
      type: "long"
      description: "the collection size quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeUsage()"
  id: "getCollectionSizeUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCollectionSizeUsage()"
  nameWithType: "ResourceResponse<T>.getCollectionSizeUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionSizeUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getCollectionSizeUsage()"
    return:
      type: "long"
      description: "the collection size usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionUsage()"
  id: "getCollectionUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCollectionUsage()"
  nameWithType: "ResourceResponse<T>.getCollectionUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCollectionUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getCollectionUsage()"
    return:
      type: "long"
      description: "the current collection usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnosticString()"
  id: "getCosmosResponseDiagnosticString()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCosmosResponseDiagnosticString()"
  nameWithType: "ResourceResponse<T>.getCosmosResponseDiagnosticString()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCosmosResponseDiagnosticString()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnosticString*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the diagnostics information for the current request to Azure Cosmos DB service."
  syntax:
    content: "public String getCosmosResponseDiagnosticString()"
    return:
      type: "java.lang.String"
      description: "diagnostics information for the current request to Azure Cosmos DB service."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnostics()"
  id: "getCosmosResponseDiagnostics()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCosmosResponseDiagnostics()"
  nameWithType: "ResourceResponse<T>.getCosmosResponseDiagnostics()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCosmosResponseDiagnostics()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnostics*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the request diagnostic statistics for the current request to Azure Cosmos DB service."
  syntax:
    content: "public CosmosResponseDiagnostics getCosmosResponseDiagnostics()"
    return:
      type: "com.azure.cosmos.CosmosResponseDiagnostics"
      description: "request diagnostic statistics for the current request to Azure Cosmos DB service."
- uid: "com.azure.cosmos.internal.ResourceResponse.getCurrentQuotaHeader(java.lang.String)"
  id: "getCurrentQuotaHeader(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCurrentQuotaHeader(String headerName)"
  nameWithType: "ResourceResponse<T>.getCurrentQuotaHeader(String headerName)"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCurrentQuotaHeader(String headerName)"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCurrentQuotaHeader*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: " long getCurrentQuotaHeader(String headerName)"
    parameters:
    - id: "headerName"
      type: "java.lang.String"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCurrentResourceQuotaUsage()"
  id: "getCurrentResourceQuotaUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getCurrentResourceQuotaUsage()"
  nameWithType: "ResourceResponse<T>.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCurrentResourceQuotaUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getCurrentResourceQuotaUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the current size of this entity (in megabytes (MB) for server resources and in count for master resources)"
  syntax:
    content: "public String getCurrentResourceQuotaUsage()"
    return:
      type: "java.lang.String"
      description: "the current resource quota usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDatabaseQuota()"
  id: "getDatabaseQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDatabaseQuota()"
  nameWithType: "ResourceResponse<T>.getDatabaseQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDatabaseQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDatabaseQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getDatabaseQuota()"
    return:
      type: "long"
      description: "the database quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDatabaseUsage()"
  id: "getDatabaseUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDatabaseUsage()"
  nameWithType: "ResourceResponse<T>.getDatabaseUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDatabaseUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDatabaseUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getDatabaseUsage()"
    return:
      type: "long"
      description: "the current database usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountQuota()"
  id: "getDocumentCountQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDocumentCountQuota()"
  nameWithType: "ResourceResponse<T>.getDocumentCountQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentCountQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max document count quota."
  syntax:
    content: "public long getDocumentCountQuota()"
    return:
      type: "long"
      description: "the document count quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountUsage()"
  id: "getDocumentCountUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDocumentCountUsage()"
  nameWithType: "ResourceResponse<T>.getDocumentCountUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentCountUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current document count usage."
  syntax:
    content: "public long getDocumentCountUsage()"
    return:
      type: "long"
      description: "the document count usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentQuota()"
  id: "getDocumentQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDocumentQuota()"
  nameWithType: "ResourceResponse<T>.getDocumentQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDocumentQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getDocumentQuota()"
    return:
      type: "long"
      description: "the document quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentUsage()"
  id: "getDocumentUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getDocumentUsage()"
  nameWithType: "ResourceResponse<T>.getDocumentUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getDocumentUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getDocumentUsage()"
    return:
      type: "long"
      description: "the document usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getIndexTransformationProgress()"
  id: "getIndexTransformationProgress()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getIndexTransformationProgress()"
  nameWithType: "ResourceResponse<T>.getIndexTransformationProgress()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getIndexTransformationProgress()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getIndexTransformationProgress*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the progress of an index transformation, if one is underway."
  syntax:
    content: "public long getIndexTransformationProgress()"
    return:
      type: "long"
      description: "the progress of an index transformation."
- uid: "com.azure.cosmos.internal.ResourceResponse.getLazyIndexingProgress()"
  id: "getLazyIndexingProgress()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getLazyIndexingProgress()"
  nameWithType: "ResourceResponse<T>.getLazyIndexingProgress()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getLazyIndexingProgress()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getLazyIndexingProgress*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the progress of lazy indexing."
  syntax:
    content: "public long getLazyIndexingProgress()"
    return:
      type: "long"
      description: "the progress of lazy indexing."
- uid: "com.azure.cosmos.internal.ResourceResponse.getMaxQuotaHeader(java.lang.String)"
  id: "getMaxQuotaHeader(java.lang.String)"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getMaxQuotaHeader(String headerName)"
  nameWithType: "ResourceResponse<T>.getMaxQuotaHeader(String headerName)"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getMaxQuotaHeader(String headerName)"
  overload: "com.azure.cosmos.internal.ResourceResponse.getMaxQuotaHeader*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: " long getMaxQuotaHeader(String headerName)"
    parameters:
    - id: "headerName"
      type: "java.lang.String"
    return:
      type: "long"
- uid: "com.azure.cosmos.internal.ResourceResponse.getMaxResourceQuota()"
  id: "getMaxResourceQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getMaxResourceQuota()"
  nameWithType: "ResourceResponse<T>.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getMaxResourceQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getMaxResourceQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the maximum size limit for this entity (in megabytes (MB) for server resources and in count for master resources)."
  syntax:
    content: "public String getMaxResourceQuota()"
    return:
      type: "java.lang.String"
      description: "the max resource quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getPermissionQuota()"
  id: "getPermissionQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getPermissionQuota()"
  nameWithType: "ResourceResponse<T>.getPermissionQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getPermissionQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getPermissionQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getPermissionQuota()"
    return:
      type: "long"
      description: "the permission quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getPermissionUsage()"
  id: "getPermissionUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getPermissionUsage()"
  nameWithType: "ResourceResponse<T>.getPermissionUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getPermissionUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getPermissionUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getPermissionUsage()"
    return:
      type: "long"
      description: "the current permission usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getRequestCharge()"
  id: "getRequestCharge()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getRequestCharge()"
  nameWithType: "ResourceResponse<T>.getRequestCharge()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getRequestCharge()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getRequestCharge*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the number of index paths (terms) generated by the operation."
  syntax:
    content: "public double getRequestCharge()"
    return:
      type: "double"
      description: "the request charge."
- uid: "com.azure.cosmos.internal.ResourceResponse.getRequestLatency()"
  id: "getRequestLatency()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getRequestLatency()"
  nameWithType: "ResourceResponse<T>.getRequestLatency()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getRequestLatency()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getRequestLatency*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the end-to-end request latency for the current request to Azure Cosmos DB service."
  syntax:
    content: "public Duration getRequestLatency()"
    return:
      type: "java.time.Duration"
      description: "end-to-end request latency for the current request to Azure Cosmos DB service."
- uid: "com.azure.cosmos.internal.ResourceResponse.getResource()"
  id: "getResource()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getResource()"
  nameWithType: "ResourceResponse<T>.getResource()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getResource()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getResource*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the resource for the request."
  syntax:
    content: "public T getResource()"
    return:
      type: "T"
      description: "the resource."
- uid: "com.azure.cosmos.internal.ResourceResponse.getResponseHeaders()"
  id: "getResponseHeaders()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getResponseHeaders()"
  nameWithType: "ResourceResponse<T>.getResponseHeaders()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getResponseHeaders()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getResponseHeaders*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the headers associated with the response."
  syntax:
    content: "public Map<String,String> getResponseHeaders()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the response headers."
- uid: "com.azure.cosmos.internal.ResourceResponse.getSessionToken()"
  id: "getSessionToken()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getSessionToken()"
  nameWithType: "ResourceResponse<T>.getSessionToken()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getSessionToken()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the token used for managing client's consistency requirements."
  syntax:
    content: "public String getSessionToken()"
    return:
      type: "java.lang.String"
      description: "the session token."
- uid: "com.azure.cosmos.internal.ResourceResponse.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "ResourceResponse<T>.getStatusCode()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStatusCode()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getStatusCode*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Gets the HTTP status code associated with the response."
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
      description: "the status code."
- uid: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresQuota()"
  id: "getStoredProceduresQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getStoredProceduresQuota()"
  nameWithType: "ResourceResponse<T>.getStoredProceduresQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStoredProceduresQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getStoredProceduresQuota()"
    return:
      type: "long"
      description: "the stored procedures quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresUsage()"
  id: "getStoredProceduresUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getStoredProceduresUsage()"
  nameWithType: "ResourceResponse<T>.getStoredProceduresUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStoredProceduresUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getStoredProceduresUsage()"
    return:
      type: "long"
      description: "the current stored procedures usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getTriggersQuota()"
  id: "getTriggersQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getTriggersQuota()"
  nameWithType: "ResourceResponse<T>.getTriggersQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getTriggersQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getTriggersQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getTriggersQuota()"
    return:
      type: "long"
      description: "the triggers quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getTriggersUsage()"
  id: "getTriggersUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getTriggersUsage()"
  nameWithType: "ResourceResponse<T>.getTriggersUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getTriggersUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getTriggersUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getTriggersUsage()"
    return:
      type: "long"
      description: "the current triggers usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsQuota()"
  id: "getUserDefinedFunctionsQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getUserDefinedFunctionsQuota()"
  nameWithType: "ResourceResponse<T>.getUserDefinedFunctionsQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserDefinedFunctionsQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getUserDefinedFunctionsQuota()"
    return:
      type: "long"
      description: "the user defined functions quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsUsage()"
  id: "getUserDefinedFunctionsUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getUserDefinedFunctionsUsage()"
  nameWithType: "ResourceResponse<T>.getUserDefinedFunctionsUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserDefinedFunctionsUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getUserDefinedFunctionsUsage()"
    return:
      type: "long"
      description: "the current user defined functions usage."
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserQuota()"
  id: "getUserQuota()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getUserQuota()"
  nameWithType: "ResourceResponse<T>.getUserQuota()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserQuota()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getUserQuota*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Max Quota."
  syntax:
    content: "public long getUserQuota()"
    return:
      type: "long"
      description: "the user quota."
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserUsage()"
  id: "getUserUsage()"
  parent: "com.azure.cosmos.internal.ResourceResponse"
  langs:
  - "java"
  name: "getUserUsage()"
  nameWithType: "ResourceResponse<T>.getUserUsage()"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserUsage()"
  overload: "com.azure.cosmos.internal.ResourceResponse.getUserUsage*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Current Usage."
  syntax:
    content: "public long getUserUsage()"
    return:
      type: "long"
      description: "the current user usage."
references:
- uid: "com.azure.cosmos.internal.RxDocumentServiceResponse"
  name: "RxDocumentServiceResponse"
  nameWithType: "RxDocumentServiceResponse"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceResponse"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ResourceResponse.ResourceResponse*"
  name: "ResourceResponse"
  nameWithType: "ResourceResponse<T>.ResourceResponse"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.ResourceResponse"
  package: "com.azure.cosmos.internal"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDatabaseQuota*"
  name: "getDatabaseQuota"
  nameWithType: "ResourceResponse<T>.getDatabaseQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDatabaseQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDatabaseUsage*"
  name: "getDatabaseUsage"
  nameWithType: "ResourceResponse<T>.getDatabaseUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDatabaseUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionQuota*"
  name: "getCollectionQuota"
  nameWithType: "ResourceResponse<T>.getCollectionQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionUsage*"
  name: "getCollectionUsage"
  nameWithType: "ResourceResponse<T>.getCollectionUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserQuota*"
  name: "getUserQuota"
  nameWithType: "ResourceResponse<T>.getUserQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserUsage*"
  name: "getUserUsage"
  nameWithType: "ResourceResponse<T>.getUserUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getPermissionQuota*"
  name: "getPermissionQuota"
  nameWithType: "ResourceResponse<T>.getPermissionQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getPermissionQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getPermissionUsage*"
  name: "getPermissionUsage"
  nameWithType: "ResourceResponse<T>.getPermissionUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getPermissionUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeQuota*"
  name: "getCollectionSizeQuota"
  nameWithType: "ResourceResponse<T>.getCollectionSizeQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionSizeQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCollectionSizeUsage*"
  name: "getCollectionSizeUsage"
  nameWithType: "ResourceResponse<T>.getCollectionSizeUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCollectionSizeUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentQuota*"
  name: "getDocumentQuota"
  nameWithType: "ResourceResponse<T>.getDocumentQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentUsage*"
  name: "getDocumentUsage"
  nameWithType: "ResourceResponse<T>.getDocumentUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountQuota*"
  name: "getDocumentCountQuota"
  nameWithType: "ResourceResponse<T>.getDocumentCountQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentCountQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getDocumentCountUsage*"
  name: "getDocumentCountUsage"
  nameWithType: "ResourceResponse<T>.getDocumentCountUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getDocumentCountUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresQuota*"
  name: "getStoredProceduresQuota"
  nameWithType: "ResourceResponse<T>.getStoredProceduresQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStoredProceduresQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getStoredProceduresUsage*"
  name: "getStoredProceduresUsage"
  nameWithType: "ResourceResponse<T>.getStoredProceduresUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStoredProceduresUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getTriggersQuota*"
  name: "getTriggersQuota"
  nameWithType: "ResourceResponse<T>.getTriggersQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getTriggersQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getTriggersUsage*"
  name: "getTriggersUsage"
  nameWithType: "ResourceResponse<T>.getTriggersUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getTriggersUsage"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsQuota*"
  name: "getUserDefinedFunctionsQuota"
  nameWithType: "ResourceResponse<T>.getUserDefinedFunctionsQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserDefinedFunctionsQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getUserDefinedFunctionsUsage*"
  name: "getUserDefinedFunctionsUsage"
  nameWithType: "ResourceResponse<T>.getUserDefinedFunctionsUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getUserDefinedFunctionsUsage"
  package: "com.azure.cosmos.internal"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.ResourceResponse.getActivityId*"
  name: "getActivityId"
  nameWithType: "ResourceResponse<T>.getActivityId"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getActivityId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "ResourceResponse<T>.getSessionToken"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.internal.ResourceResponse.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "ResourceResponse<T>.getStatusCode"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getStatusCode"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getMaxResourceQuota*"
  name: "getMaxResourceQuota"
  nameWithType: "ResourceResponse<T>.getMaxResourceQuota"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getMaxResourceQuota"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCurrentResourceQuotaUsage*"
  name: "getCurrentResourceQuotaUsage"
  nameWithType: "ResourceResponse<T>.getCurrentResourceQuotaUsage"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCurrentResourceQuotaUsage"
  package: "com.azure.cosmos.internal"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.cosmos.internal.ResourceResponse.getResource*"
  name: "getResource"
  nameWithType: "ResourceResponse<T>.getResource"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getResource"
  package: "com.azure.cosmos.internal"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "com.azure.cosmos.internal.ResourceResponse.getRequestCharge*"
  name: "getRequestCharge"
  nameWithType: "ResourceResponse<T>.getRequestCharge"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getRequestCharge"
  package: "com.azure.cosmos.internal"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ResourceResponse.getResponseHeaders*"
  name: "getResponseHeaders"
  nameWithType: "ResourceResponse<T>.getResponseHeaders"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getResponseHeaders"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getIndexTransformationProgress*"
  name: "getIndexTransformationProgress"
  nameWithType: "ResourceResponse<T>.getIndexTransformationProgress"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getIndexTransformationProgress"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getLazyIndexingProgress*"
  name: "getLazyIndexingProgress"
  nameWithType: "ResourceResponse<T>.getLazyIndexingProgress"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getLazyIndexingProgress"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.CosmosResponseDiagnostics"
  name: "CosmosResponseDiagnostics"
  nameWithType: "CosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.CosmosResponseDiagnostics"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnostics*"
  name: "getCosmosResponseDiagnostics"
  nameWithType: "ResourceResponse<T>.getCosmosResponseDiagnostics"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCosmosResponseDiagnostics"
  package: "com.azure.cosmos.internal"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.internal.ResourceResponse.getRequestLatency*"
  name: "getRequestLatency"
  nameWithType: "ResourceResponse<T>.getRequestLatency"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getRequestLatency"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCosmosResponseDiagnosticString*"
  name: "getCosmosResponseDiagnosticString"
  nameWithType: "ResourceResponse<T>.getCosmosResponseDiagnosticString"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCosmosResponseDiagnosticString"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getCurrentQuotaHeader*"
  name: "getCurrentQuotaHeader"
  nameWithType: "ResourceResponse<T>.getCurrentQuotaHeader"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getCurrentQuotaHeader"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ResourceResponse.getMaxQuotaHeader*"
  name: "getMaxQuotaHeader"
  nameWithType: "ResourceResponse<T>.getMaxQuotaHeader"
  fullName: "com.azure.cosmos.internal.ResourceResponse<T>.getMaxQuotaHeader"
  package: "com.azure.cosmos.internal"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
