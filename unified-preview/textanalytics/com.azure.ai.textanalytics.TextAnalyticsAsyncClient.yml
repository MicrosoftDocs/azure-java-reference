### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  id: "TextAnalyticsAsyncClient"
  parent: "com.azure.ai.textanalytics"
  children:
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,com.azure.ai.textanalytics.models.TextAnalyticsClientOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.util.List<java.lang.String>)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(java.lang.String,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  - "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  langs:
  - "java"
  name: "TextAnalyticsAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  type: "Class"
  package: "com.azure.ai.textanalytics"
  summary: "This class provides an asynchronous client that contains all the operations that apply to Azure Text Analytics. Operations allowed by the client are language detection, sentiment analysis, and recognition entities, PII entities, and linked entities of a text input or list of test inputs.\n\n**Instantiating an asynchronous Text Analytics Client**\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.instantiation\\}\n\nView <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientBuilder</xref> for additional ways to construct the client."
  syntax:
    content: "public final class TextAnalyticsAsyncClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,com.azure.ai.textanalytics.models.TextAnalyticsClientOptions)"
  id: "TextAnalyticsAsyncClient(com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl,com.azure.ai.textanalytics.TextAnalyticsServiceVersion,com.azure.ai.textanalytics.models.TextAnalyticsClientOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, TextAnalyticsClientOptions clientOptions)"
  nameWithType: "TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, TextAnalyticsClientOptions clientOptions)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, TextAnalyticsClientOptions clientOptions)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics"
  summary: "Create a `TextAnalyticsAsyncClient` that sends requests to the Text Analytics services's endpoint. Each service call goes through the <xref uid=\"com.azure.ai.textanalytics.TextAnalyticsClientBuilder.pipeline*\" data-throw-if-not-resolved=\"false\">http pipeline</xref>."
  syntax:
    content: " TextAnalyticsAsyncClient(TextAnalyticsClientImpl service, TextAnalyticsServiceVersion serviceVersion, TextAnalyticsClientOptions clientOptions)"
    parameters:
    - id: "service"
      type: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
      description: "The proxy service used to perform REST calls."
    - id: "serviceVersion"
      type: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
      description: "The versions of Azure Text Analytics supported by this client library."
    - id: "clientOptions"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsClientOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsClientOptions\" data-throw-if-not-resolved=\"false\">client option</xref> contains\n <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsClientOptions.getDefaultLanguage*\" data-throw-if-not-resolved=\"false\">default language</xref> and\n <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsClientOptions.getDefaultCountryHint()\" data-throw-if-not-resolved=\"false\">TextAnalyticsClientOptions#getDefaultCountryHint()</xref> default country hint} that could be used as default\n values for each request."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  id: "analyzeBatchSentiment(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeBatchSentiment(List<TextDocumentInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeBatchSentiment(List<TextDocumentInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment(List<TextDocumentInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<AnalyzeSentimentResult>> analyzeBatchSentiment(List<TextDocumentInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "analyzeBatchSentimentWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeBatchSentimentWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of TextDocumentInput with provided request options. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<AnalyzeSentimentResult>>> analyzeBatchSentimentWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref>  to be analyzed."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.lang.String)"
  id: "analyzeSentiment(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentiment(String text)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within i\n\nAnalyze sentiment in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment\\#string\\}"
  syntax:
    content: "public Mono<AnalyzeSentimentResult> analyzeSentiment(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(java.util.List<java.lang.String>)"
  id: "analyzeSentiment(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentiment(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment\\#list-string\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<AnalyzeSentimentResult>> analyzeSentiment(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  id: "analyzeSentimentAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final AnalyzeSentimentAsyncClient analyzeSentimentAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(java.lang.String,java.lang.String)"
  id: "analyzeSentimentWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentWithResponse(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentWithResponse(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within i\n\nAnalyze sentiment in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<AnalyzeSentimentResult>> analyzeSentimentWithResponse(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to be analyzed."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "analyzeSentimentWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "analyzeSentimentWithResponse(List<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentWithResponse(List<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse(List<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it.\n\nAnalyze sentiment in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the sentiment details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<AnalyzeSentimentResult>>> analyzeSentimentWithResponse(List<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to be analyzed."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.AnalyzeSentimentResult\" data-throw-if-not-resolved=\"false\">text sentiment</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>)"
  id: "detectBatchLanguages(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectBatchLanguages(List<DetectLanguageInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.detectBatchLanguages(List<DetectLanguageInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages(List<DetectLanguageInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for a batch of input.\n\n**Code sample**\n\nDetects languages in a list of DetectLanguageInput. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<DetectLanguageResult>> detectBatchLanguages(List<DetectLanguageInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>"
      description: "The list of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected languages</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "detectBatchLanguagesWithResponse(java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectBatchLanguagesWithResponse(List<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse(List<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse(List<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for a batch of input.\n\n**Code sample**\n\nDetects languages in a text. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<DetectLanguageResult>>> detectBatchLanguagesWithResponse(List<DetectLanguageInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>"
      description: "The list of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to be analyzed."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected languages</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(java.lang.String)"
  id: "detectLanguage(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguage(String text)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguage(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language and a numeric score between zero and one. Scores close to one indicate 100% certainty that the identified language is true.\n\n**Code sample**\n\nDetects languages in a text. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage\\#string\\}"
  syntax:
    content: "public Mono<DetectLanguageResult> detectLanguage(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The text to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DetectLanguageResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  id: "detectLanguageAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final DetectLanguageAsyncClient detectLanguageAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse(java.lang.String,java.lang.String)"
  id: "detectLanguageWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguageWithResponse(String text, String countryHint)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageWithResponse(String text, String countryHint)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse(String text, String countryHint)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> containing the detected language and a numeric score between zero and one. Scores close to one indicate 100% certainty that the identified language is true.\n\n**Code sample**\n\nDetects languages with http response in a text with a provided country hint. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<DetectLanguageResult>> detectLanguageWithResponse(String text, String countryHint)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "The text to be analyzed."
    - id: "countryHint"
      type: "java.lang.String"
      description: "Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not\n specified."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DetectLanguageResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected language</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages(java.util.List<java.lang.String>)"
  id: "detectLanguages(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguages(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguages(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for a batch of input.\n\n**Code sample**\n\nDetects languages in a list of string inputs. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<DetectLanguageResult>> detectLanguages(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "The list of texts to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected languages</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "detectLanguagesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "detectLanguagesWithResponse(List<String> textInputs, String countryHint)"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguagesWithResponse(List<String> textInputs, String countryHint)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse(List<String> textInputs, String countryHint)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns the detected language for a batch of input with the provided country hint.\n\n**Code sample**\n\nDetects languages in a list of string inputs with a provided country hint for the batch. Subscribes to the call asynchronously and prints out the detected language details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<DetectLanguageResult>>> detectLanguagesWithResponse(List<String> textInputs, String countryHint)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "The list of texts to be analyzed."
    - id: "countryHint"
      type: "java.lang.String"
      description: "A country hint for the entire batch. Accepts two letter country codes specified by ISO\n 3166-1 alpha-2. Defaults to \"US\" if not specified."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageResult\" data-throw-if-not-resolved=\"false\">detected languages</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  id: "extractBatchKeyPhrases(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractBatchKeyPhrases(List<TextDocumentInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.extractBatchKeyPhrases(List<TextDocumentInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases(List<TextDocumentInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text.\n\nExtract key phrases in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<ExtractKeyPhraseResult>> extractBatchKeyPhrases(List<TextDocumentInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "extractBatchKeyPhrasesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractBatchKeyPhrasesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text. See  for the list of enabled languages.\n\nExtract key phrases in a list of TextDocumentInput with request options. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<ExtractKeyPhraseResult>>> extractBatchKeyPhrasesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref>  to be analyzed."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  id: "extractKeyPhraseAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhraseAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhraseAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final ExtractKeyPhraseAsyncClient extractKeyPhraseAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.lang.String)"
  id: "extractKeyPhrases(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrases(String text)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text.\n\nExtract key phrases in a text. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases\\#string\\}"
  syntax:
    content: "public Mono<ExtractKeyPhraseResult> extractKeyPhrases(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(java.util.List<java.lang.String>)"
  id: "extractKeyPhrases(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrases(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text.\n\nExtract key phrases in a list of string inputs. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases\\#list-string\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<ExtractKeyPhraseResult>> extractKeyPhrases(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to be analyzed."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(java.lang.String,java.lang.String)"
  id: "extractKeyPhrasesWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesWithResponse(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text. See  for the list of enabled languages.\n\nExtract key phrases in a text with a provided language. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<ExtractKeyPhraseResult>> extractKeyPhrasesWithResponse(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to be analyzed."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "extractKeyPhrasesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "extractKeyPhrasesWithResponse(List<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(List<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse(List<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of strings denoting the key phrases in the input text. See  for the list of enabled languages.\n\nExtract key phrases in a list of string inputs with a provided language. Subscribes to the call asynchronously and prints out the key phrases when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<ExtractKeyPhraseResult>>> extractKeyPhrasesWithResponse(List<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to be analyzed."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.ExtractKeyPhraseResult\" data-throw-if-not-resolved=\"false\">key phrases</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  id: "getDefaultCountryHint()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getDefaultCountryHint()"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultCountryHint()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Get default country hint code."
  syntax:
    content: "public String getDefaultCountryHint()"
    return:
      type: "java.lang.String"
      description: "the default country hint code"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  id: "getDefaultLanguage()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getDefaultLanguage()"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultLanguage()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Get default language when the builder is setup."
  syntax:
    content: "public String getDefaultLanguage()"
    return:
      type: "java.lang.String"
      description: "the default language"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "TextAnalyticsAsyncClient.getServiceVersion()"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion()"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Gets the service version the client is using."
  syntax:
    content: "public TextAnalyticsServiceVersion getServiceVersion()"
    return:
      type: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
      description: "the service version the client is using."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  id: "recognizeBatchEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchEntities(List<TextDocumentInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchEntities(List<TextDocumentInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities(List<TextDocumentInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities for the provided list of text inputs.\n\n**Code sample**\n\nRecognize entities in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizeEntitiesResult>> recognizeBatchEntities(List<TextDocumentInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeBatchEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities for the provided list of text inputs.\n\n**Code sample**\n\nRecognize entities in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizeEntitiesResult>>> recognizeBatchEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize entities for."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  id: "recognizeBatchLinkedEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchLinkedEntities(List<TextDocumentInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchLinkedEntities(List<TextDocumentInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities(List<TextDocumentInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of inputs. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizeLinkedEntitiesResult>> recognizeBatchLinkedEntities(List<TextDocumentInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize linked entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">linked entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeBatchLinkedEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchLinkedEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of inputs. See  supported languages in Text Analytics API.\n\nRecognize linked entities in a list of TextDocumentInput and provided reuqest options to show statistics. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizeLinkedEntitiesResult>>> recognizeBatchLinkedEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize linked entities for."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">linked entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  id: "recognizeBatchPiiEntities(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchPiiEntities(List<TextDocumentInput> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchPiiEntities(List<TextDocumentInput> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities(List<TextDocumentInput> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the batch of document inputs. For the list of supported entity types, check:  For a list of enabled languages, check: .\n\nRecognize PII entities in a list of TextDocumentInput. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizePiiEntitiesResult>> recognizeBatchPiiEntities(List<TextDocumentInput> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize PII entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  id: "recognizeBatchPiiEntitiesWithResponse(java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>,com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeBatchPiiEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the batch of document inputs. For the list of supported entity types,check: . For a list of enabled languages, check: .\n\nRecognize PII entities in a list of TextDocumentInput with provided statistics options. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse\\#List-TextAnalyticsRequestOptions\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizePiiEntitiesResult>>> recognizeBatchPiiEntitiesWithResponse(List<TextDocumentInput> textInputs, TextAnalyticsRequestOptions options)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
      description: "A list of <xref uid=\"com.azure.ai.textanalytics.models.TextDocumentInput\" data-throw-if-not-resolved=\"false\">inputs/documents</xref> to recognize PII entities for."
    - id: "options"
      type: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
      description: "The <xref uid=\"com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions\" data-throw-if-not-resolved=\"false\">options</xref> to configure the scoring model for documents\n and show statistics."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> contains the\n <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.lang.String)"
  id: "recognizeEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities in the provided text. For a list of supported entity types, check: . For a list of enabled languages, check: \n\n**Code sample**\n\nRecognize entities in a text. Subscribes to the call asynchronously and prints out the recognized entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities\\#string\\}"
  syntax:
    content: "public Mono<RecognizeEntitiesResult> recognizeEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(java.util.List<java.lang.String>)"
  id: "recognizeEntities(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntities(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities for the provided list of texts.\n\n**Code sample**\n\nRecognize entities in a text. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities\\#List\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizeEntitiesResult>> recognizeEntities(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of texts to recognize entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(java.lang.String,java.lang.String)"
  id: "recognizeEntitiesWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesWithResponse(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities in the provided text. For a list of supported entity types, check: . For a list of enabled languages, check: \n\n**Code sample**\n\nRecognize entities in a text with provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<RecognizeEntitiesResult>> recognizeEntitiesWithResponse(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as\n default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "recognizeEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntitiesWithResponse(List<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(List<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse(List<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of general named entities for the provided list of texts.\n\n**Code sample**\n\nRecognize entities in a text with the provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizeEntitiesResult>>> recognizeEntitiesWithResponse(List<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of texts to recognize entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language. If not set, uses \"en\" for English as\n default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  id: "recognizeEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizeEntityAsyncClient recognizeEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.lang.String)"
  id: "recognizeLinkedEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the provided text. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a text. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities\\#string\\}"
  syntax:
    content: "public Mono<RecognizeLinkedEntitiesResult> recognizeLinkedEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize linked entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">linked entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(java.util.List<java.lang.String>)"
  id: "recognizeLinkedEntities(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntities(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of texts. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a list of string inputs. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities\\#list-string\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizeLinkedEntitiesResult>> recognizeLinkedEntities(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to recognize linked entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">linked entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(java.lang.String,java.lang.String)"
  id: "recognizeLinkedEntitiesWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesWithResponse(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the provided text. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a text with provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<RecognizeLinkedEntitiesResult>> recognizeLinkedEntitiesWithResponse(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize linked entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "recognizeLinkedEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntitiesWithResponse(List<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(List<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse(List<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of recognized entities with links to a well-known knowledge base for the list of texts. See  for supported languages in Text Analytics API.\n\nRecognize linked entities in a list of string inputs with provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizeLinkedEntitiesResult>>> recognizeLinkedEntitiesWithResponse(List<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to recognize linked entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult\" data-throw-if-not-resolved=\"false\">linked entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  id: "recognizeLinkedEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizeLinkedEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizeLinkedEntityAsyncClient recognizeLinkedEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.lang.String)"
  id: "recognizePiiEntities(java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntities(String text)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities(String text)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(String text)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the text. For the list of supported entity types, check . See  for the list of enabled languages.\n\nRecognize PII entities in a text. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities\\#string\\}"
  syntax:
    content: "public Mono<RecognizePiiEntitiesResult> recognizePiiEntities(String text)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize PII entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">PII entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(java.util.List<java.lang.String>)"
  id: "recognizePiiEntities(java.util.List<java.lang.String>)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntities(List<String> textInputs)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities(List<String> textInputs)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities(List<String> textInputs)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the list of texts. For the list of supported entity types, check: . For a list of enabled languages, check:  for the list of enabled languages.\n\nRecognize PII entities in a list of string inputs. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities\\#list-string\\}"
  syntax:
    content: "public Mono<DocumentResultCollection<RecognizePiiEntitiesResult>> recognizePiiEntities(List<String> textInputs)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to recognize PII entities for."
    return:
      type: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(java.lang.String,java.lang.String)"
  id: "recognizePiiEntitiesWithResponse(java.lang.String,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesWithResponse(String text, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(String text, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(String text, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the text. For the list of supported entity types, check: . For a list of enabled languages, check: .\n\nRecognize PII entities in a text with provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse\\#string-string\\}"
  syntax:
    content: "public Mono<Response<RecognizePiiEntitiesResult>> recognizePiiEntitiesWithResponse(String text, String language)"
    parameters:
    - id: "text"
      type: "java.lang.String"
      description: "the text to recognize PII entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>"
      description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> whose <xref uid=\"\" data-throw-if-not-resolved=\"false\">value</xref> has the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref> of the text."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  id: "recognizePiiEntitiesWithResponse(java.util.List<java.lang.String>,java.lang.String)"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntitiesWithResponse(List<String> textInputs, String language)"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(List<String> textInputs, String language)"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse(List<String> textInputs, String language)"
  overload: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse*"
  type: "Method"
  package: "com.azure.ai.textanalytics"
  summary: "Returns a list of personal information entities (\"SSN\", \"Bank Account\", etc) in the list of texts. For the list of supported entity types, check . For a list of enabled languages, check: .\n\nRecognize PII entities in a list of string inputs with provided language hint. Subscribes to the call asynchronously and prints out the entity details when a response is received.\n\n\\{@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse\\#List-String\\}"
  syntax:
    content: "public Mono<Response<DocumentResultCollection<RecognizePiiEntitiesResult>>> recognizePiiEntitiesWithResponse(List<String> textInputs, String language)"
    parameters:
    - id: "textInputs"
      type: "java.util.List<java.lang.String>"
      description: "A list of text to recognize PII entities for."
    - id: "language"
      type: "java.lang.String"
      description: "The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n English as default."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>>"
      description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\">Response</xref> of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the <xref uid=\"com.azure.ai.textanalytics.models.DocumentResultCollection\" data-throw-if-not-resolved=\"false\">batch</xref> of the\n <xref uid=\"com.azure.ai.textanalytics.models.RecognizeEntitiesResult\" data-throw-if-not-resolved=\"false\">named entity</xref>."
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  id: "recognizePiiEntityAsyncClient"
  parent: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient"
  langs:
  - "java"
  name: "recognizePiiEntityAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntityAsyncClient"
  type: "Field"
  package: "com.azure.ai.textanalytics"
  syntax:
    content: "final RecognizePiiEntityAsyncClient recognizePiiEntityAsyncClient"
    return:
      type: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
references:
- uid: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
  name: "TextAnalyticsClientImpl"
  nameWithType: "TextAnalyticsClientImpl"
  fullName: "com.azure.ai.textanalytics.implementation.TextAnalyticsClientImpl"
- uid: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
  name: "TextAnalyticsServiceVersion"
  nameWithType: "TextAnalyticsServiceVersion"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsServiceVersion"
- uid: "com.azure.ai.textanalytics.models.TextAnalyticsClientOptions"
  name: "TextAnalyticsClientOptions"
  nameWithType: "TextAnalyticsClientOptions"
  fullName: "com.azure.ai.textanalytics.models.TextAnalyticsClientOptions"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient*"
  name: "TextAnalyticsAsyncClient"
  nameWithType: "TextAnalyticsAsyncClient.TextAnalyticsAsyncClient"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.TextAnalyticsAsyncClient"
  package: "com.azure.ai.textanalytics"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint*"
  name: "getDefaultCountryHint"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultCountryHint"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultCountryHint"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage*"
  name: "getDefaultLanguage"
  nameWithType: "TextAnalyticsAsyncClient.getDefaultLanguage"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getDefaultLanguage"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "TextAnalyticsAsyncClient.getServiceVersion"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.getServiceVersion"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DetectLanguageResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage*"
  name: "detectLanguage"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguage"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguage"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DetectLanguageResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse*"
  name: "detectLanguageWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguageWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguageWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages*"
  name: "detectLanguages"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguages"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguages"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.DetectLanguageResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
    name: "DetectLanguageResult"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse*"
  name: "detectLanguagesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.detectLanguagesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectLanguagesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "java.util.List<com.azure.ai.textanalytics.models.DetectLanguageInput>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
    name: "DetectLanguageInput"
    fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages*"
  name: "detectBatchLanguages"
  nameWithType: "TextAnalyticsAsyncClient.detectBatchLanguages"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguages"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
  name: "TextAnalyticsRequestOptions"
  nameWithType: "TextAnalyticsRequestOptions"
  fullName: "com.azure.ai.textanalytics.models.TextAnalyticsRequestOptions"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse*"
  name: "detectBatchLanguagesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.detectBatchLanguagesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
    name: "RecognizeEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities*"
  name: "recognizeEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntities"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
    name: "RecognizeEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse*"
  name: "recognizeEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizeEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
    name: "RecognizeEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeEntitiesResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
    name: "RecognizeEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<com.azure.ai.textanalytics.models.TextDocumentInput>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.TextDocumentInput"
    name: "TextDocumentInput"
    fullName: "com.azure.ai.textanalytics.models.TextDocumentInput"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities*"
  name: "recognizeBatchEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse*"
  name: "recognizeBatchEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
    name: "RecognizePiiEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities*"
  name: "recognizePiiEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntities"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
    name: "RecognizePiiEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse*"
  name: "recognizePiiEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizePiiEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
    name: "RecognizePiiEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
    name: "RecognizePiiEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities*"
  name: "recognizeBatchPiiEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchPiiEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse*"
  name: "recognizeBatchPiiEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchPiiEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
    name: "RecognizeLinkedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities*"
  name: "recognizeLinkedEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntities"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
    name: "RecognizeLinkedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse*"
  name: "recognizeLinkedEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeLinkedEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
    name: "RecognizeLinkedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
    name: "RecognizeLinkedEntitiesResult"
    fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities*"
  name: "recognizeBatchLinkedEntities"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchLinkedEntities"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntities"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse*"
  name: "recognizeBatchLinkedEntitiesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.recognizeBatchLinkedEntitiesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
    name: "ExtractKeyPhraseResult"
    fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases*"
  name: "extractKeyPhrases"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrases"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
    name: "ExtractKeyPhraseResult"
    fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse*"
  name: "extractKeyPhrasesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
    name: "ExtractKeyPhraseResult"
    fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.ExtractKeyPhraseResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
    name: "ExtractKeyPhraseResult"
    fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases*"
  name: "extractBatchKeyPhrases"
  nameWithType: "TextAnalyticsAsyncClient.extractBatchKeyPhrases"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrases"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse*"
  name: "extractBatchKeyPhrasesWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractBatchKeyPhrasesWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
    name: "AnalyzeSentimentResult"
    fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment*"
  name: "analyzeSentiment"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentiment"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentiment"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
    name: "AnalyzeSentimentResult"
    fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse*"
  name: "analyzeSentimentWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.analyzeSentimentWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeSentimentWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "reactor.core.publisher.Mono<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
    name: "AnalyzeSentimentResult"
    fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.textanalytics.models.DocumentResultCollection<com.azure.ai.textanalytics.models.AnalyzeSentimentResult>>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
    name: "DocumentResultCollection"
    fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
    name: "AnalyzeSentimentResult"
    fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment*"
  name: "analyzeBatchSentiment"
  nameWithType: "TextAnalyticsAsyncClient.analyzeBatchSentiment"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentiment"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse*"
  name: "analyzeBatchSentimentWithResponse"
  nameWithType: "TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse"
  fullName: "com.azure.ai.textanalytics.TextAnalyticsAsyncClient.analyzeBatchSentimentWithResponse"
  package: "com.azure.ai.textanalytics"
- uid: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
  name: "DetectLanguageAsyncClient"
  nameWithType: "DetectLanguageAsyncClient"
  fullName: "com.azure.ai.textanalytics.DetectLanguageAsyncClient"
- uid: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
  name: "AnalyzeSentimentAsyncClient"
  nameWithType: "AnalyzeSentimentAsyncClient"
  fullName: "com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient"
- uid: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
  name: "ExtractKeyPhraseAsyncClient"
  nameWithType: "ExtractKeyPhraseAsyncClient"
  fullName: "com.azure.ai.textanalytics.ExtractKeyPhraseAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
  name: "RecognizeEntityAsyncClient"
  nameWithType: "RecognizeEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizeEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
  name: "RecognizePiiEntityAsyncClient"
  nameWithType: "RecognizePiiEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizePiiEntityAsyncClient"
- uid: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
  name: "RecognizeLinkedEntityAsyncClient"
  nameWithType: "RecognizeLinkedEntityAsyncClient"
  fullName: "com.azure.ai.textanalytics.RecognizeLinkedEntityAsyncClient"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageResult"
  name: "DetectLanguageResult"
  nameWithType: "DetectLanguageResult"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageResult"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.ai.textanalytics.models.DocumentResultCollection"
  name: "DocumentResultCollection"
  nameWithType: "DocumentResultCollection"
  fullName: "com.azure.ai.textanalytics.models.DocumentResultCollection"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
  name: "DetectLanguageInput"
  nameWithType: "DetectLanguageInput"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
- uid: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
  name: "RecognizeEntitiesResult"
  nameWithType: "RecognizeEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizeEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.TextDocumentInput"
  name: "TextDocumentInput"
  nameWithType: "TextDocumentInput"
  fullName: "com.azure.ai.textanalytics.models.TextDocumentInput"
- uid: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
  name: "RecognizePiiEntitiesResult"
  nameWithType: "RecognizePiiEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
  name: "RecognizeLinkedEntitiesResult"
  nameWithType: "RecognizeLinkedEntitiesResult"
  fullName: "com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult"
- uid: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
  name: "ExtractKeyPhraseResult"
  nameWithType: "ExtractKeyPhraseResult"
  fullName: "com.azure.ai.textanalytics.models.ExtractKeyPhraseResult"
- uid: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
  name: "AnalyzeSentimentResult"
  nameWithType: "AnalyzeSentimentResult"
  fullName: "com.azure.ai.textanalytics.models.AnalyzeSentimentResult"
