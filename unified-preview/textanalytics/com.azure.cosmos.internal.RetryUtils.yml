### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.RetryUtils"
  id: "RetryUtils"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.RetryUtils.<T>toRetryWithAlternateFunc(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  - "com.azure.cosmos.internal.RetryUtils.RetryUtils()"
  - "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc(com.azure.cosmos.internal.IRetryPolicy)"
  langs:
  - "java"
  name: "RetryUtils"
  nameWithType: "RetryUtils"
  fullName: "com.azure.cosmos.internal.RetryUtils"
  type: "Class"
  package: "com.azure.cosmos.internal"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class RetryUtils"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.RetryUtils.<T>toRetryWithAlternateFunc(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  id: "<T>toRetryWithAlternateFunc(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  parent: "com.azure.cosmos.internal.RetryUtils"
  langs:
  - "java"
  name: "<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  nameWithType: "RetryUtils.<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  fullName: "com.azure.cosmos.internal.RetryUtils.<T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  overload: "com.azure.cosmos.internal.RetryUtils.toRetryWithAlternateFunc*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "This method will be called after getting error on callbackMethod , and then keep trying between callbackMethod and inBackoffAlternateCallbackMethod until success or as stated in retry policy."
  syntax:
    content: "public static Function<Throwable,Mono<T>> <T>toRetryWithAlternateFunc(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
    parameters:
    - id: "callbackMethod"
      type: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
      description: "The callbackMethod"
    - id: "retryPolicy"
      type: "com.azure.cosmos.internal.IRetryPolicy"
      description: "Retry policy"
    - id: "inBackoffAlternateCallbackMethod"
      type: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
      description: "The inBackoffAlternateCallbackMethod"
    - id: "minBackoffForInBackoffCallback"
      type: "java.time.Duration"
      description: "Minimum backoff for InBackoffCallbackMethod"
    return:
      type: "java.util.function.Function<java.lang.Throwable,reactor.core.publisher.Mono<T>>"
- uid: "com.azure.cosmos.internal.RetryUtils.RetryUtils()"
  id: "RetryUtils()"
  parent: "com.azure.cosmos.internal.RetryUtils"
  langs:
  - "java"
  name: "RetryUtils()"
  nameWithType: "RetryUtils.RetryUtils()"
  fullName: "com.azure.cosmos.internal.RetryUtils.RetryUtils()"
  overload: "com.azure.cosmos.internal.RetryUtils.RetryUtils*"
  type: "Constructor"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public RetryUtils()"
- uid: "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc(com.azure.cosmos.internal.IRetryPolicy)"
  id: "toRetryWhenFunc(com.azure.cosmos.internal.IRetryPolicy)"
  parent: "com.azure.cosmos.internal.RetryUtils"
  langs:
  - "java"
  name: "toRetryWhenFunc(IRetryPolicy policy)"
  nameWithType: "RetryUtils.toRetryWhenFunc(IRetryPolicy policy)"
  fullName: "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc(IRetryPolicy policy)"
  overload: "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "static Function<Flux<Throwable>,Flux<Long>> toRetryWhenFunc(IRetryPolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.cosmos.internal.IRetryPolicy"
    return:
      type: "java.util.function.Function<reactor.core.publisher.Flux<java.lang.Throwable>,reactor.core.publisher.Flux<java.lang.Long>>"
references:
- uid: "com.azure.cosmos.internal.RetryUtils.RetryUtils*"
  name: "RetryUtils"
  nameWithType: "RetryUtils.RetryUtils"
  fullName: "com.azure.cosmos.internal.RetryUtils.RetryUtils"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.IRetryPolicy"
  name: "IRetryPolicy"
  nameWithType: "IRetryPolicy"
  fullName: "com.azure.cosmos.internal.IRetryPolicy"
- uid: "java.util.function.Function<reactor.core.publisher.Flux<java.lang.Throwable>,reactor.core.publisher.Flux<java.lang.Long>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc*"
  name: "toRetryWhenFunc"
  nameWithType: "RetryUtils.toRetryWhenFunc"
  fullName: "com.azure.cosmos.internal.RetryUtils.toRetryWhenFunc"
  package: "com.azure.cosmos.internal"
- uid: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.Quadruple"
    name: "Quadruple"
    fullName: "com.azure.cosmos.internal.Quadruple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "java.util.function.Function<java.lang.Throwable,reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.RetryUtils.toRetryWithAlternateFunc*"
  name: "<T>toRetryWithAlternateFunc"
  nameWithType: "RetryUtils.<T>toRetryWithAlternateFunc"
  fullName: "com.azure.cosmos.internal.RetryUtils.<T>toRetryWithAlternateFunc"
  package: "com.azure.cosmos.internal"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
- uid: "java.lang.Throwable>,reactor.core.publisher.Flux"
  name: "Throwable>,Flux"
  nameWithType: "Throwable>,Flux"
  fullName: "java.lang.Throwable>,reactor.core.publisher.Flux"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono"
  name: "Boolean,Boolean,Duration,Integer>,Mono"
  nameWithType: "Boolean,Boolean,Duration,Integer>,Mono"
  fullName: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.Quadruple"
  name: "Quadruple"
  nameWithType: "Quadruple"
  fullName: "com.azure.cosmos.internal.Quadruple"
- uid: "java.lang.Throwable,reactor.core.publisher.Mono"
  name: "Throwable,Mono"
  nameWithType: "Throwable,Mono"
  fullName: "java.lang.Throwable,reactor.core.publisher.Mono"
