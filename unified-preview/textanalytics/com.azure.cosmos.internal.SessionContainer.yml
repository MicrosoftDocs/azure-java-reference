### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.SessionContainer"
  id: "SessionContainer"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.SessionContainer.SessionContainer(java.lang.String)"
  - "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName(java.lang.String)"
  - "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId(java.lang.String)"
  - "com.azure.cosmos.internal.SessionContainer.getHostName()"
  - "com.azure.cosmos.internal.SessionContainer.getSessionToken(java.lang.String)"
  - "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  - "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  - "com.azure.cosmos.internal.SessionContainer.setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.internal.SessionContainer.setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  langs:
  - "java"
  name: "SessionContainer"
  nameWithType: "SessionContainer"
  fullName: "com.azure.cosmos.internal.SessionContainer"
  type: "Class"
  package: "com.azure.cosmos.internal"
  summary: "Used internally to cache the collections' session tokens in the Azure Cosmos DB database service."
  syntax:
    content: "public final class SessionContainer implements ISessionContainer"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.internal.ISessionContainer"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.SessionContainer.SessionContainer(java.lang.String)"
  id: "SessionContainer(java.lang.String)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "SessionContainer(String hostName)"
  nameWithType: "SessionContainer.SessionContainer(String hostName)"
  fullName: "com.azure.cosmos.internal.SessionContainer.SessionContainer(String hostName)"
  overload: "com.azure.cosmos.internal.SessionContainer.SessionContainer*"
  type: "Constructor"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public SessionContainer(String hostName)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName(java.lang.String)"
  id: "clearTokenByCollectionFullName(java.lang.String)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "clearTokenByCollectionFullName(String collectionFullName)"
  nameWithType: "SessionContainer.clearTokenByCollectionFullName(String collectionFullName)"
  fullName: "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName(String collectionFullName)"
  overload: "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public void clearTokenByCollectionFullName(String collectionFullName)"
    parameters:
    - id: "collectionFullName"
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId(java.lang.String)"
  id: "clearTokenByResourceId(java.lang.String)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "clearTokenByResourceId(String resourceId)"
  nameWithType: "SessionContainer.clearTokenByResourceId(String resourceId)"
  fullName: "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId(String resourceId)"
  overload: "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public void clearTokenByResourceId(String resourceId)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.getHostName()"
  id: "getHostName()"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "getHostName()"
  nameWithType: "SessionContainer.getHostName()"
  fullName: "com.azure.cosmos.internal.SessionContainer.getHostName()"
  overload: "com.azure.cosmos.internal.SessionContainer.getHostName*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public String getHostName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.getSessionToken(java.lang.String)"
  id: "getSessionToken(java.lang.String)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "getSessionToken(String collectionLink)"
  nameWithType: "SessionContainer.getSessionToken(String collectionLink)"
  fullName: "com.azure.cosmos.internal.SessionContainer.getSessionToken(String collectionLink)"
  overload: "com.azure.cosmos.internal.SessionContainer.getSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public String getSessionToken(String collectionLink)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  id: "resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "resolveGlobalSessionToken(RxDocumentServiceRequest request)"
  nameWithType: "SessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest request)"
  fullName: "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest request)"
  overload: "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public String resolveGlobalSessionToken(RxDocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    return:
      type: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  id: "resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "resolvePartitionLocalSessionToken(RxDocumentServiceRequest request, String partitionKeyRangeId)"
  nameWithType: "SessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest request, String partitionKeyRangeId)"
  fullName: "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest request, String partitionKeyRangeId)"
  overload: "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public ISessionToken resolvePartitionLocalSessionToken(RxDocumentServiceRequest request, String partitionKeyRangeId)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.internal.ISessionToken"
- uid: "com.azure.cosmos.internal.SessionContainer.setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  id: "setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  nameWithType: "SessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.internal.SessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.internal.SessionContainer.setSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public void setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
- uid: "com.azure.cosmos.internal.SessionContainer.setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  id: "setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.internal.SessionContainer"
  langs:
  - "java"
  name: "setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  nameWithType: "SessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.internal.SessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.internal.SessionContainer.setSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public void setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "collectionFullName"
      type: "java.lang.String"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.SessionContainer.SessionContainer*"
  name: "SessionContainer"
  nameWithType: "SessionContainer.SessionContainer"
  fullName: "com.azure.cosmos.internal.SessionContainer.SessionContainer"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.SessionContainer.getHostName*"
  name: "getHostName"
  nameWithType: "SessionContainer.getHostName"
  fullName: "com.azure.cosmos.internal.SessionContainer.getHostName"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.SessionContainer.getSessionToken*"
  name: "getSessionToken"
  nameWithType: "SessionContainer.getSessionToken"
  fullName: "com.azure.cosmos.internal.SessionContainer.getSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken*"
  name: "resolveGlobalSessionToken"
  nameWithType: "SessionContainer.resolveGlobalSessionToken"
  fullName: "com.azure.cosmos.internal.SessionContainer.resolveGlobalSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionToken"
  name: "ISessionToken"
  nameWithType: "ISessionToken"
  fullName: "com.azure.cosmos.internal.ISessionToken"
- uid: "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken*"
  name: "resolvePartitionLocalSessionToken"
  nameWithType: "SessionContainer.resolvePartitionLocalSessionToken"
  fullName: "com.azure.cosmos.internal.SessionContainer.resolvePartitionLocalSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName*"
  name: "clearTokenByCollectionFullName"
  nameWithType: "SessionContainer.clearTokenByCollectionFullName"
  fullName: "com.azure.cosmos.internal.SessionContainer.clearTokenByCollectionFullName"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId*"
  name: "clearTokenByResourceId"
  nameWithType: "SessionContainer.clearTokenByResourceId"
  fullName: "com.azure.cosmos.internal.SessionContainer.clearTokenByResourceId"
  package: "com.azure.cosmos.internal"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.SessionContainer.setSessionToken*"
  name: "setSessionToken"
  nameWithType: "SessionContainer.setSessionToken"
  fullName: "com.azure.cosmos.internal.SessionContainer.setSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
