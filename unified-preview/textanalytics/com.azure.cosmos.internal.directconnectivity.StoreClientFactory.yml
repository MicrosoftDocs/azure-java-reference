### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory"
  id: "StoreClientFactory"
  parent: "com.azure.cosmos.internal.directconnectivity"
  children:
  - "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory(com.azure.cosmos.internal.Configs,int,int,com.azure.cosmos.internal.UserAgentContainer)"
  - "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close()"
  - "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient(com.azure.cosmos.internal.directconnectivity.IAddressResolver,com.azure.cosmos.internal.SessionContainer,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean)"
  langs:
  - "java"
  name: "StoreClientFactory"
  nameWithType: "StoreClientFactory"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory"
  type: "Class"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public class StoreClientFactory implements AutoCloseable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.AutoCloseable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory(com.azure.cosmos.internal.Configs,int,int,com.azure.cosmos.internal.UserAgentContainer)"
  id: "StoreClientFactory(com.azure.cosmos.internal.Configs,int,int,com.azure.cosmos.internal.UserAgentContainer)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory"
  langs:
  - "java"
  name: "StoreClientFactory(Configs configs, int requestTimeoutInSeconds, int maxConcurrentConnectionOpenRequests, UserAgentContainer userAgent)"
  nameWithType: "StoreClientFactory.StoreClientFactory(Configs configs, int requestTimeoutInSeconds, int maxConcurrentConnectionOpenRequests, UserAgentContainer userAgent)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory(Configs configs, int requestTimeoutInSeconds, int maxConcurrentConnectionOpenRequests, UserAgentContainer userAgent)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public StoreClientFactory(Configs configs, int requestTimeoutInSeconds, int maxConcurrentConnectionOpenRequests, UserAgentContainer userAgent)"
    parameters:
    - id: "configs"
      type: "com.azure.cosmos.internal.Configs"
    - id: "requestTimeoutInSeconds"
      type: "int"
    - id: "maxConcurrentConnectionOpenRequests"
      type: "int"
    - id: "userAgent"
      type: "com.azure.cosmos.internal.UserAgentContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close()"
  id: "close()"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory"
  langs:
  - "java"
  name: "close()"
  nameWithType: "StoreClientFactory.close()"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close()"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public void close()"
  exceptions:
  - type: "java.lang.Exception"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient(com.azure.cosmos.internal.directconnectivity.IAddressResolver,com.azure.cosmos.internal.SessionContainer,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean)"
  id: "createStoreClient(com.azure.cosmos.internal.directconnectivity.IAddressResolver,com.azure.cosmos.internal.SessionContainer,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,com.azure.cosmos.internal.IAuthorizationTokenProvider,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory"
  langs:
  - "java"
  name: "createStoreClient(IAddressResolver addressResolver, SessionContainer sessionContainer, GatewayServiceConfigurationReader serviceConfigurationReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean useMultipleWriteLocations)"
  nameWithType: "StoreClientFactory.createStoreClient(IAddressResolver addressResolver, SessionContainer sessionContainer, GatewayServiceConfigurationReader serviceConfigurationReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean useMultipleWriteLocations)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient(IAddressResolver addressResolver, SessionContainer sessionContainer, GatewayServiceConfigurationReader serviceConfigurationReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean useMultipleWriteLocations)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public StoreClient createStoreClient(IAddressResolver addressResolver, SessionContainer sessionContainer, GatewayServiceConfigurationReader serviceConfigurationReader, IAuthorizationTokenProvider authorizationTokenProvider, boolean useMultipleWriteLocations)"
    parameters:
    - id: "addressResolver"
      type: "com.azure.cosmos.internal.directconnectivity.IAddressResolver"
    - id: "sessionContainer"
      type: "com.azure.cosmos.internal.SessionContainer"
    - id: "serviceConfigurationReader"
      type: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
    - id: "authorizationTokenProvider"
      type: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
    - id: "useMultipleWriteLocations"
      type: "boolean"
    return:
      type: "com.azure.cosmos.internal.directconnectivity.StoreClient"
references:
- uid: "com.azure.cosmos.internal.Configs"
  name: "Configs"
  nameWithType: "Configs"
  fullName: "com.azure.cosmos.internal.Configs"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.internal.UserAgentContainer"
  name: "UserAgentContainer"
  nameWithType: "UserAgentContainer"
  fullName: "com.azure.cosmos.internal.UserAgentContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory*"
  name: "StoreClientFactory"
  nameWithType: "StoreClientFactory.StoreClientFactory"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.StoreClientFactory"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close*"
  name: "close"
  nameWithType: "StoreClientFactory.close"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.close"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.IAddressResolver"
  name: "IAddressResolver"
  nameWithType: "IAddressResolver"
  fullName: "com.azure.cosmos.internal.directconnectivity.IAddressResolver"
- uid: "com.azure.cosmos.internal.SessionContainer"
  name: "SessionContainer"
  nameWithType: "SessionContainer"
  fullName: "com.azure.cosmos.internal.SessionContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
  name: "GatewayServiceConfigurationReader"
  nameWithType: "GatewayServiceConfigurationReader"
  fullName: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
- uid: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
  name: "IAuthorizationTokenProvider"
  nameWithType: "IAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClient"
  name: "StoreClient"
  nameWithType: "StoreClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClient"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient*"
  name: "createStoreClient"
  nameWithType: "StoreClientFactory.createStoreClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreClientFactory.createStoreClient"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "java.lang.AutoCloseable"
  name: "AutoCloseable"
  nameWithType: "AutoCloseable"
  fullName: "java.lang.AutoCloseable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
