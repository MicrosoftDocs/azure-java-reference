### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  id: "RxPartitionKeyRangeCache"
  parent: "com.azure.cosmos.internal.caches"
  children:
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(com.azure.cosmos.internal.AsyncDocumentClient,com.azure.cosmos.internal.caches.RxCollectionCache)"
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(java.lang.String,com.azure.cosmos.internal.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  langs:
  - "java"
  name: "RxPartitionKeyRangeCache"
  nameWithType: "RxPartitionKeyRangeCache"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  type: "Class"
  package: "com.azure.cosmos.internal.caches"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class RxPartitionKeyRangeCache implements IPartitionKeyRangeCache"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.internal.caches.IPartitionKeyRangeCache"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(com.azure.cosmos.internal.AsyncDocumentClient,com.azure.cosmos.internal.caches.RxCollectionCache)"
  id: "RxPartitionKeyRangeCache(com.azure.cosmos.internal.AsyncDocumentClient,com.azure.cosmos.internal.caches.RxCollectionCache)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)"
  nameWithType: "RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public RxPartitionKeyRangeCache(AsyncDocumentClient client, RxCollectionCache collectionCache)"
    parameters:
    - id: "client"
      type: "com.azure.cosmos.internal.AsyncDocumentClient"
    - id: "collectionCache"
      type: "com.azure.cosmos.internal.caches.RxCollectionCache"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(java.lang.String,com.azure.cosmos.internal.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryGetOverlappingRangesAsync(java.lang.String,com.azure.cosmos.internal.routing.Range<java.lang.String>,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "tryGetOverlappingRangesAsync(String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  nameWithType: "RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync(String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public Mono<List<PartitionKeyRange>> tryGetOverlappingRangesAsync(String collectionRid, Range<String> range, boolean forceRefresh, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "range"
      type: "com.azure.cosmos.internal.routing.Range<java.lang.String>"
    - id: "forceRefresh"
      type: "boolean"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<java.util.List<com.azure.cosmos.internal.PartitionKeyRange>>"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryGetPartitionKeyRangeByIdAsync(java.lang.String,java.lang.String,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "tryGetPartitionKeyRangeByIdAsync(String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)"
  nameWithType: "RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync(String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public Mono<PartitionKeyRange> tryGetPartitionKeyRangeByIdAsync(String collectionResourceId, String partitionKeyRangeId, boolean forceRefresh, Map<String,Object> properties)"
    parameters:
    - id: "collectionResourceId"
      type: "java.lang.String"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    - id: "forceRefresh"
      type: "boolean"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.PartitionKeyRange>"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryGetRangeByPartitionKeyRangeId(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "tryGetRangeByPartitionKeyRangeId(String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)"
  nameWithType: "RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId(String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public Mono<PartitionKeyRange> tryGetRangeByPartitionKeyRangeId(String collectionRid, String partitionKeyRangeId, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.PartitionKeyRange>"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  nameWithType: "RxPartitionKeyRangeCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public Mono<CollectionRoutingMap> tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "previousValue"
      type: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    - id: "forceRefreshCollectionRoutingMap"
      type: "boolean"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache"
  langs:
  - "java"
  name: "tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  nameWithType: "RxPartitionKeyRangeCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public Mono<CollectionRoutingMap> tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "previousValue"
      type: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
references:
- uid: "com.azure.cosmos.internal.AsyncDocumentClient"
  name: "AsyncDocumentClient"
  nameWithType: "AsyncDocumentClient"
  fullName: "com.azure.cosmos.internal.AsyncDocumentClient"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache"
  name: "RxCollectionCache"
  nameWithType: "RxCollectionCache"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache*"
  name: "RxPartitionKeyRangeCache"
  nameWithType: "RxPartitionKeyRangeCache.RxPartitionKeyRangeCache"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.RxPartitionKeyRangeCache"
  package: "com.azure.cosmos.internal.caches"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
  name: "CollectionRoutingMap"
  nameWithType: "CollectionRoutingMap"
  fullName: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    name: "CollectionRoutingMap"
    fullName: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync*"
  name: "tryLookupAsync"
  nameWithType: "RxPartitionKeyRangeCache.tryLookupAsync"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryLookupAsync"
  package: "com.azure.cosmos.internal.caches"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.routing.Range<java.lang.String>"
  spec.java:
  - uid: "com.azure.cosmos.internal.routing.Range"
    name: "Range"
    fullName: "com.azure.cosmos.internal.routing.Range"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<java.util.List<com.azure.cosmos.internal.PartitionKeyRange>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.PartitionKeyRange"
    name: "PartitionKeyRange"
    fullName: "com.azure.cosmos.internal.PartitionKeyRange"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync*"
  name: "tryGetOverlappingRangesAsync"
  nameWithType: "RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetOverlappingRangesAsync"
  package: "com.azure.cosmos.internal.caches"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.PartitionKeyRange>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.PartitionKeyRange"
    name: "PartitionKeyRange"
    fullName: "com.azure.cosmos.internal.PartitionKeyRange"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync*"
  name: "tryGetPartitionKeyRangeByIdAsync"
  nameWithType: "RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetPartitionKeyRangeByIdAsync"
  package: "com.azure.cosmos.internal.caches"
- uid: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId*"
  name: "tryGetRangeByPartitionKeyRangeId"
  nameWithType: "RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId"
  fullName: "com.azure.cosmos.internal.caches.RxPartitionKeyRangeCache.tryGetRangeByPartitionKeyRangeId"
  package: "com.azure.cosmos.internal.caches"
- uid: "com.azure.cosmos.internal.caches.IPartitionKeyRangeCache"
  name: "IPartitionKeyRangeCache"
  nameWithType: "IPartitionKeyRangeCache"
  fullName: "com.azure.cosmos.internal.caches.IPartitionKeyRangeCache"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.routing.Range"
  name: "Range"
  nameWithType: "Range"
  fullName: "com.azure.cosmos.internal.routing.Range"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.cosmos.internal.PartitionKeyRange"
  name: "PartitionKeyRange"
  nameWithType: "PartitionKeyRange"
  fullName: "com.azure.cosmos.internal.PartitionKeyRange"
