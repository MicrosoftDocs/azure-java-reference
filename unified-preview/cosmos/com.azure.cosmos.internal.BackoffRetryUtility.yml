### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.BackoffRetryUtility"
  id: "BackoffRetryUtility"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeAsync(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  - "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeRetry(java.util.concurrent.Callable<reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy)"
  - "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility()"
  - "com.azure.cosmos.internal.BackoffRetryUtility.InitialArgumentValuePolicyArg"
  langs:
  - "java"
  name: "BackoffRetryUtility"
  nameWithType: "BackoffRetryUtility"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility"
  type: "Class"
  package: "com.azure.cosmos.internal"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class BackoffRetryUtility"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeAsync(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  id: "<T>executeAsync(java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy,java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>,java.time.Duration)"
  parent: "com.azure.cosmos.internal.BackoffRetryUtility"
  langs:
  - "java"
  name: "<T>executeAsync(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  nameWithType: "BackoffRetryUtility.<T>executeAsync(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeAsync(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
  overload: "com.azure.cosmos.internal.BackoffRetryUtility.executeAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static Mono<T> <T>executeAsync(Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> callbackMethod, IRetryPolicy retryPolicy, Function<Quadruple<Boolean,Boolean,Duration,Integer>,Mono<T>> inBackoffAlternateCallbackMethod, Duration minBackoffForInBackoffCallback)"
    parameters:
    - id: "callbackMethod"
      type: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
    - id: "retryPolicy"
      type: "com.azure.cosmos.internal.IRetryPolicy"
    - id: "inBackoffAlternateCallbackMethod"
      type: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
    - id: "minBackoffForInBackoffCallback"
      type: "java.time.Duration"
    return:
      type: "reactor.core.publisher.Mono<T>"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeRetry(java.util.concurrent.Callable<reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy)"
  id: "<T>executeRetry(java.util.concurrent.Callable<reactor.core.publisher.Mono<T>>,com.azure.cosmos.internal.IRetryPolicy)"
  parent: "com.azure.cosmos.internal.BackoffRetryUtility"
  langs:
  - "java"
  name: "<T>executeRetry(Callable<Mono<T>> callbackMethod, IRetryPolicy retryPolicy)"
  nameWithType: "BackoffRetryUtility.<T>executeRetry(Callable<Mono<T>> callbackMethod, IRetryPolicy retryPolicy)"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeRetry(Callable<Mono<T>> callbackMethod, IRetryPolicy retryPolicy)"
  overload: "com.azure.cosmos.internal.BackoffRetryUtility.executeRetry*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static Mono<T> <T>executeRetry(Callable<Mono<T>> callbackMethod, IRetryPolicy retryPolicy)"
    parameters:
    - id: "callbackMethod"
      type: "java.util.concurrent.Callable<reactor.core.publisher.Mono<T>>"
    - id: "retryPolicy"
      type: "com.azure.cosmos.internal.IRetryPolicy"
    return:
      type: "reactor.core.publisher.Mono<T>"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility()"
  id: "BackoffRetryUtility()"
  parent: "com.azure.cosmos.internal.BackoffRetryUtility"
  langs:
  - "java"
  name: "BackoffRetryUtility()"
  nameWithType: "BackoffRetryUtility.BackoffRetryUtility()"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility()"
  overload: "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility*"
  type: "Constructor"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public BackoffRetryUtility()"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.InitialArgumentValuePolicyArg"
  id: "InitialArgumentValuePolicyArg"
  parent: "com.azure.cosmos.internal.BackoffRetryUtility"
  langs:
  - "java"
  name: "InitialArgumentValuePolicyArg"
  nameWithType: "BackoffRetryUtility.InitialArgumentValuePolicyArg"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.InitialArgumentValuePolicyArg"
  type: "Field"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public static final Quadruple<Boolean,Boolean,Duration,Integer> InitialArgumentValuePolicyArg"
    return:
      type: "com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>"
references:
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility*"
  name: "BackoffRetryUtility"
  nameWithType: "BackoffRetryUtility.BackoffRetryUtility"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.BackoffRetryUtility"
  package: "com.azure.cosmos.internal"
- uid: "java.util.concurrent.Callable<reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.concurrent.Callable"
    name: "Callable"
    fullName: "java.util.concurrent.Callable"
  - name: "<"
    fullName: "<"
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.IRetryPolicy"
  name: "IRetryPolicy"
  nameWithType: "IRetryPolicy"
  fullName: "com.azure.cosmos.internal.IRetryPolicy"
- uid: "reactor.core.publisher.Mono<T>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.executeRetry*"
  name: "<T>executeRetry"
  nameWithType: "BackoffRetryUtility.<T>executeRetry"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeRetry"
  package: "com.azure.cosmos.internal"
- uid: "java.util.function.Function<com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono<T>>"
  spec.java:
  - uid: "java.util.function.Function"
    name: "Function"
    fullName: "java.util.function.Function"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.Quadruple"
    name: "Quadruple"
    fullName: "com.azure.cosmos.internal.Quadruple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
  - name: ","
    fullName: ","
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.internal.BackoffRetryUtility.executeAsync*"
  name: "<T>executeAsync"
  nameWithType: "BackoffRetryUtility.<T>executeAsync"
  fullName: "com.azure.cosmos.internal.BackoffRetryUtility.<T>executeAsync"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.Quadruple<java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>"
  spec.java:
  - uid: "com.azure.cosmos.internal.Quadruple"
    name: "Quadruple"
    fullName: "com.azure.cosmos.internal.Quadruple"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ","
    fullName: ","
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.util.concurrent.Callable"
  name: "Callable"
  nameWithType: "Callable"
  fullName: "java.util.concurrent.Callable"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono"
  name: "Boolean,Boolean,Duration,Integer>,Mono"
  nameWithType: "Boolean,Boolean,Duration,Integer>,Mono"
  fullName: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer>,reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.Quadruple"
  name: "Quadruple"
  nameWithType: "Quadruple"
  fullName: "com.azure.cosmos.internal.Quadruple"
- uid: "java.util.function.Function"
  name: "Function"
  nameWithType: "Function"
  fullName: "java.util.function.Function"
- uid: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer"
  name: "Boolean,Boolean,Duration,Integer"
  nameWithType: "Boolean,Boolean,Duration,Integer"
  fullName: "java.lang.Boolean,java.lang.Boolean,java.time.Duration,java.lang.Integer"
