### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.ISessionContainer"
  id: "ISessionContainer"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName(java.lang.String)"
  - "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId(java.lang.String)"
  - "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  - "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  - "com.azure.cosmos.internal.ISessionContainer.setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.cosmos.internal.ISessionContainer.setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  langs:
  - "java"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
  type: "Interface"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public interface ISessionContainer"
- uid: "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName(java.lang.String)"
  id: "clearTokenByCollectionFullName(java.lang.String)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "clearTokenByCollectionFullName(String collectionFullName)"
  nameWithType: "ISessionContainer.clearTokenByCollectionFullName(String collectionFullName)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName(String collectionFullName)"
  overload: "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Atomically: removes partitionKeyRangeId token map associated with collectionFullName, maps collectionFullName to resourceId and removes its map as well."
  syntax:
    content: "public abstract void clearTokenByCollectionFullName(String collectionFullName)"
    parameters:
    - id: "collectionFullName"
      type: "java.lang.String"
      description: "collectionFullName"
- uid: "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId(java.lang.String)"
  id: "clearTokenByResourceId(java.lang.String)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "clearTokenByResourceId(String resourceId)"
  nameWithType: "ISessionContainer.clearTokenByResourceId(String resourceId)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId(String resourceId)"
  overload: "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Atomically: removes partitionKeyRangeId token map associated with resourceId, maps resourceId to collectionFullName and removes its map as well"
  syntax:
    content: "public abstract void clearTokenByResourceId(String resourceId)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "resourceId"
- uid: "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  id: "resolveGlobalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "resolveGlobalSessionToken(RxDocumentServiceRequest entity)"
  nameWithType: "ISessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest entity)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken(RxDocumentServiceRequest entity)"
  overload: "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Returns a serialized map of partitionKeyRangeId to session token. If a entity is name based then the method extracts name from ResourceAddress and use it to identify collection otherwise it uses ResourceId. Returns empty string if collection is unknown"
  syntax:
    content: "public abstract String resolveGlobalSessionToken(RxDocumentServiceRequest entity)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
      description: "<xref uid=\"com.azure.cosmos.internal.RxDocumentServiceRequest\" data-throw-if-not-resolved=\"false\">entity</xref>"
    return:
      type: "java.lang.String"
      description: "serialzed map of partitionKeyRangeId to session token or empty string is collection is unknown"
- uid: "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  id: "resolvePartitionLocalSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.lang.String)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)"
  nameWithType: "ISessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)"
  overload: "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Returns a session token identified by partitionKeyRangeId(\\*) from a collection identified either by ResourceAddress (in case of name based entity) or either by ResourceId. If partitionKeyRangeId is not in the collection's partitionKeyRangeId token map then method iterates through request.RequestContext.ResolvedPartitionKeyRange.Parents starting from tail and returns a corresponding token if there is a match."
  syntax:
    content: "public abstract ISessionToken resolvePartitionLocalSessionToken(RxDocumentServiceRequest entity, String partitionKeyRangeId)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
      description: "<xref uid=\"com.azure.cosmos.internal.RxDocumentServiceRequest\" data-throw-if-not-resolved=\"false\">RxDocumentServiceRequest</xref>"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
      description: "partitionKeyRangeId"
    return:
      type: "com.azure.cosmos.internal.ISessionToken"
      description: "Returns a session token identified by partitionKeyRangeId(*) from a collection identified either by ResourceAddress\n (in case of name based entity) or either by ResourceId."
- uid: "com.azure.cosmos.internal.ISessionContainer.setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  id: "setSessionToken(com.azure.cosmos.internal.RxDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  nameWithType: "ISessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.internal.ISessionContainer.setSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Infers collectionFullName using responseHeaders\\[HttpConstants.HttpHeaders.OwnerFullName\\] or request.ResourceAddress, infers resourceId using responseHeaders\\[HttpConstants.HttpHeaders.OwnerId\\] or request.ResourceId, and adds responseHeaders\\[HttpConstants.HttpHeaders.SessionToken\\] session token to the (collectionFullName, resourceId)'s partitionKeyRangeId token map. NB: Silently does nothing for master queries, or when it's impossible to infer collectionRid and collectionFullName from the request, or then SessionToken is missing in responseHeader."
  syntax:
    content: "public abstract void setSessionToken(RxDocumentServiceRequest request, Map<String,String> responseHeaders)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
      description: "<xref uid=\"com.azure.cosmos.internal.RxDocumentServiceRequest\" data-throw-if-not-resolved=\"false\">RxDocumentServiceRequest</xref>"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "responseHeaders"
- uid: "com.azure.cosmos.internal.ISessionContainer.setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  id: "setSessionToken(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.cosmos.internal.ISessionContainer"
  langs:
  - "java"
  name: "setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  nameWithType: "ISessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  fullName: "com.azure.cosmos.internal.ISessionContainer.setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
  overload: "com.azure.cosmos.internal.ISessionContainer.setSessionToken*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  summary: "Adds responseHeaders\\[HttpConstants.HttpHeaders.SessionToken\\] session token to the (collectionFullName, collectionRid)'s partitionKeyRangeId token map."
  syntax:
    content: "public abstract void setSessionToken(String collectionRid, String collectionFullName, Map<String,String> responseHeaders)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
      description: "collectionRid"
    - id: "collectionFullName"
      type: "java.lang.String"
      description: "collectionFullName"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "responseHeaders"
references:
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken*"
  name: "resolveGlobalSessionToken"
  nameWithType: "ISessionContainer.resolveGlobalSessionToken"
  fullName: "com.azure.cosmos.internal.ISessionContainer.resolveGlobalSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionToken"
  name: "ISessionToken"
  nameWithType: "ISessionToken"
  fullName: "com.azure.cosmos.internal.ISessionToken"
- uid: "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken*"
  name: "resolvePartitionLocalSessionToken"
  nameWithType: "ISessionContainer.resolvePartitionLocalSessionToken"
  fullName: "com.azure.cosmos.internal.ISessionContainer.resolvePartitionLocalSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId*"
  name: "clearTokenByResourceId"
  nameWithType: "ISessionContainer.clearTokenByResourceId"
  fullName: "com.azure.cosmos.internal.ISessionContainer.clearTokenByResourceId"
  package: "com.azure.cosmos.internal"
- uid: "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName*"
  name: "clearTokenByCollectionFullName"
  nameWithType: "ISessionContainer.clearTokenByCollectionFullName"
  fullName: "com.azure.cosmos.internal.ISessionContainer.clearTokenByCollectionFullName"
  package: "com.azure.cosmos.internal"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ISessionContainer.setSessionToken*"
  name: "setSessionToken"
  nameWithType: "ISessionContainer.setSessionToken"
  fullName: "com.azure.cosmos.internal.ISessionContainer.setSessionToken"
  package: "com.azure.cosmos.internal"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
