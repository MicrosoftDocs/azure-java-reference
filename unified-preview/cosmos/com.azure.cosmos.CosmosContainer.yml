### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.CosmosContainer"
  id: "CosmosContainer"
  parent: "com.azure.cosmos"
  children:
  - "com.azure.cosmos.CosmosContainer.CosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.CosmosContainer.createItem(java.lang.Object)"
  - "com.azure.cosmos.CosmosContainer.createItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  - "com.azure.cosmos.CosmosContainer.delete()"
  - "com.azure.cosmos.CosmosContainer.delete(com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.CosmosContainer.getId()"
  - "com.azure.cosmos.CosmosContainer.getItem(java.lang.String,java.lang.Object)"
  - "com.azure.cosmos.CosmosContainer.getScripts()"
  - "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>)"
  - "com.azure.cosmos.CosmosContainer.queryChangeFeedItems(com.azure.cosmos.ChangeFeedOptions)"
  - "com.azure.cosmos.CosmosContainer.queryItems(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.CosmosContainer.queryItems(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.CosmosContainer.read()"
  - "com.azure.cosmos.CosmosContainer.read(com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.CosmosContainer.readAllItems(com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.CosmosContainer.readProvisionedThroughput()"
  - "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.CosmosContainerProperties)"
  - "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.CosmosContainerProperties,com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput(int)"
  - "com.azure.cosmos.CosmosContainer.upsertItem(java.lang.Object)"
  - "com.azure.cosmos.CosmosContainer.upsertItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  langs:
  - "java"
  name: "CosmosContainer"
  nameWithType: "CosmosContainer"
  fullName: "com.azure.cosmos.CosmosContainer"
  type: "Class"
  package: "com.azure.cosmos"
  summary: "Provides synchronous methods for reading, deleting, and replacing existing Containers Provides methods for interacting with child resources (Items, Scripts, Conflicts)"
  syntax:
    content: "public class CosmosContainer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.CosmosContainer.CosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  id: "CosmosContainer(java.lang.String,com.azure.cosmos.CosmosDatabase,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  nameWithType: "CosmosContainer.CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  fullName: "com.azure.cosmos.CosmosContainer.CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
  overload: "com.azure.cosmos.CosmosContainer.CosmosContainer*"
  type: "Constructor"
  package: "com.azure.cosmos"
  summary: "Instantiates a new Cosmos sync container."
  syntax:
    content: " CosmosContainer(String id, CosmosDatabase database, CosmosAsyncContainer container)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the id"
    - id: "database"
      type: "com.azure.cosmos.CosmosDatabase"
      description: "the database"
    - id: "container"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the container"
- uid: "com.azure.cosmos.CosmosContainer.createItem(java.lang.Object)"
  id: "createItem(java.lang.Object)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "createItem(Object item)"
  nameWithType: "CosmosContainer.createItem(Object item)"
  fullName: "com.azure.cosmos.CosmosContainer.createItem(Object item)"
  overload: "com.azure.cosmos.CosmosContainer.createItem*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create item cosmos sync item response."
  syntax:
    content: "public CosmosItemResponse createItem(Object item)"
    parameters:
    - id: "item"
      type: "java.lang.Object"
      description: "the item"
    return:
      type: "com.azure.cosmos.CosmosItemResponse"
      description: "the cosmos sync item response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.createItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "createItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "createItem(Object item, CosmosItemRequestOptions options)"
  nameWithType: "CosmosContainer.createItem(Object item, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.createItem(Object item, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.createItem*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Create item cosmos sync item response."
  syntax:
    content: "public CosmosItemResponse createItem(Object item, CosmosItemRequestOptions options)"
    parameters:
    - id: "item"
      type: "java.lang.Object"
      description: "the item"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosItemResponse"
      description: "the cosmos sync item response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.delete()"
  id: "delete()"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CosmosContainer.delete()"
  fullName: "com.azure.cosmos.CosmosContainer.delete()"
  overload: "com.azure.cosmos.CosmosContainer.delete*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Delete cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse delete()"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.delete(com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "delete(com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "delete(CosmosContainerRequestOptions options)"
  nameWithType: "CosmosContainer.delete(CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.delete(CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.delete*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Delete cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse delete(CosmosContainerRequestOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.getId()"
  id: "getId()"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "getId()"
  nameWithType: "CosmosContainer.getId()"
  fullName: "com.azure.cosmos.CosmosContainer.getId()"
  overload: "com.azure.cosmos.CosmosContainer.getId*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Id string."
  syntax:
    content: "public String getId()"
    return:
      type: "java.lang.String"
      description: "the string"
- uid: "com.azure.cosmos.CosmosContainer.getItem(java.lang.String,java.lang.Object)"
  id: "getItem(java.lang.String,java.lang.Object)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "getItem(String id, Object partitionKey)"
  nameWithType: "CosmosContainer.getItem(String id, Object partitionKey)"
  fullName: "com.azure.cosmos.CosmosContainer.getItem(String id, Object partitionKey)"
  overload: "com.azure.cosmos.CosmosContainer.getItem*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets item."
  syntax:
    content: "public CosmosItem getItem(String id, Object partitionKey)"
    parameters:
    - id: "id"
      type: "java.lang.String"
      description: "the id"
    - id: "partitionKey"
      type: "java.lang.Object"
      description: "the partition key"
    return:
      type: "com.azure.cosmos.CosmosItem"
      description: "the item"
- uid: "com.azure.cosmos.CosmosContainer.getScripts()"
  id: "getScripts()"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "getScripts()"
  nameWithType: "CosmosContainer.getScripts()"
  fullName: "com.azure.cosmos.CosmosContainer.getScripts()"
  overload: "com.azure.cosmos.CosmosContainer.getScripts*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Gets the cosmos sync scripts."
  syntax:
    content: "public CosmosScripts getScripts()"
    return:
      type: "com.azure.cosmos.CosmosScripts"
      description: "the cosmos sync scripts"
- uid: "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>)"
  id: "mapItemResponseAndBlock(reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "mapItemResponseAndBlock(Mono<CosmosAsyncItemResponse> itemMono)"
  nameWithType: "CosmosContainer.mapItemResponseAndBlock(Mono<CosmosAsyncItemResponse> itemMono)"
  fullName: "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock(Mono<CosmosAsyncItemResponse> itemMono)"
  overload: "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Map item response and block cosmos sync item response."
  syntax:
    content: " CosmosItemResponse mapItemResponseAndBlock(Mono<CosmosAsyncItemResponse> itemMono)"
    parameters:
    - id: "itemMono"
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
      description: "the item mono"
    return:
      type: "com.azure.cosmos.CosmosItemResponse"
      description: "the cosmos sync item response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.queryChangeFeedItems(com.azure.cosmos.ChangeFeedOptions)"
  id: "queryChangeFeedItems(com.azure.cosmos.ChangeFeedOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "queryChangeFeedItems(ChangeFeedOptions changeFeedOptions)"
  nameWithType: "CosmosContainer.queryChangeFeedItems(ChangeFeedOptions changeFeedOptions)"
  fullName: "com.azure.cosmos.CosmosContainer.queryChangeFeedItems(ChangeFeedOptions changeFeedOptions)"
  overload: "com.azure.cosmos.CosmosContainer.queryChangeFeedItems*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query change feed items iterator."
  syntax:
    content: "public Iterator<FeedResponse<CosmosItemProperties>> queryChangeFeedItems(ChangeFeedOptions changeFeedOptions)"
    parameters:
    - id: "changeFeedOptions"
      type: "com.azure.cosmos.ChangeFeedOptions"
      description: "the change feed options"
    return:
      type: "java.util.Iterator<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "the iterator"
- uid: "com.azure.cosmos.CosmosContainer.queryItems(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryItems(com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "queryItems(SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "CosmosContainer.queryItems(SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.queryItems(SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.queryItems*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query items iterator."
  syntax:
    content: "public Iterator<FeedResponse<CosmosItemProperties>> queryItems(SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
      description: "the query spec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
      description: "the options"
    return:
      type: "java.util.Iterator<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "the iterator"
- uid: "com.azure.cosmos.CosmosContainer.queryItems(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "queryItems(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "queryItems(String query, FeedOptions options)"
  nameWithType: "CosmosContainer.queryItems(String query, FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.queryItems(String query, FeedOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.queryItems*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Query items iterator."
  syntax:
    content: "public Iterator<FeedResponse<CosmosItemProperties>> queryItems(String query, FeedOptions options)"
    parameters:
    - id: "query"
      type: "java.lang.String"
      description: "the query"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
      description: "the options"
    return:
      type: "java.util.Iterator<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "the iterator"
- uid: "com.azure.cosmos.CosmosContainer.read()"
  id: "read()"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "read()"
  nameWithType: "CosmosContainer.read()"
  fullName: "com.azure.cosmos.CosmosContainer.read()"
  overload: "com.azure.cosmos.CosmosContainer.read*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse read()"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.read(com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "read(com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "read(CosmosContainerRequestOptions options)"
  nameWithType: "CosmosContainer.read(CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.read(CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.read*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse read(CosmosContainerRequestOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.readAllItems(com.azure.cosmos.FeedOptions)"
  id: "readAllItems(com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "readAllItems(FeedOptions options)"
  nameWithType: "CosmosContainer.readAllItems(FeedOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.readAllItems(FeedOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.readAllItems*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read all items iterator."
  syntax:
    content: "public Iterator<FeedResponse<CosmosItemProperties>> readAllItems(FeedOptions options)"
    parameters:
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
      description: "the options"
    return:
      type: "java.util.Iterator<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "the iterator"
- uid: "com.azure.cosmos.CosmosContainer.readProvisionedThroughput()"
  id: "readProvisionedThroughput()"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "readProvisionedThroughput()"
  nameWithType: "CosmosContainer.readProvisionedThroughput()"
  fullName: "com.azure.cosmos.CosmosContainer.readProvisionedThroughput()"
  overload: "com.azure.cosmos.CosmosContainer.readProvisionedThroughput*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Read provisioned throughput integer."
  syntax:
    content: "public Integer readProvisionedThroughput()"
    return:
      type: "java.lang.Integer"
      description: "the integer. null response indicates database doesn't have any provisioned RUs"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.CosmosContainerProperties)"
  id: "replace(com.azure.cosmos.CosmosContainerProperties)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "replace(CosmosContainerProperties containerProperties)"
  nameWithType: "CosmosContainer.replace(CosmosContainerProperties containerProperties)"
  fullName: "com.azure.cosmos.CosmosContainer.replace(CosmosContainerProperties containerProperties)"
  overload: "com.azure.cosmos.CosmosContainer.replace*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Replace cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse replace(CosmosContainerProperties containerProperties)"
    parameters:
    - id: "containerProperties"
      type: "com.azure.cosmos.CosmosContainerProperties"
      description: "the container properties"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.replace(com.azure.cosmos.CosmosContainerProperties,com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "replace(com.azure.cosmos.CosmosContainerProperties,com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  nameWithType: "CosmosContainer.replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.replace*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Replace cosmos sync container response."
  syntax:
    content: "public CosmosContainerResponse replace(CosmosContainerProperties containerProperties, CosmosContainerRequestOptions options)"
    parameters:
    - id: "containerProperties"
      type: "com.azure.cosmos.CosmosContainerProperties"
      description: "the container properties"
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosContainerResponse"
      description: "the cosmos sync container response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput(int)"
  id: "replaceProvisionedThroughput(int)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "replaceProvisionedThroughput(int requestUnitsPerSecond)"
  nameWithType: "CosmosContainer.replaceProvisionedThroughput(int requestUnitsPerSecond)"
  fullName: "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput(int requestUnitsPerSecond)"
  overload: "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Replace provisioned throughput integer."
  syntax:
    content: "public Integer replaceProvisionedThroughput(int requestUnitsPerSecond)"
    parameters:
    - id: "requestUnitsPerSecond"
      type: "int"
      description: "the request units per second"
    return:
      type: "java.lang.Integer"
      description: "the integer"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.upsertItem(java.lang.Object)"
  id: "upsertItem(java.lang.Object)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "upsertItem(Object item)"
  nameWithType: "CosmosContainer.upsertItem(Object item)"
  fullName: "com.azure.cosmos.CosmosContainer.upsertItem(Object item)"
  overload: "com.azure.cosmos.CosmosContainer.upsertItem*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Upsert item cosmos sync item response."
  syntax:
    content: "public CosmosItemResponse upsertItem(Object item)"
    parameters:
    - id: "item"
      type: "java.lang.Object"
      description: "the item"
    return:
      type: "com.azure.cosmos.CosmosItemResponse"
      description: "the cosmos sync item response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
- uid: "com.azure.cosmos.CosmosContainer.upsertItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "upsertItem(java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.CosmosContainer"
  langs:
  - "java"
  name: "upsertItem(Object item, CosmosItemRequestOptions options)"
  nameWithType: "CosmosContainer.upsertItem(Object item, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.CosmosContainer.upsertItem(Object item, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.CosmosContainer.upsertItem*"
  type: "Method"
  package: "com.azure.cosmos"
  summary: "Upsert item cosmos sync item response."
  syntax:
    content: "public CosmosItemResponse upsertItem(Object item, CosmosItemRequestOptions options)"
    parameters:
    - id: "item"
      type: "java.lang.Object"
      description: "the item"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the options"
    return:
      type: "com.azure.cosmos.CosmosItemResponse"
      description: "the cosmos sync item response"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
    description: "the cosmos client exception"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.CosmosDatabase"
  name: "CosmosDatabase"
  nameWithType: "CosmosDatabase"
  fullName: "com.azure.cosmos.CosmosDatabase"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.CosmosContainer.CosmosContainer*"
  name: "CosmosContainer"
  nameWithType: "CosmosContainer.CosmosContainer"
  fullName: "com.azure.cosmos.CosmosContainer.CosmosContainer"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainer.getId*"
  name: "getId"
  nameWithType: "CosmosContainer.getId"
  fullName: "com.azure.cosmos.CosmosContainer.getId"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.CosmosContainerResponse"
  name: "CosmosContainerResponse"
  nameWithType: "CosmosContainerResponse"
  fullName: "com.azure.cosmos.CosmosContainerResponse"
- uid: "com.azure.cosmos.CosmosContainer.read*"
  name: "read"
  nameWithType: "CosmosContainer.read"
  fullName: "com.azure.cosmos.CosmosContainer.read"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainerRequestOptions"
  name: "CosmosContainerRequestOptions"
  nameWithType: "CosmosContainerRequestOptions"
  fullName: "com.azure.cosmos.CosmosContainerRequestOptions"
- uid: "com.azure.cosmos.CosmosContainer.delete*"
  name: "delete"
  nameWithType: "CosmosContainer.delete"
  fullName: "com.azure.cosmos.CosmosContainer.delete"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainerProperties"
  name: "CosmosContainerProperties"
  nameWithType: "CosmosContainerProperties"
  fullName: "com.azure.cosmos.CosmosContainerProperties"
- uid: "com.azure.cosmos.CosmosContainer.replace*"
  name: "replace"
  nameWithType: "CosmosContainer.replace"
  fullName: "com.azure.cosmos.CosmosContainer.replace"
  package: "com.azure.cosmos"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.cosmos.CosmosContainer.readProvisionedThroughput*"
  name: "readProvisionedThroughput"
  nameWithType: "CosmosContainer.readProvisionedThroughput"
  fullName: "com.azure.cosmos.CosmosContainer.readProvisionedThroughput"
  package: "com.azure.cosmos"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput*"
  name: "replaceProvisionedThroughput"
  nameWithType: "CosmosContainer.replaceProvisionedThroughput"
  fullName: "com.azure.cosmos.CosmosContainer.replaceProvisionedThroughput"
  package: "com.azure.cosmos"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.CosmosItemResponse"
  name: "CosmosItemResponse"
  nameWithType: "CosmosItemResponse"
  fullName: "com.azure.cosmos.CosmosItemResponse"
- uid: "com.azure.cosmos.CosmosContainer.createItem*"
  name: "createItem"
  nameWithType: "CosmosContainer.createItem"
  fullName: "com.azure.cosmos.CosmosContainer.createItem"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItemRequestOptions"
  name: "CosmosItemRequestOptions"
  nameWithType: "CosmosItemRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions"
- uid: "com.azure.cosmos.CosmosContainer.upsertItem*"
  name: "upsertItem"
  nameWithType: "CosmosContainer.upsertItem"
  fullName: "com.azure.cosmos.CosmosContainer.upsertItem"
  package: "com.azure.cosmos"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncItemResponse"
    name: "CosmosAsyncItemResponse"
    fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock*"
  name: "mapItemResponseAndBlock"
  nameWithType: "CosmosContainer.mapItemResponseAndBlock"
  fullName: "com.azure.cosmos.CosmosContainer.mapItemResponseAndBlock"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.FeedOptions"
- uid: "java.util.Iterator<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
  spec.java:
  - uid: "java.util.Iterator"
    name: "Iterator"
    fullName: "java.util.Iterator"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosItemProperties"
    name: "CosmosItemProperties"
    fullName: "com.azure.cosmos.CosmosItemProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.CosmosContainer.readAllItems*"
  name: "readAllItems"
  nameWithType: "CosmosContainer.readAllItems"
  fullName: "com.azure.cosmos.CosmosContainer.readAllItems"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosContainer.queryItems*"
  name: "queryItems"
  nameWithType: "CosmosContainer.queryItems"
  fullName: "com.azure.cosmos.CosmosContainer.queryItems"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.SqlQuerySpec"
- uid: "com.azure.cosmos.ChangeFeedOptions"
  name: "ChangeFeedOptions"
  nameWithType: "ChangeFeedOptions"
  fullName: "com.azure.cosmos.ChangeFeedOptions"
- uid: "com.azure.cosmos.CosmosContainer.queryChangeFeedItems*"
  name: "queryChangeFeedItems"
  nameWithType: "CosmosContainer.queryChangeFeedItems"
  fullName: "com.azure.cosmos.CosmosContainer.queryChangeFeedItems"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosItem"
  name: "CosmosItem"
  nameWithType: "CosmosItem"
  fullName: "com.azure.cosmos.CosmosItem"
- uid: "com.azure.cosmos.CosmosContainer.getItem*"
  name: "getItem"
  nameWithType: "CosmosContainer.getItem"
  fullName: "com.azure.cosmos.CosmosContainer.getItem"
  package: "com.azure.cosmos"
- uid: "com.azure.cosmos.CosmosScripts"
  name: "CosmosScripts"
  nameWithType: "CosmosScripts"
  fullName: "com.azure.cosmos.CosmosScripts"
- uid: "com.azure.cosmos.CosmosContainer.getScripts*"
  name: "getScripts"
  nameWithType: "CosmosContainer.getScripts"
  fullName: "com.azure.cosmos.CosmosContainer.getScripts"
  package: "com.azure.cosmos"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.CosmosAsyncItemResponse"
  name: "CosmosAsyncItemResponse"
  nameWithType: "CosmosAsyncItemResponse"
  fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.util.Iterator"
  name: "Iterator"
  nameWithType: "Iterator"
  fullName: "java.util.Iterator"
- uid: "com.azure.cosmos.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse"
- uid: "com.azure.cosmos.CosmosItemProperties"
  name: "CosmosItemProperties"
  nameWithType: "CosmosItemProperties"
  fullName: "com.azure.cosmos.CosmosItemProperties"
