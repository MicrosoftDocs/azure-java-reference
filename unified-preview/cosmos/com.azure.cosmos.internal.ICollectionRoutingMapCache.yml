### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.ICollectionRoutingMapCache"
  id: "ICollectionRoutingMapCache"
  parent: "com.azure.cosmos.internal"
  children:
  - "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  langs:
  - "java"
  name: "ICollectionRoutingMapCache"
  nameWithType: "ICollectionRoutingMapCache"
  fullName: "com.azure.cosmos.internal.ICollectionRoutingMapCache"
  type: "Interface"
  package: "com.azure.cosmos.internal"
  summary: "While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public interface ICollectionRoutingMapCache"
- uid: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,boolean,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.ICollectionRoutingMapCache"
  langs:
  - "java"
  name: "tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  nameWithType: "ICollectionRoutingMapCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public abstract Mono<CollectionRoutingMap> tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, boolean forceRefreshCollectionRoutingMap, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "previousValue"
      type: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    - id: "forceRefreshCollectionRoutingMap"
      type: "boolean"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
- uid: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "tryLookupAsync(java.lang.String,com.azure.cosmos.internal.routing.CollectionRoutingMap,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.ICollectionRoutingMapCache"
  langs:
  - "java"
  name: "tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  nameWithType: "ICollectionRoutingMapCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal"
  syntax:
    content: "public default Mono<CollectionRoutingMap> tryLookupAsync(String collectionRid, CollectionRoutingMap previousValue, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "previousValue"
      type: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
  name: "CollectionRoutingMap"
  nameWithType: "CollectionRoutingMap"
  fullName: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.routing.CollectionRoutingMap>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
    name: "CollectionRoutingMap"
    fullName: "com.azure.cosmos.internal.routing.CollectionRoutingMap"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync*"
  name: "tryLookupAsync"
  nameWithType: "ICollectionRoutingMapCache.tryLookupAsync"
  fullName: "com.azure.cosmos.internal.ICollectionRoutingMapCache.tryLookupAsync"
  package: "com.azure.cosmos.internal"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
