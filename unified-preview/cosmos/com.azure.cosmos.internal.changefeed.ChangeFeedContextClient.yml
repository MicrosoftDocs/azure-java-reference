### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  id: "ChangeFeedContextClient"
  parent: "com.azure.cosmos.internal.changefeed"
  children:
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close()"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient()"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient()"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint()"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  langs:
  - "java"
  name: "ChangeFeedContextClient"
  nameWithType: "ChangeFeedContextClient"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  type: "Interface"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "The interface that captures the APIs required to handle change feed processing logic."
  syntax:
    content: "public interface ChangeFeedContextClient"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close()"
  id: "close()"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ChangeFeedContextClient.close()"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close()"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Closes the document client instance and cleans up the resources."
  syntax:
    content: "public abstract void close()"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  id: "createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  nameWithType: "ChangeFeedContextClient.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Method to create a change feed query for documents."
  syntax:
    content: "public abstract Flux<FeedResponse<CosmosItemProperties>> createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
    parameters:
    - id: "collectionLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "Specifies the collection to read documents from."
    - id: "feedOptions"
      type: "com.azure.cosmos.ChangeFeedOptions"
      description: "The options for processing the query results feed."
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "an <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> containing one or several feed response pages of the obtained items or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  id: "createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  nameWithType: "ChangeFeedContextClient.createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Creates a <xref uid=\"com.azure.cosmos.CosmosAsyncItem\" data-throw-if-not-resolved=\"false\">CosmosAsyncItem</xref>."
  syntax:
    content: "public abstract Mono<CosmosAsyncItemResponse> createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the reference to the parent container."
    - id: "document"
      type: "java.lang.Object"
      description: "the document represented as a POJO or Document object."
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the request options."
    - id: "disableAutomaticIdGeneration"
      type: "boolean"
      description: "the flag for disabling automatic id generation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the single resource response with the created cosmos item or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "DELETE a <xref uid=\"com.azure.cosmos.CosmosAsyncItem\" data-throw-if-not-resolved=\"false\">CosmosAsyncItem</xref>."
  syntax:
    content: "public abstract Mono<CosmosAsyncItemResponse> deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
      description: "the item reference."
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the request options."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the  cosmos item resource response with the deleted item or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient()"
  id: "getContainerClient()"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "getContainerClient()"
  nameWithType: "ChangeFeedContextClient.getContainerClient()"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient()"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  syntax:
    content: "public abstract CosmosAsyncContainer getContainerClient()"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the Cosmos container client."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient()"
  id: "getDatabaseClient()"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "getDatabaseClient()"
  nameWithType: "ChangeFeedContextClient.getDatabaseClient()"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient()"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  syntax:
    content: "public abstract CosmosAsyncDatabase getDatabaseClient()"
    return:
      type: "com.azure.cosmos.CosmosAsyncDatabase"
      description: "the Cosmos database client."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint()"
  id: "getServiceEndpoint()"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "getServiceEndpoint()"
  nameWithType: "ChangeFeedContextClient.getServiceEndpoint()"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint()"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  syntax:
    content: "public abstract URI getServiceEndpoint()"
    return:
      type: "java.net.URI"
      description: "the Cosmos client's service endpoint."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "ChangeFeedContextClient.queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Query for items in a document container."
  syntax:
    content: "public abstract Flux<FeedResponse<CosmosItemProperties>> queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the reference to the parent container."
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
      description: "the SQL query specification."
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
      description: "the feed options."
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
      description: "an <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> containing one or several feed response pages of the obtained items or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Reads a <xref uid=\"com.azure.cosmos.CosmosAsyncContainer\" data-throw-if-not-resolved=\"false\">CosmosAsyncContainer</xref>."
  syntax:
    content: "public abstract Mono<CosmosAsyncContainerResponse> readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "a reference to the container."
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
      description: "the <xref uid=\"com.azure.cosmos.CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"false\">CosmosContainerRequestOptions</xref> for this request; it can be set as null."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncContainerResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the single cosmos container response with the read container or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Reads and returns the container properties."
  syntax:
    content: "public abstract Mono<CosmosContainerProperties> readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "a reference to the container."
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
      description: "the <xref uid=\"com.azure.cosmos.CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"false\">CosmosContainerRequestOptions</xref> for this request; it can be set as null."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosContainerProperties>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the read container properties."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  id: "readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Reads a database."
  syntax:
    content: "public abstract Mono<CosmosAsyncDatabaseResponse> readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
    parameters:
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
      description: "a reference to the database."
    - id: "options"
      type: "com.azure.cosmos.CosmosDatabaseRequestOptions"
      description: "the <xref uid=\"com.azure.cosmos.CosmosContainerRequestOptions\" data-throw-if-not-resolved=\"false\">CosmosContainerRequestOptions</xref> for this request; it can be set as null."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncDatabaseResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the single cosmos database response with the read database or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Reads a <xref uid=\"com.azure.cosmos.CosmosAsyncItem\" data-throw-if-not-resolved=\"false\">CosmosAsyncItem</xref>"
  syntax:
    content: "public abstract Mono<CosmosAsyncItemResponse> readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
      description: "the item reference."
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the request options."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the  cosmos item resource response with the read item or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  nameWithType: "ChangeFeedContextClient.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Reads the feed (sequence) of <xref uid=\"com.azure.cosmos.internal.PartitionKeyRange\" data-throw-if-not-resolved=\"false\">PartitionKeyRange</xref> for a database account from the Azure Cosmos DB service as an asynchronous operation."
  syntax:
    content: "public abstract Flux<FeedResponse<PartitionKeyRange>> readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
    parameters:
    - id: "partitionKeyRangesOrCollectionLink"
      type: "java.lang.String"
      description: "the link of the resources to be read, or owner collection link, SelfLink or AltLink. E.g. /dbs/db_rid/colls/coll_rid/pkranges."
    - id: "feedOptions"
      type: "com.azure.cosmos.FeedOptions"
      description: "the options for the request; it can be set as null."
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.internal.PartitionKeyRange>>"
      description: "an an <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> containing one or several feed response pages of the obtained items or an error."
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  langs:
  - "java"
  name: "replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClient.replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed"
  summary: "Replaces a <xref uid=\"com.azure.cosmos.CosmosAsyncItem\" data-throw-if-not-resolved=\"false\">CosmosAsyncItem</xref>."
  syntax:
    content: "public abstract Mono<CosmosAsyncItemResponse> replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
      description: "the item reference."
    - id: "document"
      type: "java.lang.Object"
      description: "the document represented as a POJO or Document object."
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
      description: "the request options."
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
      description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> containing the  cosmos item resource response with the replaced item or an error."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.FeedOptions"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.internal.PartitionKeyRange>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.PartitionKeyRange"
    name: "PartitionKeyRange"
    fullName: "com.azure.cosmos.internal.PartitionKeyRange"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed*"
  name: "readPartitionKeyRangeFeed"
  nameWithType: "ChangeFeedContextClient.readPartitionKeyRangeFeed"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readPartitionKeyRangeFeed"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.ChangeFeedOptions"
  name: "ChangeFeedOptions"
  nameWithType: "ChangeFeedOptions"
  fullName: "com.azure.cosmos.ChangeFeedOptions"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosItemProperties"
    name: "CosmosItemProperties"
    fullName: "com.azure.cosmos.CosmosItemProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery*"
  name: "createDocumentChangeFeedQuery"
  nameWithType: "ChangeFeedContextClient.createDocumentChangeFeedQuery"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createDocumentChangeFeedQuery"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.CosmosAsyncDatabase"
  name: "CosmosAsyncDatabase"
  nameWithType: "CosmosAsyncDatabase"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosDatabaseRequestOptions"
  name: "CosmosDatabaseRequestOptions"
  nameWithType: "CosmosDatabaseRequestOptions"
  fullName: "com.azure.cosmos.CosmosDatabaseRequestOptions"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncDatabaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
    name: "CosmosAsyncDatabaseResponse"
    fullName: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase*"
  name: "readDatabase"
  nameWithType: "ChangeFeedContextClient.readDatabase"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readDatabase"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.CosmosContainerRequestOptions"
  name: "CosmosContainerRequestOptions"
  nameWithType: "CosmosContainerRequestOptions"
  fullName: "com.azure.cosmos.CosmosContainerRequestOptions"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncContainerResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncContainerResponse"
    name: "CosmosAsyncContainerResponse"
    fullName: "com.azure.cosmos.CosmosAsyncContainerResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer*"
  name: "readContainer"
  nameWithType: "ChangeFeedContextClient.readContainer"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainer"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.CosmosItemRequestOptions"
  name: "CosmosItemRequestOptions"
  nameWithType: "CosmosItemRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncItemResponse"
    name: "CosmosAsyncItemResponse"
    fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem*"
  name: "createItem"
  nameWithType: "ChangeFeedContextClient.createItem"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.createItem"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.CosmosAsyncItem"
  name: "CosmosAsyncItem"
  nameWithType: "CosmosAsyncItem"
  fullName: "com.azure.cosmos.CosmosAsyncItem"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem*"
  name: "deleteItem"
  nameWithType: "ChangeFeedContextClient.deleteItem"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.deleteItem"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem*"
  name: "replaceItem"
  nameWithType: "ChangeFeedContextClient.replaceItem"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.replaceItem"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem*"
  name: "readItem"
  nameWithType: "ChangeFeedContextClient.readItem"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readItem"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.SqlQuerySpec"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems*"
  name: "queryItems"
  nameWithType: "ChangeFeedContextClient.queryItems"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.queryItems"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint*"
  name: "getServiceEndpoint"
  nameWithType: "ChangeFeedContextClient.getServiceEndpoint"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getServiceEndpoint"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosContainerProperties>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosContainerProperties"
    name: "CosmosContainerProperties"
    fullName: "com.azure.cosmos.CosmosContainerProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings*"
  name: "readContainerSettings"
  nameWithType: "ChangeFeedContextClient.readContainerSettings"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.readContainerSettings"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient*"
  name: "getContainerClient"
  nameWithType: "ChangeFeedContextClient.getContainerClient"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getContainerClient"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient*"
  name: "getDatabaseClient"
  nameWithType: "ChangeFeedContextClient.getDatabaseClient"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.getDatabaseClient"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close*"
  name: "close"
  nameWithType: "ChangeFeedContextClient.close"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient.close"
  package: "com.azure.cosmos.internal.changefeed"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.internal.PartitionKeyRange"
  name: "PartitionKeyRange"
  nameWithType: "PartitionKeyRange"
  fullName: "com.azure.cosmos.internal.PartitionKeyRange"
- uid: "com.azure.cosmos.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse"
- uid: "com.azure.cosmos.CosmosItemProperties"
  name: "CosmosItemProperties"
  nameWithType: "CosmosItemProperties"
  fullName: "com.azure.cosmos.CosmosItemProperties"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
  name: "CosmosAsyncDatabaseResponse"
  nameWithType: "CosmosAsyncDatabaseResponse"
  fullName: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse"
  name: "CosmosAsyncContainerResponse"
  nameWithType: "CosmosAsyncContainerResponse"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse"
- uid: "com.azure.cosmos.CosmosAsyncItemResponse"
  name: "CosmosAsyncItemResponse"
  nameWithType: "CosmosAsyncItemResponse"
  fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
- uid: "com.azure.cosmos.CosmosContainerProperties"
  name: "CosmosContainerProperties"
  nameWithType: "CosmosContainerProperties"
  fullName: "com.azure.cosmos.CosmosContainerProperties"
