### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  id: "StoreReader"
  parent: "com.azure.cosmos.internal.directconnectivity"
  children:
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader(com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult(com.azure.cosmos.internal.directconnectivity.StoreResponse,java.lang.Exception,boolean,boolean,java.net.URI)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode,boolean,boolean)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,boolean)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  - "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException(com.azure.cosmos.CosmosClientException)"
  langs:
  - "java"
  name: "StoreReader"
  nameWithType: "StoreReader"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  type: "Class"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public class StoreReader"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader(com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer)"
  id: "StoreReader(com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "StoreReader(TransportClient transportClient, AddressSelector addressSelector, ISessionContainer sessionContainer)"
  nameWithType: "StoreReader.StoreReader(TransportClient transportClient, AddressSelector addressSelector, ISessionContainer sessionContainer)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader(TransportClient transportClient, AddressSelector addressSelector, ISessionContainer sessionContainer)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public StoreReader(TransportClient transportClient, AddressSelector addressSelector, ISessionContainer sessionContainer)"
    parameters:
    - id: "transportClient"
      type: "com.azure.cosmos.internal.directconnectivity.TransportClient"
    - id: "addressSelector"
      type: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
    - id: "sessionContainer"
      type: "com.azure.cosmos.internal.ISessionContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult(com.azure.cosmos.internal.directconnectivity.StoreResponse,java.lang.Exception,boolean,boolean,java.net.URI)"
  id: "createStoreResult(com.azure.cosmos.internal.directconnectivity.StoreResponse,java.lang.Exception,boolean,boolean,java.net.URI)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "createStoreResult(StoreResponse storeResponse, Exception responseException, boolean requiresValidLsn, boolean useLocalLSNBasedHeaders, URI storePhysicalAddress)"
  nameWithType: "StoreReader.createStoreResult(StoreResponse storeResponse, Exception responseException, boolean requiresValidLsn, boolean useLocalLSNBasedHeaders, URI storePhysicalAddress)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult(StoreResponse storeResponse, Exception responseException, boolean requiresValidLsn, boolean useLocalLSNBasedHeaders, URI storePhysicalAddress)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " StoreResult createStoreResult(StoreResponse storeResponse, Exception responseException, boolean requiresValidLsn, boolean useLocalLSNBasedHeaders, URI storePhysicalAddress)"
    parameters:
    - id: "storeResponse"
      type: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    - id: "responseException"
      type: "java.lang.Exception"
    - id: "requiresValidLsn"
      type: "boolean"
    - id: "useLocalLSNBasedHeaders"
      type: "boolean"
    - id: "storePhysicalAddress"
      type: "java.net.URI"
    return:
      type: "com.azure.cosmos.internal.directconnectivity.StoreResult"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode)"
  id: "readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode)"
  nameWithType: "StoreReader.readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public Mono<List<StoreResult>> readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "includePrimary"
      type: "boolean"
    - id: "replicaCountToRead"
      type: "int"
    - id: "requiresValidLsn"
      type: "boolean"
    - id: "useSessionToken"
      type: "boolean"
    - id: "readMode"
      type: "com.azure.cosmos.internal.directconnectivity.ReadMode"
    return:
      type: "reactor.core.publisher.Mono<java.util.List<com.azure.cosmos.internal.directconnectivity.StoreResult>>"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode,boolean,boolean)"
  id: "readMultipleReplicaAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,int,boolean,boolean,com.azure.cosmos.internal.directconnectivity.ReadMode,boolean,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode, boolean checkMinLSN, boolean forceReadAll)"
  nameWithType: "StoreReader.readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode, boolean checkMinLSN, boolean forceReadAll)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode, boolean checkMinLSN, boolean forceReadAll)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  summary: "Makes requests to multiple replicas at once and returns responses"
  syntax:
    content: "public Mono<List<StoreResult>> readMultipleReplicaAsync(RxDocumentServiceRequest entity, boolean includePrimary, int replicaCountToRead, boolean requiresValidLsn, boolean useSessionToken, ReadMode readMode, boolean checkMinLSN, boolean forceReadAll)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
      description: "RxDocumentServiceRequest"
    - id: "includePrimary"
      type: "boolean"
      description: "flag to indicate whether to indicate primary replica in the reads"
    - id: "replicaCountToRead"
      type: "int"
      description: "number of replicas to read from"
    - id: "requiresValidLsn"
      type: "boolean"
      description: "flag to indicate whether a valid lsn is required to consider a response as valid"
    - id: "useSessionToken"
      type: "boolean"
      description: "flag to indicate whether to use session token"
    - id: "readMode"
      type: "com.azure.cosmos.internal.directconnectivity.ReadMode"
      description: "READ getMode"
    - id: "checkMinLSN"
      type: "boolean"
      description: "set minimum required session lsn"
    - id: "forceReadAll"
      type: "boolean"
      description: "reads from all available replicas to gather result from readsToRead number of replicas"
    return:
      type: "reactor.core.publisher.Mono<java.util.List<com.azure.cosmos.internal.directconnectivity.StoreResult>>"
      description: "ReadReplicaResult which indicates the LSN and whether Quorum was Met / Not Met etc"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,boolean)"
  id: "readPrimaryAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,boolean,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "readPrimaryAsync(RxDocumentServiceRequest entity, boolean requiresValidLsn, boolean useSessionToken)"
  nameWithType: "StoreReader.readPrimaryAsync(RxDocumentServiceRequest entity, boolean requiresValidLsn, boolean useSessionToken)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync(RxDocumentServiceRequest entity, boolean requiresValidLsn, boolean useSessionToken)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public Mono<StoreResult> readPrimaryAsync(RxDocumentServiceRequest entity, boolean requiresValidLsn, boolean useSessionToken)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "requiresValidLsn"
      type: "boolean"
    - id: "useSessionToken"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResult>"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  id: "startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  nameWithType: "StoreReader.startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " void startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException(com.azure.cosmos.CosmosClientException)"
  id: "verifyCanContinueOnException(com.azure.cosmos.CosmosClientException)"
  parent: "com.azure.cosmos.internal.directconnectivity.StoreReader"
  langs:
  - "java"
  name: "verifyCanContinueOnException(CosmosClientException ex)"
  nameWithType: "StoreReader.verifyCanContinueOnException(CosmosClientException ex)"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException(CosmosClientException ex)"
  overload: "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "static void verifyCanContinueOnException(CosmosClientException ex)"
    parameters:
    - id: "ex"
      type: "com.azure.cosmos.CosmosClientException"
  exceptions:
  - type: "com.azure.cosmos.CosmosClientException"
references:
- uid: "com.azure.cosmos.internal.directconnectivity.TransportClient"
  name: "TransportClient"
  nameWithType: "TransportClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.TransportClient"
- uid: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
  name: "AddressSelector"
  nameWithType: "AddressSelector"
  fullName: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
- uid: "com.azure.cosmos.internal.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader*"
  name: "StoreReader"
  nameWithType: "StoreReader.StoreReader"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.StoreReader"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.internal.directconnectivity.ReadMode"
  name: "ReadMode"
  nameWithType: "ReadMode"
  fullName: "com.azure.cosmos.internal.directconnectivity.ReadMode"
- uid: "reactor.core.publisher.Mono<java.util.List<com.azure.cosmos.internal.directconnectivity.StoreResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.directconnectivity.StoreResult"
    name: "StoreResult"
    fullName: "com.azure.cosmos.internal.directconnectivity.StoreResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync*"
  name: "readMultipleReplicaAsync"
  nameWithType: "StoreReader.readMultipleReplicaAsync"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.readMultipleReplicaAsync"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResult>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.directconnectivity.StoreResult"
    name: "StoreResult"
    fullName: "com.azure.cosmos.internal.directconnectivity.StoreResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync*"
  name: "readPrimaryAsync"
  nameWithType: "StoreReader.readPrimaryAsync"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.readPrimaryAsync"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.CosmosClientException"
  name: "CosmosClientException"
  nameWithType: "CosmosClientException"
  fullName: "com.azure.cosmos.CosmosClientException"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
  name: "StoreResponse"
  nameWithType: "StoreResponse"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreResult"
  name: "StoreResult"
  nameWithType: "StoreResult"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreResult"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult*"
  name: "createStoreResult"
  nameWithType: "StoreReader.createStoreResult"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.createStoreResult"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh*"
  name: "startBackgroundAddressRefresh"
  nameWithType: "StoreReader.startBackgroundAddressRefresh"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.startBackgroundAddressRefresh"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException*"
  name: "verifyCanContinueOnException"
  nameWithType: "StoreReader.verifyCanContinueOnException"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.verifyCanContinueOnException"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreReader.ReadReplicaResult"
  name: "StoreReader.ReadReplicaResult"
  nameWithType: "StoreReader.ReadReplicaResult"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreReader.ReadReplicaResult"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
