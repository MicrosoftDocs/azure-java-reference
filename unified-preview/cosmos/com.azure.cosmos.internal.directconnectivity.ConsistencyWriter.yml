### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  id: "ConsistencyWriter"
  parent: "com.azure.cosmos.internal.directconnectivity"
  children:
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter(com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,boolean)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn(com.azure.cosmos.internal.directconnectivity.StoreResponse,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  - "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  langs:
  - "java"
  name: "ConsistencyWriter"
  nameWithType: "ConsistencyWriter"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  type: "Class"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public class ConsistencyWriter"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter(com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,boolean)"
  id: "ConsistencyWriter(com.azure.cosmos.internal.directconnectivity.AddressSelector,com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.directconnectivity.TransportClient,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "ConsistencyWriter(AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, IAuthorizationTokenProvider authorizationTokenProvider, GatewayServiceConfigurationReader serviceConfigReader, boolean useMultipleWriteLocations)"
  nameWithType: "ConsistencyWriter.ConsistencyWriter(AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, IAuthorizationTokenProvider authorizationTokenProvider, GatewayServiceConfigurationReader serviceConfigReader, boolean useMultipleWriteLocations)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter(AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, IAuthorizationTokenProvider authorizationTokenProvider, GatewayServiceConfigurationReader serviceConfigReader, boolean useMultipleWriteLocations)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public ConsistencyWriter(AddressSelector addressSelector, ISessionContainer sessionContainer, TransportClient transportClient, IAuthorizationTokenProvider authorizationTokenProvider, GatewayServiceConfigurationReader serviceConfigReader, boolean useMultipleWriteLocations)"
    parameters:
    - id: "addressSelector"
      type: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
    - id: "sessionContainer"
      type: "com.azure.cosmos.internal.ISessionContainer"
    - id: "transportClient"
      type: "com.azure.cosmos.internal.directconnectivity.TransportClient"
    - id: "authorizationTokenProvider"
      type: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
    - id: "serviceConfigReader"
      type: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
    - id: "useMultipleWriteLocations"
      type: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  id: "barrierForGlobalStrong(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "barrierForGlobalStrong(RxDocumentServiceRequest request, StoreResponse response)"
  nameWithType: "ConsistencyWriter.barrierForGlobalStrong(RxDocumentServiceRequest request, StoreResponse response)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong(RxDocumentServiceRequest request, StoreResponse response)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " Mono<StoreResponse> barrierForGlobalStrong(RxDocumentServiceRequest request, StoreResponse response)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "response"
      type: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn(com.azure.cosmos.internal.directconnectivity.StoreResponse,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>)"
  id: "getLsnAndGlobalCommittedLsn(com.azure.cosmos.internal.directconnectivity.StoreResponse,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>,com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "getLsnAndGlobalCommittedLsn(StoreResponse response, Utils.ValueHolder<Long> lsn, Utils.ValueHolder<Long> globalCommittedLsn)"
  nameWithType: "ConsistencyWriter.getLsnAndGlobalCommittedLsn(StoreResponse response, Utils.ValueHolder<Long> lsn, Utils.ValueHolder<Long> globalCommittedLsn)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn(StoreResponse response, Utils.ValueHolder<Long> lsn, Utils.ValueHolder<Long> globalCommittedLsn)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "static void getLsnAndGlobalCommittedLsn(StoreResponse response, Utils.ValueHolder<Long> lsn, Utils.ValueHolder<Long> globalCommittedLsn)"
    parameters:
    - id: "response"
      type: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    - id: "lsn"
      type: "com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>"
    - id: "globalCommittedLsn"
      type: "com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  id: "isGlobalStrongRequest(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.StoreResponse)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "isGlobalStrongRequest(RxDocumentServiceRequest request, StoreResponse response)"
  nameWithType: "ConsistencyWriter.isGlobalStrongRequest(RxDocumentServiceRequest request, StoreResponse response)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest(RxDocumentServiceRequest request, StoreResponse response)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " boolean isGlobalStrongRequest(RxDocumentServiceRequest request, StoreResponse response)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "response"
      type: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  id: "startBackgroundAddressRefresh(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  nameWithType: "ConsistencyWriter.startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " void startBackgroundAddressRefresh(RxDocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  id: "writeAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "writeAsync(RxDocumentServiceRequest entity, TimeoutHelper timeout, boolean forceRefresh)"
  nameWithType: "ConsistencyWriter.writeAsync(RxDocumentServiceRequest entity, TimeoutHelper timeout, boolean forceRefresh)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync(RxDocumentServiceRequest entity, TimeoutHelper timeout, boolean forceRefresh)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: "public Mono<StoreResponse> writeAsync(RxDocumentServiceRequest entity, TimeoutHelper timeout, boolean forceRefresh)"
    parameters:
    - id: "entity"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "timeout"
      type: "com.azure.cosmos.internal.directconnectivity.TimeoutHelper"
    - id: "forceRefresh"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  id: "writePrivateAsync(com.azure.cosmos.internal.RxDocumentServiceRequest,com.azure.cosmos.internal.directconnectivity.TimeoutHelper,boolean)"
  parent: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter"
  langs:
  - "java"
  name: "writePrivateAsync(RxDocumentServiceRequest request, TimeoutHelper timeout, boolean forceRefresh)"
  nameWithType: "ConsistencyWriter.writePrivateAsync(RxDocumentServiceRequest request, TimeoutHelper timeout, boolean forceRefresh)"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync(RxDocumentServiceRequest request, TimeoutHelper timeout, boolean forceRefresh)"
  overload: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.directconnectivity"
  syntax:
    content: " Mono<StoreResponse> writePrivateAsync(RxDocumentServiceRequest request, TimeoutHelper timeout, boolean forceRefresh)"
    parameters:
    - id: "request"
      type: "com.azure.cosmos.internal.RxDocumentServiceRequest"
    - id: "timeout"
      type: "com.azure.cosmos.internal.directconnectivity.TimeoutHelper"
    - id: "forceRefresh"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
references:
- uid: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
  name: "AddressSelector"
  nameWithType: "AddressSelector"
  fullName: "com.azure.cosmos.internal.directconnectivity.AddressSelector"
- uid: "com.azure.cosmos.internal.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
- uid: "com.azure.cosmos.internal.directconnectivity.TransportClient"
  name: "TransportClient"
  nameWithType: "TransportClient"
  fullName: "com.azure.cosmos.internal.directconnectivity.TransportClient"
- uid: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
  name: "IAuthorizationTokenProvider"
  nameWithType: "IAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
- uid: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
  name: "GatewayServiceConfigurationReader"
  nameWithType: "GatewayServiceConfigurationReader"
  fullName: "com.azure.cosmos.internal.directconnectivity.GatewayServiceConfigurationReader"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter*"
  name: "ConsistencyWriter"
  nameWithType: "ConsistencyWriter.ConsistencyWriter"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.ConsistencyWriter"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.RxDocumentServiceRequest"
  name: "RxDocumentServiceRequest"
  nameWithType: "RxDocumentServiceRequest"
  fullName: "com.azure.cosmos.internal.RxDocumentServiceRequest"
- uid: "com.azure.cosmos.internal.directconnectivity.TimeoutHelper"
  name: "TimeoutHelper"
  nameWithType: "TimeoutHelper"
  fullName: "com.azure.cosmos.internal.directconnectivity.TimeoutHelper"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.directconnectivity.StoreResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
    name: "StoreResponse"
    fullName: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync*"
  name: "writeAsync"
  nameWithType: "ConsistencyWriter.writeAsync"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writeAsync"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync*"
  name: "writePrivateAsync"
  nameWithType: "ConsistencyWriter.writePrivateAsync"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.writePrivateAsync"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
  name: "StoreResponse"
  nameWithType: "StoreResponse"
  fullName: "com.azure.cosmos.internal.directconnectivity.StoreResponse"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest*"
  name: "isGlobalStrongRequest"
  nameWithType: "ConsistencyWriter.isGlobalStrongRequest"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.isGlobalStrongRequest"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong*"
  name: "barrierForGlobalStrong"
  nameWithType: "ConsistencyWriter.barrierForGlobalStrong"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.barrierForGlobalStrong"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.Utils.ValueHolder<java.lang.Long>"
  spec.java:
  - uid: "com.azure.cosmos.internal.Utils.ValueHolder"
    name: "ValueHolder"
    fullName: "com.azure.cosmos.internal.Utils.ValueHolder"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn*"
  name: "getLsnAndGlobalCommittedLsn"
  nameWithType: "ConsistencyWriter.getLsnAndGlobalCommittedLsn"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.getLsnAndGlobalCommittedLsn"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh*"
  name: "startBackgroundAddressRefresh"
  nameWithType: "ConsistencyWriter.startBackgroundAddressRefresh"
  fullName: "com.azure.cosmos.internal.directconnectivity.ConsistencyWriter.startBackgroundAddressRefresh"
  package: "com.azure.cosmos.internal.directconnectivity"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.Utils.ValueHolder"
  name: "Utils.ValueHolder"
  nameWithType: "Utils.ValueHolder"
  fullName: "com.azure.cosmos.internal.Utils.ValueHolder"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
