### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl"
  id: "PartitionSynchronizerImpl"
  parent: "com.azure.cosmos.internal.changefeed.implementation"
  children:
  - "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl(com.azure.cosmos.internal.changefeed.ChangeFeedContextClient,com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.internal.changefeed.LeaseContainer,com.azure.cosmos.internal.changefeed.LeaseManager,int,int)"
  - "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases()"
  - "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition(com.azure.cosmos.internal.changefeed.Lease)"
  langs:
  - "java"
  name: "PartitionSynchronizerImpl"
  nameWithType: "PartitionSynchronizerImpl"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl"
  type: "Class"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  summary: "Implementation for the partition synchronizer."
  syntax:
    content: " class PartitionSynchronizerImpl implements PartitionSynchronizer"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.internal.changefeed.PartitionSynchronizer"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl(com.azure.cosmos.internal.changefeed.ChangeFeedContextClient,com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.internal.changefeed.LeaseContainer,com.azure.cosmos.internal.changefeed.LeaseManager,int,int)"
  id: "PartitionSynchronizerImpl(com.azure.cosmos.internal.changefeed.ChangeFeedContextClient,com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.internal.changefeed.LeaseContainer,com.azure.cosmos.internal.changefeed.LeaseManager,int,int)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl"
  langs:
  - "java"
  name: "PartitionSynchronizerImpl(ChangeFeedContextClient documentClient, CosmosAsyncContainer collectionSelfLink, LeaseContainer leaseContainer, LeaseManager leaseManager, int degreeOfParallelism, int maxBatchSize)"
  nameWithType: "PartitionSynchronizerImpl.PartitionSynchronizerImpl(ChangeFeedContextClient documentClient, CosmosAsyncContainer collectionSelfLink, LeaseContainer leaseContainer, LeaseManager leaseManager, int degreeOfParallelism, int maxBatchSize)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl(ChangeFeedContextClient documentClient, CosmosAsyncContainer collectionSelfLink, LeaseContainer leaseContainer, LeaseManager leaseManager, int degreeOfParallelism, int maxBatchSize)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public PartitionSynchronizerImpl(ChangeFeedContextClient documentClient, CosmosAsyncContainer collectionSelfLink, LeaseContainer leaseContainer, LeaseManager leaseManager, int degreeOfParallelism, int maxBatchSize)"
    parameters:
    - id: "documentClient"
      type: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
    - id: "collectionSelfLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "leaseContainer"
      type: "com.azure.cosmos.internal.changefeed.LeaseContainer"
    - id: "leaseManager"
      type: "com.azure.cosmos.internal.changefeed.LeaseManager"
    - id: "degreeOfParallelism"
      type: "int"
    - id: "maxBatchSize"
      type: "int"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases()"
  id: "createMissingLeases()"
  parent: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl"
  langs:
  - "java"
  name: "createMissingLeases()"
  nameWithType: "PartitionSynchronizerImpl.createMissingLeases()"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases()"
  overload: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<Void> createMissingLeases()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition(com.azure.cosmos.internal.changefeed.Lease)"
  id: "splitPartition(com.azure.cosmos.internal.changefeed.Lease)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl"
  langs:
  - "java"
  name: "splitPartition(Lease lease)"
  nameWithType: "PartitionSynchronizerImpl.splitPartition(Lease lease)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition(Lease lease)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Flux<Lease> splitPartition(Lease lease)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.internal.changefeed.Lease"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.internal.changefeed.Lease>"
references:
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  name: "ChangeFeedContextClient"
  nameWithType: "ChangeFeedContextClient"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.internal.changefeed.LeaseContainer"
  name: "LeaseContainer"
  nameWithType: "LeaseContainer"
  fullName: "com.azure.cosmos.internal.changefeed.LeaseContainer"
- uid: "com.azure.cosmos.internal.changefeed.LeaseManager"
  name: "LeaseManager"
  nameWithType: "LeaseManager"
  fullName: "com.azure.cosmos.internal.changefeed.LeaseManager"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl*"
  name: "PartitionSynchronizerImpl"
  nameWithType: "PartitionSynchronizerImpl.PartitionSynchronizerImpl"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.PartitionSynchronizerImpl"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases*"
  name: "createMissingLeases"
  nameWithType: "PartitionSynchronizerImpl.createMissingLeases"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.createMissingLeases"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.internal.changefeed.Lease"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.internal.changefeed.Lease>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.changefeed.Lease"
    name: "Lease"
    fullName: "com.azure.cosmos.internal.changefeed.Lease"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition*"
  name: "splitPartition"
  nameWithType: "PartitionSynchronizerImpl.splitPartition"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.PartitionSynchronizerImpl.splitPartition"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.PartitionSynchronizer"
  name: "PartitionSynchronizer"
  nameWithType: "PartitionSynchronizer"
  fullName: "com.azure.cosmos.internal.changefeed.PartitionSynchronizer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
