### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  id: "ChangeFeedContextClientImpl"
  parent: "com.azure.cosmos.internal.changefeed.implementation"
  children:
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close()"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  - "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  langs:
  - "java"
  name: "ChangeFeedContextClientImpl"
  nameWithType: "ChangeFeedContextClientImpl"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  type: "Class"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  summary: "Implementation for ChangeFeedDocumentClient."
  syntax:
    content: "public class ChangeFeedContextClientImpl implements ChangeFeedContextClient"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)"
  id: "ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)"
  nameWithType: "ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.cosmos.internal.changefeed.ChangeFeedContextClient\" data-throw-if-not-resolved=\"false\">ChangeFeedContextClient</xref> interface."
  syntax:
    content: "public ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer)"
    parameters:
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "existing client."
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)"
  id: "ChangeFeedContextClientImpl(com.azure.cosmos.CosmosAsyncContainer,reactor.core.scheduler.Scheduler)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)"
  nameWithType: "ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  summary: "Initializes a new instance of the <xref uid=\"com.azure.cosmos.internal.changefeed.ChangeFeedContextClient\" data-throw-if-not-resolved=\"false\">ChangeFeedContextClient</xref> interface."
  syntax:
    content: "public ChangeFeedContextClientImpl(CosmosAsyncContainer cosmosContainer, Scheduler rxScheduler)"
    parameters:
    - id: "cosmosContainer"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "existing client."
    - id: "rxScheduler"
      type: "reactor.core.scheduler.Scheduler"
      description: "the RX Java scheduler to observe on."
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close()"
  id: "close()"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ChangeFeedContextClientImpl.close()"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close()"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public void close()"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  id: "createDocumentChangeFeedQuery(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.ChangeFeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  nameWithType: "ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Flux<FeedResponse<CosmosItemProperties>> createDocumentChangeFeedQuery(CosmosAsyncContainer collectionLink, ChangeFeedOptions feedOptions)"
    parameters:
    - id: "collectionLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "feedOptions"
      type: "com.azure.cosmos.ChangeFeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  id: "createItem(com.azure.cosmos.CosmosAsyncContainer,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions,boolean)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  nameWithType: "ChangeFeedContextClientImpl.createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncItemResponse> createItem(CosmosAsyncContainer containerLink, Object document, CosmosItemRequestOptions options, boolean disableAutomaticIdGeneration)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "document"
      type: "java.lang.Object"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
    - id: "disableAutomaticIdGeneration"
      type: "boolean"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "deleteItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncItemResponse> deleteItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()"
  id: "getContainerClient()"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "getContainerClient()"
  nameWithType: "ChangeFeedContextClientImpl.getContainerClient()"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient()"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public CosmosAsyncContainer getContainerClient()"
    return:
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()"
  id: "getDatabaseClient()"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "getDatabaseClient()"
  nameWithType: "ChangeFeedContextClientImpl.getDatabaseClient()"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient()"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public CosmosAsyncDatabase getDatabaseClient()"
    return:
      type: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()"
  id: "getServiceEndpoint()"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "getServiceEndpoint()"
  nameWithType: "ChangeFeedContextClientImpl.getServiceEndpoint()"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint()"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public URI getServiceEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  id: "queryItems(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.SqlQuerySpec,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Flux<FeedResponse<CosmosItemProperties>> queryItems(CosmosAsyncContainer containerLink, SqlQuerySpec querySpec, FeedOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "querySpec"
      type: "com.azure.cosmos.SqlQuerySpec"
    - id: "options"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "readContainer(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncContainerResponse> readContainer(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncContainerResponse>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  id: "readContainerSettings(com.azure.cosmos.CosmosAsyncContainer,com.azure.cosmos.CosmosContainerRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosContainerProperties> readContainerSettings(CosmosAsyncContainer containerLink, CosmosContainerRequestOptions options)"
    parameters:
    - id: "containerLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
    - id: "options"
      type: "com.azure.cosmos.CosmosContainerRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosContainerProperties>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  id: "readDatabase(com.azure.cosmos.CosmosAsyncDatabase,com.azure.cosmos.CosmosDatabaseRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncDatabaseResponse> readDatabase(CosmosAsyncDatabase database, CosmosDatabaseRequestOptions options)"
    parameters:
    - id: "database"
      type: "com.azure.cosmos.CosmosAsyncDatabase"
    - id: "options"
      type: "com.azure.cosmos.CosmosDatabaseRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncDatabaseResponse>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "readItem(com.azure.cosmos.CosmosAsyncItem,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncItemResponse> readItem(CosmosAsyncItem itemLink, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  id: "readPartitionKeyRangeFeed(java.lang.String,com.azure.cosmos.FeedOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  nameWithType: "ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Flux<FeedResponse<PartitionKeyRange>> readPartitionKeyRangeFeed(String partitionKeyRangesOrCollectionLink, FeedOptions feedOptions)"
    parameters:
    - id: "partitionKeyRangesOrCollectionLink"
      type: "java.lang.String"
    - id: "feedOptions"
      type: "com.azure.cosmos.FeedOptions"
    return:
      type: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.internal.PartitionKeyRange>>"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  id: "replaceItem(com.azure.cosmos.CosmosAsyncItem,java.lang.Object,com.azure.cosmos.CosmosItemRequestOptions)"
  parent: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl"
  langs:
  - "java"
  name: "replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  nameWithType: "ChangeFeedContextClientImpl.replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
  overload: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem*"
  type: "Method"
  package: "com.azure.cosmos.internal.changefeed.implementation"
  syntax:
    content: "public Mono<CosmosAsyncItemResponse> replaceItem(CosmosAsyncItem itemLink, Object document, CosmosItemRequestOptions options)"
    parameters:
    - id: "itemLink"
      type: "com.azure.cosmos.CosmosAsyncItem"
    - id: "document"
      type: "java.lang.Object"
    - id: "options"
      type: "com.azure.cosmos.CosmosItemRequestOptions"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
references:
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl*"
  name: "ChangeFeedContextClientImpl"
  nameWithType: "ChangeFeedContextClientImpl.ChangeFeedContextClientImpl"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.ChangeFeedContextClientImpl"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "reactor.core.scheduler.Scheduler"
  spec.java:
  - uid: "reactor.core.scheduler.Scheduler"
    name: "Scheduler"
    fullName: "reactor.core.scheduler.Scheduler"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.FeedOptions"
  name: "FeedOptions"
  nameWithType: "FeedOptions"
  fullName: "com.azure.cosmos.FeedOptions"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.internal.PartitionKeyRange>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.PartitionKeyRange"
    name: "PartitionKeyRange"
    fullName: "com.azure.cosmos.internal.PartitionKeyRange"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed*"
  name: "readPartitionKeyRangeFeed"
  nameWithType: "ChangeFeedContextClientImpl.readPartitionKeyRangeFeed"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readPartitionKeyRangeFeed"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.ChangeFeedOptions"
  name: "ChangeFeedOptions"
  nameWithType: "ChangeFeedOptions"
  fullName: "com.azure.cosmos.ChangeFeedOptions"
- uid: "reactor.core.publisher.Flux<com.azure.cosmos.FeedResponse<com.azure.cosmos.CosmosItemProperties>>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.FeedResponse"
    name: "FeedResponse"
    fullName: "com.azure.cosmos.FeedResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosItemProperties"
    name: "CosmosItemProperties"
    fullName: "com.azure.cosmos.CosmosItemProperties"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery*"
  name: "createDocumentChangeFeedQuery"
  nameWithType: "ChangeFeedContextClientImpl.createDocumentChangeFeedQuery"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createDocumentChangeFeedQuery"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.CosmosAsyncDatabase"
  name: "CosmosAsyncDatabase"
  nameWithType: "CosmosAsyncDatabase"
  fullName: "com.azure.cosmos.CosmosAsyncDatabase"
- uid: "com.azure.cosmos.CosmosDatabaseRequestOptions"
  name: "CosmosDatabaseRequestOptions"
  nameWithType: "CosmosDatabaseRequestOptions"
  fullName: "com.azure.cosmos.CosmosDatabaseRequestOptions"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncDatabaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
    name: "CosmosAsyncDatabaseResponse"
    fullName: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase*"
  name: "readDatabase"
  nameWithType: "ChangeFeedContextClientImpl.readDatabase"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readDatabase"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.CosmosContainerRequestOptions"
  name: "CosmosContainerRequestOptions"
  nameWithType: "CosmosContainerRequestOptions"
  fullName: "com.azure.cosmos.CosmosContainerRequestOptions"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncContainerResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncContainerResponse"
    name: "CosmosAsyncContainerResponse"
    fullName: "com.azure.cosmos.CosmosAsyncContainerResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer*"
  name: "readContainer"
  nameWithType: "ChangeFeedContextClientImpl.readContainer"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainer"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.cosmos.CosmosItemRequestOptions"
  name: "CosmosItemRequestOptions"
  nameWithType: "CosmosItemRequestOptions"
  fullName: "com.azure.cosmos.CosmosItemRequestOptions"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosAsyncItemResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosAsyncItemResponse"
    name: "CosmosAsyncItemResponse"
    fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem*"
  name: "createItem"
  nameWithType: "ChangeFeedContextClientImpl.createItem"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.createItem"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.CosmosAsyncItem"
  name: "CosmosAsyncItem"
  nameWithType: "CosmosAsyncItem"
  fullName: "com.azure.cosmos.CosmosAsyncItem"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem*"
  name: "deleteItem"
  nameWithType: "ChangeFeedContextClientImpl.deleteItem"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.deleteItem"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem*"
  name: "replaceItem"
  nameWithType: "ChangeFeedContextClientImpl.replaceItem"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.replaceItem"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem*"
  name: "readItem"
  nameWithType: "ChangeFeedContextClientImpl.readItem"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readItem"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.SqlQuerySpec"
  name: "SqlQuerySpec"
  nameWithType: "SqlQuerySpec"
  fullName: "com.azure.cosmos.SqlQuerySpec"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems*"
  name: "queryItems"
  nameWithType: "ChangeFeedContextClientImpl.queryItems"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.queryItems"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint*"
  name: "getServiceEndpoint"
  nameWithType: "ChangeFeedContextClientImpl.getServiceEndpoint"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getServiceEndpoint"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.CosmosContainerProperties>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.CosmosContainerProperties"
    name: "CosmosContainerProperties"
    fullName: "com.azure.cosmos.CosmosContainerProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings*"
  name: "readContainerSettings"
  nameWithType: "ChangeFeedContextClientImpl.readContainerSettings"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.readContainerSettings"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient*"
  name: "getContainerClient"
  nameWithType: "ChangeFeedContextClientImpl.getContainerClient"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getContainerClient"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient*"
  name: "getDatabaseClient"
  nameWithType: "ChangeFeedContextClientImpl.getDatabaseClient"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.getDatabaseClient"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close*"
  name: "close"
  nameWithType: "ChangeFeedContextClientImpl.close"
  fullName: "com.azure.cosmos.internal.changefeed.implementation.ChangeFeedContextClientImpl.close"
  package: "com.azure.cosmos.internal.changefeed.implementation"
- uid: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
  name: "ChangeFeedContextClient"
  nameWithType: "ChangeFeedContextClient"
  fullName: "com.azure.cosmos.internal.changefeed.ChangeFeedContextClient"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.cosmos.internal.PartitionKeyRange"
  name: "PartitionKeyRange"
  nameWithType: "PartitionKeyRange"
  fullName: "com.azure.cosmos.internal.PartitionKeyRange"
- uid: "com.azure.cosmos.FeedResponse"
  name: "FeedResponse"
  nameWithType: "FeedResponse"
  fullName: "com.azure.cosmos.FeedResponse"
- uid: "com.azure.cosmos.CosmosItemProperties"
  name: "CosmosItemProperties"
  nameWithType: "CosmosItemProperties"
  fullName: "com.azure.cosmos.CosmosItemProperties"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
  name: "CosmosAsyncDatabaseResponse"
  nameWithType: "CosmosAsyncDatabaseResponse"
  fullName: "com.azure.cosmos.CosmosAsyncDatabaseResponse"
- uid: "com.azure.cosmos.CosmosAsyncContainerResponse"
  name: "CosmosAsyncContainerResponse"
  nameWithType: "CosmosAsyncContainerResponse"
  fullName: "com.azure.cosmos.CosmosAsyncContainerResponse"
- uid: "com.azure.cosmos.CosmosAsyncItemResponse"
  name: "CosmosAsyncItemResponse"
  nameWithType: "CosmosAsyncItemResponse"
  fullName: "com.azure.cosmos.CosmosAsyncItemResponse"
- uid: "com.azure.cosmos.CosmosContainerProperties"
  name: "CosmosContainerProperties"
  nameWithType: "CosmosContainerProperties"
  fullName: "com.azure.cosmos.CosmosContainerProperties"
