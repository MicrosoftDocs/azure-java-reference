### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  id: "QueueRequestOptions"
  parent: "com.microsoft.azure.storage.queue"
  children:
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.queue.CloudQueueClient)"
  - "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(com.microsoft.azure.storage.queue.QueueEncryptionPolicy)"
  langs:
  - "java"
  name: "QueueRequestOptions"
  nameWithType: "QueueRequestOptions"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  type: "Class"
  package: "com.microsoft.azure.storage.queue"
  summary: "Represents a set of options that may be specified on a queue request."
  syntax:
    content: "public final class QueueRequestOptions extends RequestOptions"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.RequestOptions"
  inheritedMembers:
  - "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
  - "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
  - "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
  - "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
  - "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
  - "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
  - "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
  - "com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  - "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)"
  - "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)"
  - "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
  - "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()"
  id: "QueueRequestOptions()"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "QueueRequestOptions()"
  nameWithType: "QueueRequestOptions.QueueRequestOptions()"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Initializes a new instance of the QueueRequestOptions class."
  syntax:
    content: "public QueueRequestOptions()"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  id: "QueueRequestOptions(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "QueueRequestOptions(QueueRequestOptions other)"
  nameWithType: "QueueRequestOptions.QueueRequestOptions(QueueRequestOptions other)"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(QueueRequestOptions other)"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Initializes a new instance of the QueueRequestOptions class as a copy of another QueueRequestOptions instance."
  syntax:
    content: "public QueueRequestOptions(QueueRequestOptions other)"
    parameters:
    - id: "other"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "The <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object to copy the values\n            from."
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  id: "applyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions)"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "applyDefaults(QueueRequestOptions modifiedOptions)"
  nameWithType: "QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Applies defaults to the options passed in."
  syntax:
    content: "protected static void applyDefaults(QueueRequestOptions modifiedOptions)"
    parameters:
    - id: "modifiedOptions"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "The options to apply defaults to."
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()"
  id: "assertPolicyIfRequired()"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "assertPolicyIfRequired()"
  nameWithType: "QueueRequestOptions.assertPolicyIfRequired()"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Assert that if strict mode is on, an encryption policy is specified."
  syntax:
    content: "protected void assertPolicyIfRequired()"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()"
  id: "getEncryptionPolicy()"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "getEncryptionPolicy()"
  nameWithType: "QueueRequestOptions.getEncryptionPolicy()"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the encryption policy to use for this request. For more information about the encryption policy defaults, see <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(com.microsoft.azure.storage.queue.QueueEncryptionPolicy)\" data-throw-if-not-resolved=\"false\">#setEncryptionPolicy(QueueEncryptionPolicy)</xref>."
  syntax:
    content: "public QueueEncryptionPolicy getEncryptionPolicy()"
    return:
      type: "com.microsoft.azure.storage.queue.QueueEncryptionPolicy"
      description: "An <xref uid=\"com.microsoft.azure.storage.queue.QueueEncryptionPolicy\" data-throw-if-not-resolved=\"false\">QueueEncryptionPolicy</xref> object that represents the current encryption policy."
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.queue.CloudQueueClient)"
  id: "populateAndApplyDefaults(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.queue.CloudQueueClient)"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "populateAndApplyDefaults(QueueRequestOptions options, CloudQueueClient client)"
  nameWithType: "QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, CloudQueueClient client)"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, CloudQueueClient client)"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Populates the default timeout and retry policy from client if they are not set."
  syntax:
    content: "protected static final QueueRequestOptions populateAndApplyDefaults(QueueRequestOptions options, CloudQueueClient client)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "The input options to copy from when applying defaults"
    - id: "client"
      type: "com.microsoft.azure.storage.queue.CloudQueueClient"
      description: "The <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref> service client to populate the\n            default values from."
    return:
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(com.microsoft.azure.storage.queue.QueueEncryptionPolicy)"
  id: "setEncryptionPolicy(com.microsoft.azure.storage.queue.QueueEncryptionPolicy)"
  parent: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  langs:
  - "java"
  name: "setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)"
  nameWithType: "QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)"
  overload: "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Sets the QueueEncryptionPolicy object to use for this request.\n\nThe default QueueEncryptionPolicy is set in the client and is by default null, indicating no encryption. You can change the QueueEncryptionPolicy on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that QueueEncryptionPolicy."
  syntax:
    content: "public void setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)"
    parameters:
    - id: "encryptionPolicy"
      type: "com.microsoft.azure.storage.queue.QueueEncryptionPolicy"
      description: "the QueueEncryptionPolicy object to use when making service requests."
references:
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions*"
  name: "QueueRequestOptions"
  nameWithType: "QueueRequestOptions.QueueRequestOptions"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueueClient"
  name: "CloudQueueClient"
  nameWithType: "CloudQueueClient"
  fullName: "com.microsoft.azure.storage.queue.CloudQueueClient"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults*"
  name: "populateAndApplyDefaults"
  nameWithType: "QueueRequestOptions.populateAndApplyDefaults"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults*"
  name: "applyDefaults"
  nameWithType: "QueueRequestOptions.applyDefaults"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.QueueEncryptionPolicy"
  name: "QueueEncryptionPolicy"
  nameWithType: "QueueEncryptionPolicy"
  fullName: "com.microsoft.azure.storage.queue.QueueEncryptionPolicy"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy*"
  name: "getEncryptionPolicy"
  nameWithType: "QueueRequestOptions.getEncryptionPolicy"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy*"
  name: "setEncryptionPolicy"
  nameWithType: "QueueRequestOptions.setEncryptionPolicy"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired*"
  name: "assertPolicyIfRequired"
  nameWithType: "QueueRequestOptions.assertPolicyIfRequired"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
- uid: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)"
  name: "RequestOptions.setRequireEncryption(Boolean)"
  nameWithType: "RequestOptions.setRequireEncryption(Boolean)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
  name: "RequestOptions.requireEncryption()"
  nameWithType: "RequestOptions.requireEncryption()"
  fullName: "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
  name: "RequestOptions.getTimeoutIntervalInMs()"
  nameWithType: "RequestOptions.getTimeoutIntervalInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
  name: "RequestOptions.getOperationExpiryTimeInMs()"
  nameWithType: "RequestOptions.getOperationExpiryTimeInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
- uid: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
  name: "RequestOptions.getRetryPolicyFactory()"
  nameWithType: "RequestOptions.getRetryPolicyFactory()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)"
  name: "RequestOptions.setTimeoutIntervalInMs(Integer)"
  nameWithType: "RequestOptions.setTimeoutIntervalInMs(Integer)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)"
- uid: "com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  name: "RequestOptions.setLocationMode(LocationMode)"
  nameWithType: "RequestOptions.setLocationMode(LocationMode)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)"
- uid: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
  name: "RequestOptions.applyBaseDefaultsInternal(RequestOptions)"
  nameWithType: "RequestOptions.applyBaseDefaultsInternal(RequestOptions)"
  fullName: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
- uid: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
  name: "RequestOptions.setRetryPolicyFactory(RetryPolicyFactory)"
  nameWithType: "RequestOptions.setRetryPolicyFactory(RetryPolicyFactory)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
- uid: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
  name: "RequestOptions.populateRequestOptions(RequestOptions,RequestOptions,boolean)"
  nameWithType: "RequestOptions.populateRequestOptions(RequestOptions,RequestOptions,boolean)"
  fullName: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)"
  name: "RequestOptions.setMaximumExecutionTimeInMs(Integer)"
  nameWithType: "RequestOptions.setMaximumExecutionTimeInMs(Integer)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
  name: "RequestOptions.getMaximumExecutionTimeInMs()"
  nameWithType: "RequestOptions.getMaximumExecutionTimeInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
- uid: "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
  name: "RequestOptions.getLocationMode()"
  nameWithType: "RequestOptions.getLocationMode()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
