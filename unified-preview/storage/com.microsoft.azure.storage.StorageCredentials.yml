### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.StorageCredentials"
  id: "StorageCredentials"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.StorageCredentials.StorageCredentials()"
  - "com.microsoft.azure.storage.StorageCredentials.getAccountName()"
  - "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()"
  - "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)"
  - "com.microsoft.azure.storage.StorageCredentials.toString(boolean)"
  - "com.microsoft.azure.storage.StorageCredentials.transformUri(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.StorageCredentials.transformUri(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.StorageCredentials.transformUri(java.net.URI)"
  - "com.microsoft.azure.storage.StorageCredentials.transformUri(java.net.URI,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(java.lang.String)"
  - "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(java.util.Map<java.lang.String,java.lang.String>)"
  langs:
  - "java"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref uid=\"com.microsoft.azure.storage.StorageCredentialsAccountAndKey\" data-throw-if-not-resolved=\"false\">StorageCredentialsAccountAndKey</xref>, <xref uid=\"com.microsoft.azure.storage.StorageCredentialsToken\" data-throw-if-not-resolved=\"false\">StorageCredentialsToken</xref>, and <xref uid=\"com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature\" data-throw-if-not-resolved=\"false\">StorageCredentialsSharedAccessSignature</xref> classes."
  syntax:
    content: "public abstract class StorageCredentials"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.StorageCredentials.StorageCredentials()"
  id: "StorageCredentials()"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "StorageCredentials()"
  nameWithType: "StorageCredentials.StorageCredentials()"
  fullName: "com.microsoft.azure.storage.StorageCredentials.StorageCredentials()"
  overload: "com.microsoft.azure.storage.StorageCredentials.StorageCredentials*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  syntax:
    content: "public StorageCredentials()"
- uid: "com.microsoft.azure.storage.StorageCredentials.getAccountName()"
  id: "getAccountName()"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "getAccountName()"
  nameWithType: "StorageCredentials.getAccountName()"
  fullName: "com.microsoft.azure.storage.StorageCredentials.getAccountName()"
  overload: "com.microsoft.azure.storage.StorageCredentials.getAccountName*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the associated account name for the credentials. This is null for anonymous and shared access signature credentials."
  syntax:
    content: "public String getAccountName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the associated account name for the credentials"
- uid: "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()"
  id: "isHttpsOnly()"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "isHttpsOnly()"
  nameWithType: "StorageCredentials.isHttpsOnly()"
  fullName: "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()"
  overload: "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets whether this `StorageCredentials` object only allows access via HTTPS."
  syntax:
    content: "public boolean isHttpsOnly()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> representing whether this <code>StorageCredentials</code>\n         object only allows access via HTTPS."
- uid: "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)"
  id: "setHttpsOnly(boolean)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "setHttpsOnly(boolean httpsOnly)"
  nameWithType: "StorageCredentials.setHttpsOnly(boolean httpsOnly)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean httpsOnly)"
  overload: "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets whether this `StorageCredentials` object only allows access via HTTPS."
  syntax:
    content: "protected void setHttpsOnly(boolean httpsOnly)"
    parameters:
    - id: "httpsOnly"
      type: "boolean"
      description: "A <code>boolean</code> representing whether this <code>StorageCredentials</code>\n            object only allows access via HTTPS."
- uid: "com.microsoft.azure.storage.StorageCredentials.toString(boolean)"
  id: "toString(boolean)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "toString(boolean exportSecrets)"
  nameWithType: "StorageCredentials.toString(boolean exportSecrets)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.toString(boolean exportSecrets)"
  overload: "com.microsoft.azure.storage.StorageCredentials.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a `String` that represents this instance."
  syntax:
    content: "public abstract String toString(boolean exportSecrets)"
    parameters:
    - id: "exportSecrets"
      type: "boolean"
      description: "<code>true</code> to include sensitive data in the return string; otherwise, <code>false</code>."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents this object, optionally including sensitive data."
- uid: "com.microsoft.azure.storage.StorageCredentials.transformUri(com.microsoft.azure.storage.StorageUri)"
  id: "transformUri(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "transformUri(StorageUri resourceUri)"
  nameWithType: "StorageCredentials.transformUri(StorageUri resourceUri)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri resourceUri)"
  overload: "com.microsoft.azure.storage.StorageCredentials.transformUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Transforms a resource URI into a shared access signature URI, by appending a shared access token."
  syntax:
    content: "public StorageUri transformUri(StorageUri resourceUri)"
    parameters:
    - id: "resourceUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the resource URI to be transformed."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the signature, including the resource URI and the\n         shared access token."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.StorageCredentials.transformUri(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.OperationContext)"
  id: "transformUri(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "transformUri(StorageUri resourceUri, OperationContext opContext)"
  nameWithType: "StorageCredentials.transformUri(StorageUri resourceUri, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri resourceUri, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.StorageCredentials.transformUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Transforms a resource URI into a shared access signature URI, by appending a shared access token and using the specified operation context."
  syntax:
    content: "public abstract StorageUri transformUri(StorageUri resourceUri, OperationContext opContext)"
    parameters:
    - id: "resourceUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the resource URI to be transformed."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the signature, including the resource URI and the\n         shared access token."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.StorageCredentials.transformUri(java.net.URI)"
  id: "transformUri(java.net.URI)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "transformUri(URI resourceUri)"
  nameWithType: "StorageCredentials.transformUri(URI resourceUri)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.transformUri(URI resourceUri)"
  overload: "com.microsoft.azure.storage.StorageCredentials.transformUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Transforms a resource URI into a shared access signature URI, by appending a shared access token."
  syntax:
    content: "public URI transformUri(URI resourceUri)"
    parameters:
    - id: "resourceUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the resource URI to be transformed."
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the signature, including the resource URI and the\n         shared access token."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.StorageCredentials.transformUri(java.net.URI,com.microsoft.azure.storage.OperationContext)"
  id: "transformUri(java.net.URI,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "transformUri(URI resourceUri, OperationContext opContext)"
  nameWithType: "StorageCredentials.transformUri(URI resourceUri, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.transformUri(URI resourceUri, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.StorageCredentials.transformUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Transforms a resource URI into a shared access signature URI, by appending a shared access token and using the specified operation context."
  syntax:
    content: "public abstract URI transformUri(URI resourceUri, OperationContext opContext)"
    parameters:
    - id: "resourceUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the resource URI to be transformed."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the signature, including the resource URI and the\n         shared access token."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(java.lang.String)"
  id: "tryParseCredentials(java.lang.String)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "tryParseCredentials(String connectionString)"
  nameWithType: "StorageCredentials.tryParseCredentials(String connectionString)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(String connectionString)"
  overload: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Tries to determine the storage credentials from a connection string.\n\nThe format for the connection string is in the pattern \"*keyname=value*\". Multiple key/value pairs can be separated by a semi-colon, for example, \"*keyname1=value1;keyname2=value2*\". Either include an account name with an account key or a shared access signature. If you use an account name and account key, do not include a shared access signature, and vice versa.\n\nThe same connection string can be used as for <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.parse(java.lang.String)\" data-throw-if-not-resolved=\"false\">CloudStorageAccount#parse(String)</xref> but here only the account name, account key, and sas key/value pairs will be examined."
  syntax:
    content: "public static StorageCredentials tryParseCredentials(String connectionString)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "A <code>String</code> that contains the key/value pairs that represent the storage credentials."
    return:
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object representing the storage credentials determined from the connection\n         string."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If the account key specified in <code>connectionString</code> is not valid."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If the account key specified in <code>connectionString</code> is not valid."
- uid: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(java.util.Map<java.lang.String,java.lang.String>)"
  id: "tryParseCredentials(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.storage.StorageCredentials"
  langs:
  - "java"
  name: "tryParseCredentials(Map<String,String> settings)"
  nameWithType: "StorageCredentials.tryParseCredentials(Map<String,String> settings)"
  fullName: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(Map<String,String> settings)"
  overload: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Tries to determine the storage credentials from a collection of name/value pairs."
  syntax:
    content: "protected static StorageCredentials tryParseCredentials(Map<String,String> settings)"
    parameters:
    - id: "settings"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "A <code>Map</code> object of the name/value pairs that represent the settings to use to configure\n            the credentials.\n            <p>\n            Either include an account name with an account key (specifying values for\n            <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME\" data-throw-if-not-resolved=\"false\">CloudStorageAccount#ACCOUNT_NAME_NAME</xref> and <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME\" data-throw-if-not-resolved=\"false\">CloudStorageAccount#ACCOUNT_KEY_NAME</xref> ), or a\n            shared access signature (specifying a value for\n            <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME\" data-throw-if-not-resolved=\"false\">CloudStorageAccount#SHARED_ACCESS_SIGNATURE_NAME</xref> ). If you use an account name and account\n            key, do not include a shared access signature, and vice versa."
    return:
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object representing the storage credentials determined from the name/value\n         pairs."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If the key value specified for <xref uid=\"CloudStorageAccount#ACCOUNT_KEY_NAME\" data-throw-if-not-resolved=\"false\">CloudStorageAccount#ACCOUNT_KEY_NAME</xref> is not a valid\n             Base64-encoded string."
references:
- uid: "com.microsoft.azure.storage.StorageCredentials.StorageCredentials*"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials.StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials.StorageCredentials"
  package: "com.microsoft.azure.storage"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials*"
  name: "tryParseCredentials"
  nameWithType: "StorageCredentials.tryParseCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials.tryParseCredentials"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly*"
  name: "isHttpsOnly"
  nameWithType: "StorageCredentials.isHttpsOnly"
  fullName: "com.microsoft.azure.storage.StorageCredentials.isHttpsOnly"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageCredentials.getAccountName*"
  name: "getAccountName"
  nameWithType: "StorageCredentials.getAccountName"
  fullName: "com.microsoft.azure.storage.StorageCredentials.getAccountName"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly*"
  name: "setHttpsOnly"
  nameWithType: "StorageCredentials.setHttpsOnly"
  fullName: "com.microsoft.azure.storage.StorageCredentials.setHttpsOnly"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageCredentials.toString*"
  name: "toString"
  nameWithType: "StorageCredentials.toString"
  fullName: "com.microsoft.azure.storage.StorageCredentials.toString"
  package: "com.microsoft.azure.storage"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.StorageCredentials.transformUri*"
  name: "transformUri"
  nameWithType: "StorageCredentials.transformUri"
  fullName: "com.microsoft.azure.storage.StorageCredentials.transformUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
