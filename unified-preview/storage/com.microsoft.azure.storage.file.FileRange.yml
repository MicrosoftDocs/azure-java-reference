### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.file.FileRange"
  id: "FileRange"
  parent: "com.microsoft.azure.storage.file"
  children:
  - "com.microsoft.azure.storage.file.FileRange.FileRange(long,long)"
  - "com.microsoft.azure.storage.file.FileRange.getEndOffset()"
  - "com.microsoft.azure.storage.file.FileRange.getStartOffset()"
  - "com.microsoft.azure.storage.file.FileRange.setEndOffset(long)"
  - "com.microsoft.azure.storage.file.FileRange.setStartOffset(long)"
  - "com.microsoft.azure.storage.file.FileRange.toString()"
  langs:
  - "java"
  name: "FileRange"
  nameWithType: "FileRange"
  fullName: "com.microsoft.azure.storage.file.FileRange"
  type: "Class"
  package: "com.microsoft.azure.storage.file"
  summary: "Represents a range of bytes in a file."
  syntax:
    content: "public final class FileRange"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.file.FileRange.FileRange(long,long)"
  id: "FileRange(long,long)"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "FileRange(long start, long end)"
  nameWithType: "FileRange.FileRange(long start, long end)"
  fullName: "com.microsoft.azure.storage.file.FileRange.FileRange(long start, long end)"
  overload: "com.microsoft.azure.storage.file.FileRange.FileRange*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `FileRange` class."
  syntax:
    content: "public FileRange(long start, long end)"
    parameters:
    - id: "start"
      type: "long"
      description: "A <code>long</code> which represents the starting offset."
    - id: "end"
      type: "long"
      description: "A <code>long</code> which represents the ending offset."
- uid: "com.microsoft.azure.storage.file.FileRange.getEndOffset()"
  id: "getEndOffset()"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "getEndOffset()"
  nameWithType: "FileRange.getEndOffset()"
  fullName: "com.microsoft.azure.storage.file.FileRange.getEndOffset()"
  overload: "com.microsoft.azure.storage.file.FileRange.getEndOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Gets the ending offset."
  syntax:
    content: "public long getEndOffset()"
    return:
      type: "long"
      description: "A <code>long</code> which represents the ending offset."
- uid: "com.microsoft.azure.storage.file.FileRange.getStartOffset()"
  id: "getStartOffset()"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "getStartOffset()"
  nameWithType: "FileRange.getStartOffset()"
  fullName: "com.microsoft.azure.storage.file.FileRange.getStartOffset()"
  overload: "com.microsoft.azure.storage.file.FileRange.getStartOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Gets the starting offset."
  syntax:
    content: "public long getStartOffset()"
    return:
      type: "long"
      description: "A <code>long</code> which represents the starting offset."
- uid: "com.microsoft.azure.storage.file.FileRange.setEndOffset(long)"
  id: "setEndOffset(long)"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "setEndOffset(long endOffset)"
  nameWithType: "FileRange.setEndOffset(long endOffset)"
  fullName: "com.microsoft.azure.storage.file.FileRange.setEndOffset(long endOffset)"
  overload: "com.microsoft.azure.storage.file.FileRange.setEndOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Sets the ending offset."
  syntax:
    content: "public void setEndOffset(long endOffset)"
    parameters:
    - id: "endOffset"
      type: "long"
      description: "A <code>long</code> which specifies the ending offset."
- uid: "com.microsoft.azure.storage.file.FileRange.setStartOffset(long)"
  id: "setStartOffset(long)"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "setStartOffset(long startOffset)"
  nameWithType: "FileRange.setStartOffset(long startOffset)"
  fullName: "com.microsoft.azure.storage.file.FileRange.setStartOffset(long startOffset)"
  overload: "com.microsoft.azure.storage.file.FileRange.setStartOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Sets the starting offset."
  syntax:
    content: "public void setStartOffset(long startOffset)"
    parameters:
    - id: "startOffset"
      type: "long"
      description: "A <code>long</code> which specifies the starting offset."
- uid: "com.microsoft.azure.storage.file.FileRange.toString()"
  id: "toString()"
  parent: "com.microsoft.azure.storage.file.FileRange"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "FileRange.toString()"
  fullName: "com.microsoft.azure.storage.file.FileRange.toString()"
  overload: "com.microsoft.azure.storage.file.FileRange.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the content of the file range as a string."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the contents of the file range."
references:
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.file.FileRange.FileRange*"
  name: "FileRange"
  nameWithType: "FileRange.FileRange"
  fullName: "com.microsoft.azure.storage.file.FileRange.FileRange"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileRange.getEndOffset*"
  name: "getEndOffset"
  nameWithType: "FileRange.getEndOffset"
  fullName: "com.microsoft.azure.storage.file.FileRange.getEndOffset"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileRange.getStartOffset*"
  name: "getStartOffset"
  nameWithType: "FileRange.getStartOffset"
  fullName: "com.microsoft.azure.storage.file.FileRange.getStartOffset"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileRange.setEndOffset*"
  name: "setEndOffset"
  nameWithType: "FileRange.setEndOffset"
  fullName: "com.microsoft.azure.storage.file.FileRange.setEndOffset"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileRange.setStartOffset*"
  name: "setStartOffset"
  nameWithType: "FileRange.setStartOffset"
  fullName: "com.microsoft.azure.storage.file.FileRange.setStartOffset"
  package: "com.microsoft.azure.storage.file"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.file.FileRange.toString*"
  name: "toString"
  nameWithType: "FileRange.toString"
  fullName: "com.microsoft.azure.storage.file.FileRange.toString"
  package: "com.microsoft.azure.storage.file"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
