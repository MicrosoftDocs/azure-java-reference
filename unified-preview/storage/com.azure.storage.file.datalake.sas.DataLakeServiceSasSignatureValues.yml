### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  id: "DataLakeServiceSasSignatureValues"
  parent: "com.azure.storage.file.datalake.sas"
  children:
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.lang.String,com.azure.storage.common.sas.SasProtocol,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.sas.SasIpRange,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.time.OffsetDateTime,java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.common.StorageSharedKeyCredential)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.file.datalake.models.UserDelegationKey,java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion()"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName(java.lang.String)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.FileSystemSasPermission)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.PathSasPermission)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol(com.azure.storage.common.sas.SasProtocol)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange(com.azure.storage.common.sas.SasIpRange)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  - "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(java.lang.String)"
  langs:
  - "java"
  name: "DataLakeServiceSasSignatureValues"
  nameWithType: "DataLakeServiceSasSignatureValues"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  type: "Class"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Used to generate a Shared Access Signature (SAS) for an Azure Data Lake Storage service. Once all the values here are set, call <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.common.StorageSharedKeyCredential)\" data-throw-if-not-resolved=\"false\">generateSasQueryParameters(StorageSharedKeyCredential)</xref> or <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.file.datalake.models.UserDelegationKey,java.lang.String)\" data-throw-if-not-resolved=\"false\">generateSasQueryParameters(UserDelegationKey, String)</xref> to obtain a representation of the SAS which can be applied to dfs urls.\n\n**Generating SAS query parameters with <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>**\n\nThe following code generates SAS query parameters for an Azure storage path.\n\n\\{@codesnippet com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters\\#StorageSharedKeyCredential\\}\n\n**Generating SAS query parameters with <xref uid=\"com.azure.storage.file.datalake.models.UserDelegationKey\" data-throw-if-not-resolved=\"false\">UserDelegationKey</xref>**\n\nThe following sample generates SAS query parameters for an Azure storage file system.\n\n\\{@codesnippet com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters\\#UserDelegationKey-String\\}"
  syntax:
    content: "public final class DataLakeServiceSasSignatureValues"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues()"
  id: "DataLakeServiceSasSignatureValues()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "DataLakeServiceSasSignatureValues()"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Creates an object with empty values for all fields."
  syntax:
    content: "public DataLakeServiceSasSignatureValues()"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.lang.String)"
  id: "DataLakeServiceSasSignatureValues(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "DataLakeServiceSasSignatureValues(String identifier)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String identifier)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String identifier)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Creates an object with the specified identifier"
  syntax:
    content: " DataLakeServiceSasSignatureValues(String identifier)"
    parameters:
    - id: "identifier"
      type: "java.lang.String"
      description: "Identifier for the SAS"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.lang.String,com.azure.storage.common.sas.SasProtocol,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.sas.SasIpRange,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "DataLakeServiceSasSignatureValues(java.lang.String,com.azure.storage.common.sas.SasProtocol,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.sas.SasIpRange,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "DataLakeServiceSasSignatureValues(String version, SasProtocol sasProtocol, OffsetDateTime startTime, OffsetDateTime expiryTime, String permission, SasIpRange sasIpRange, String identifier, String cacheControl, String contentDisposition, String contentEncoding, String contentLanguage, String contentType)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String version, SasProtocol sasProtocol, OffsetDateTime startTime, OffsetDateTime expiryTime, String permission, SasIpRange sasIpRange, String identifier, String cacheControl, String contentDisposition, String contentEncoding, String contentLanguage, String contentType)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(String version, SasProtocol sasProtocol, OffsetDateTime startTime, OffsetDateTime expiryTime, String permission, SasIpRange sasIpRange, String identifier, String cacheControl, String contentDisposition, String contentEncoding, String contentLanguage, String contentType)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Creates an object with specified values."
  syntax:
    content: "public DataLakeServiceSasSignatureValues(String version, SasProtocol sasProtocol, OffsetDateTime startTime, OffsetDateTime expiryTime, String permission, SasIpRange sasIpRange, String identifier, String cacheControl, String contentDisposition, String contentEncoding, String contentLanguage, String contentType)"
    parameters:
    - id: "version"
      type: "java.lang.String"
      description: "The version of the service this SAS will target. If not specified, it will default to the version\n    targeted by the library."
    - id: "sasProtocol"
      type: "com.azure.storage.common.sas.SasProtocol"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasProtocol</xref> which determines the protocols allowed by the SAS."
    - id: "startTime"
      type: "java.time.OffsetDateTime"
      description: "When the SAS will take effect."
    - id: "expiryTime"
      type: "java.time.OffsetDateTime"
      description: "The time after which the SAS will no longer work."
    - id: "permission"
      type: "java.lang.String"
      description: "The permissions string allowed by the SAS."
    - id: "sasIpRange"
      type: "com.azure.storage.common.sas.SasIpRange"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasIpRange</xref> which determines the IP ranges that are allowed to use the SAS."
    - id: "identifier"
      type: "java.lang.String"
      description: "The name of the access policy on the container this SAS references if any."
    - id: "cacheControl"
      type: "java.lang.String"
      description: "The cache-control header for the SAS."
    - id: "contentDisposition"
      type: "java.lang.String"
      description: "The content-disposition header for the SAS."
    - id: "contentEncoding"
      type: "java.lang.String"
      description: "The content-encoding header for the SAS."
    - id: "contentLanguage"
      type: "java.lang.String"
      description: "The content-language header for the SAS."
    - id: "contentType"
      type: "java.lang.String"
      description: "The content-type header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(java.time.OffsetDateTime,java.lang.String)"
  id: "DataLakeServiceSasSignatureValues(java.time.OffsetDateTime,java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, String permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, String permissions)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, String permissions)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Creates an object with the specified expiry time and permissions"
  syntax:
    content: " DataLakeServiceSasSignatureValues(OffsetDateTime expiryTime, String permissions)"
    parameters:
    - id: "expiryTime"
      type: "java.time.OffsetDateTime"
      description: "Time the SAS becomes valid"
    - id: "permissions"
      type: "java.lang.String"
      description: "Permissions granted by the SAS"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.common.StorageSharedKeyCredential)"
  id: "generateSasQueryParameters(com.azure.storage.common.StorageSharedKeyCredential)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "generateSasQueryParameters(StorageSharedKeyCredential storageSharedKeyCredentials)"
  nameWithType: "DataLakeServiceSasSignatureValues.generateSasQueryParameters(StorageSharedKeyCredential storageSharedKeyCredentials)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(StorageSharedKeyCredential storageSharedKeyCredentials)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Uses an account's shared key credential to sign these signature values to produce the proper SAS query parameters.\n\n**Notes on SAS generation**\n\n *  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(java.lang.String)\" data-throw-if-not-resolved=\"false\">version</xref> is not set, the <xref uid=\"DataLakeServiceVersion#getLatest()\" data-throw-if-not-resolved=\"false\">latest\n     service version</xref> is used.\n *  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">identifier</xref> is set, <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\">expiryTime</xref> and permissions should not be set. These values are inherited from the stored access policy.\n *  Otherwise, <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\">expiryTime</xref> and <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()\" data-throw-if-not-resolved=\"false\">permissions</xref> must be set.\n\nThe type of SAS query parameters returned depends on the following:\n\n1.  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()\" data-throw-if-not-resolved=\"false\">#getPathName()</xref> is not set, **file system SAS** query parameters are returned.\n2.  If only <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()\" data-throw-if-not-resolved=\"false\">#getPathName()</xref> is set, **path SAS** query parameters are returned.\n\nSee class level JavaDocs for code snippets."
  syntax:
    content: "public DataLakeServiceSasQueryParameters generateSasQueryParameters(StorageSharedKeyCredential storageSharedKeyCredentials)"
    parameters:
    - id: "storageSharedKeyCredentials"
      type: "com.azure.storage.common.StorageSharedKeyCredential"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref> object used to sign the SAS values."
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters"
      description: "<xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters\" data-throw-if-not-resolved=\"false\">DataLakeServiceSasQueryParameters</xref>"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(com.azure.storage.file.datalake.models.UserDelegationKey,java.lang.String)"
  id: "generateSasQueryParameters(com.azure.storage.file.datalake.models.UserDelegationKey,java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "generateSasQueryParameters(UserDelegationKey delegationKey, String accountName)"
  nameWithType: "DataLakeServiceSasSignatureValues.generateSasQueryParameters(UserDelegationKey delegationKey, String accountName)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters(UserDelegationKey delegationKey, String accountName)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Uses a user delegation key to sign these signature values to produce the proper SAS query parameters.\n\n**Notes on SAS generation**\n\n *  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(java.lang.String)\" data-throw-if-not-resolved=\"false\">version</xref> is not set, the <xref uid=\"DataLakeServiceVersion#getLatest()\" data-throw-if-not-resolved=\"false\">latest\n     service version</xref> is used.\n *  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(java.lang.String)\" data-throw-if-not-resolved=\"false\">identifier</xref> is set, <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\">expiryTime</xref> and permissions should not be set. These values are inherited from the stored access policy.\n *  Otherwise, <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)\" data-throw-if-not-resolved=\"false\">expiryTime</xref> and <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()\" data-throw-if-not-resolved=\"false\">permissions</xref> must be set.\n\nThe type of SAS query parameters returned depends on the following:\n\n1.  If <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()\" data-throw-if-not-resolved=\"false\">#getPathName()</xref> is not set, **file system SAS** query parameters are returned.\n2.  If only <xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()\" data-throw-if-not-resolved=\"false\">#getPathName()</xref> is set, **path SAS** query parameters are returned.\n\nSee class level JavaDocs for code snippets."
  syntax:
    content: "public DataLakeServiceSasQueryParameters generateSasQueryParameters(UserDelegationKey delegationKey, String accountName)"
    parameters:
    - id: "delegationKey"
      type: "com.azure.storage.file.datalake.models.UserDelegationKey"
      description: "A <xref uid=\"com.azure.storage.file.datalake.models.UserDelegationKey\" data-throw-if-not-resolved=\"false\">UserDelegationKey</xref> object used to sign the SAS values."
    - id: "accountName"
      type: "java.lang.String"
      description: "Azure Storage account name to generate SAS for."
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters"
      description: "<xref uid=\"com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters\" data-throw-if-not-resolved=\"false\">DataLakeServiceSasQueryParameters</xref>"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl()"
  id: "getCacheControl()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getCacheControl()"
  nameWithType: "DataLakeServiceSasSignatureValues.getCacheControl()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getCacheControl()"
    return:
      type: "java.lang.String"
      description: "the cache-control header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition()"
  id: "getContentDisposition()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getContentDisposition()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentDisposition()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getContentDisposition()"
    return:
      type: "java.lang.String"
      description: "the content-disposition header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding()"
  id: "getContentEncoding()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getContentEncoding()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentEncoding()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getContentEncoding()"
    return:
      type: "java.lang.String"
      description: "the content-encoding header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage()"
  id: "getContentLanguage()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getContentLanguage()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentLanguage()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getContentLanguage()"
    return:
      type: "java.lang.String"
      description: "the content-language header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType()"
  id: "getContentType()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getContentType()"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentType()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getContentType()"
    return:
      type: "java.lang.String"
      description: "the content-type header for the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime()"
  id: "getExpiryTime()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getExpiryTime()"
  nameWithType: "DataLakeServiceSasSignatureValues.getExpiryTime()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public OffsetDateTime getExpiryTime()"
    return:
      type: "java.time.OffsetDateTime"
      description: "the time after which the SAS will no longer work."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName()"
  id: "getFileSystemName()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getFileSystemName()"
  nameWithType: "DataLakeServiceSasSignatureValues.getFileSystemName()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Gets the name of the file system the SAS user may access."
  syntax:
    content: "public String getFileSystemName()"
    return:
      type: "java.lang.String"
      description: "The name of the file system the SAS user may access."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier()"
  id: "getIdentifier()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getIdentifier()"
  nameWithType: "DataLakeServiceSasSignatureValues.getIdentifier()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getIdentifier()"
    return:
      type: "java.lang.String"
      description: "the name of the access policy on the file system this SAS references if any. Please see\n <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\">here</a>\n for more information."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()"
  id: "getPathName()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getPathName()"
  nameWithType: "DataLakeServiceSasSignatureValues.getPathName()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Decodes and gets the name of the path the SAS user may access. `null` or an empty string is returned when a creating a file system SAS."
  syntax:
    content: "public String getPathName()"
    return:
      type: "java.lang.String"
      description: "The decoded name of the path the SAS user may access. <code>null</code> or an empty string is returned when a\n creating a file system SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()"
  id: "getPermissions()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getPermissions()"
  nameWithType: "DataLakeServiceSasSignatureValues.getPermissions()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getPermissions()"
    return:
      type: "java.lang.String"
      description: "the permissions string allowed by the SAS. Please refer to either <xref uid=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission\" data-throw-if-not-resolved=\"false\">FileSystemSasPermission</xref> or\n <xref uid=\"com.azure.storage.file.datalake.sas.PathSasPermission\" data-throw-if-not-resolved=\"false\">PathSasPermission</xref> depending on the resource being accessed for help determining the permissions allowed."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol()"
  id: "getProtocol()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getProtocol()"
  nameWithType: "DataLakeServiceSasSignatureValues.getProtocol()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public SasProtocol getProtocol()"
    return:
      type: "com.azure.storage.common.sas.SasProtocol"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasProtocol</xref> which determines the protocols allowed by the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange()"
  id: "getSasIpRange()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getSasIpRange()"
  nameWithType: "DataLakeServiceSasSignatureValues.getSasIpRange()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public SasIpRange getSasIpRange()"
    return:
      type: "com.azure.storage.common.sas.SasIpRange"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasIpRange</xref> which determines the IP ranges that are allowed to use the SAS."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime()"
  id: "getStartTime()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getStartTime()"
  nameWithType: "DataLakeServiceSasSignatureValues.getStartTime()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public OffsetDateTime getStartTime()"
    return:
      type: "java.time.OffsetDateTime"
      description: "when the SAS will take effect."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion()"
  id: "getVersion()"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "getVersion()"
  nameWithType: "DataLakeServiceSasSignatureValues.getVersion()"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion()"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  syntax:
    content: "public String getVersion()"
    return:
      type: "java.lang.String"
      description: "the version of the service this SAS will target. If not specified, it will default to the version\n targeted by the library."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl(java.lang.String)"
  id: "setCacheControl(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setCacheControl(String cacheControl)"
  nameWithType: "DataLakeServiceSasSignatureValues.setCacheControl(String cacheControl)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl(String cacheControl)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the cache-control header for the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setCacheControl(String cacheControl)"
    parameters:
    - id: "cacheControl"
      type: "java.lang.String"
      description: "Cache-Control header value"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition(java.lang.String)"
  id: "setContentDisposition(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setContentDisposition(String contentDisposition)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentDisposition(String contentDisposition)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition(String contentDisposition)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the content-disposition header for the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setContentDisposition(String contentDisposition)"
    parameters:
    - id: "contentDisposition"
      type: "java.lang.String"
      description: "Content-Disposition header value"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding(java.lang.String)"
  id: "setContentEncoding(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setContentEncoding(String contentEncoding)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentEncoding(String contentEncoding)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding(String contentEncoding)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the content-encoding header for the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setContentEncoding(String contentEncoding)"
    parameters:
    - id: "contentEncoding"
      type: "java.lang.String"
      description: "Content-Encoding header value"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage(java.lang.String)"
  id: "setContentLanguage(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setContentLanguage(String contentLanguage)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentLanguage(String contentLanguage)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage(String contentLanguage)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the content-language header for the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setContentLanguage(String contentLanguage)"
    parameters:
    - id: "contentLanguage"
      type: "java.lang.String"
      description: "Content-Language header value"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType(java.lang.String)"
  id: "setContentType(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setContentType(String contentType)"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentType(String contentType)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType(String contentType)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the content-type header for the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setContentType(String contentType)"
    parameters:
    - id: "contentType"
      type: "java.lang.String"
      description: "Content-Type header value"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  id: "setExpiryTime(java.time.OffsetDateTime)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setExpiryTime(OffsetDateTime expiryTime)"
  nameWithType: "DataLakeServiceSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the time after which the SAS will no longer work."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setExpiryTime(OffsetDateTime expiryTime)"
    parameters:
    - id: "expiryTime"
      type: "java.time.OffsetDateTime"
      description: "When the SAS will no longer work"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName(java.lang.String)"
  id: "setFileSystemName(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setFileSystemName(String fileSystemName)"
  nameWithType: "DataLakeServiceSasSignatureValues.setFileSystemName(String fileSystemName)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName(String fileSystemName)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the container the SAS user may access."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setFileSystemName(String fileSystemName)"
    parameters:
    - id: "fileSystemName"
      type: "java.lang.String"
      description: "The name of the file system."
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "The updated DataLakeServiceSasSignatureValues object."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(java.lang.String)"
  id: "setIdentifier(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setIdentifier(String identifier)"
  nameWithType: "DataLakeServiceSasSignatureValues.setIdentifier(String identifier)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier(String identifier)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the name of the access policy on the file system this SAS references if any. Please see [here][] for more information.\n\n\n[here]: https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy"
  syntax:
    content: "public DataLakeServiceSasSignatureValues setIdentifier(String identifier)"
    parameters:
    - id: "identifier"
      type: "java.lang.String"
      description: "Name of the access policy"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName(java.lang.String)"
  id: "setPathName(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setPathName(String pathName)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPathName(String pathName)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName(String pathName)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the path the SAS user may access. Use `null` or an empty string to create a file system SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setPathName(String pathName)"
    parameters:
    - id: "pathName"
      type: "java.lang.String"
      description: "The name of the path. Use <code>null</code> or an empty string to create a file system SAS."
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "The updated DataLakeServiceSasSignatureValues object."
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.FileSystemSasPermission)"
  id: "setPermissions(com.azure.storage.file.datalake.sas.FileSystemSasPermission)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setPermissions(FileSystemSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPermissions(FileSystemSasPermission permissions)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(FileSystemSasPermission permissions)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the File System permissions allowed by the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setPermissions(FileSystemSasPermission permissions)"
    parameters:
    - id: "permissions"
      type: "com.azure.storage.file.datalake.sas.FileSystemSasPermission"
      description: "<xref uid=\"com.azure.storage.file.datalake.sas.FileSystemSasPermission\" data-throw-if-not-resolved=\"false\">FileSystemSasPermission</xref>"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(com.azure.storage.file.datalake.sas.PathSasPermission)"
  id: "setPermissions(com.azure.storage.file.datalake.sas.PathSasPermission)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setPermissions(PathSasPermission permissions)"
  nameWithType: "DataLakeServiceSasSignatureValues.setPermissions(PathSasPermission permissions)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions(PathSasPermission permissions)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the Path permissions allowed by the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setPermissions(PathSasPermission permissions)"
    parameters:
    - id: "permissions"
      type: "com.azure.storage.file.datalake.sas.PathSasPermission"
      description: "<xref uid=\"com.azure.storage.file.datalake.sas.PathSasPermission\" data-throw-if-not-resolved=\"false\">PathSasPermission</xref>"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol(com.azure.storage.common.sas.SasProtocol)"
  id: "setProtocol(com.azure.storage.common.sas.SasProtocol)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setProtocol(SasProtocol protocol)"
  nameWithType: "DataLakeServiceSasSignatureValues.setProtocol(SasProtocol protocol)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol(SasProtocol protocol)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasProtocol</xref> which determines the protocols allowed by the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setProtocol(SasProtocol protocol)"
    parameters:
    - id: "protocol"
      type: "com.azure.storage.common.sas.SasProtocol"
      description: "Protocol for the SAS"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange(com.azure.storage.common.sas.SasIpRange)"
  id: "setSasIpRange(com.azure.storage.common.sas.SasIpRange)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setSasIpRange(SasIpRange sasIpRange)"
  nameWithType: "DataLakeServiceSasSignatureValues.setSasIpRange(SasIpRange sasIpRange)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange(SasIpRange sasIpRange)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">SasIpRange</xref> which determines the IP ranges that are allowed to use the SAS."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setSasIpRange(SasIpRange sasIpRange)"
    parameters:
    - id: "sasIpRange"
      type: "com.azure.storage.common.sas.SasIpRange"
      description: "Allowed IP range to set"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  id: "setStartTime(java.time.OffsetDateTime)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "DataLakeServiceSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets when the SAS will take effect."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setStartTime(OffsetDateTime startTime)"
    parameters:
    - id: "startTime"
      type: "java.time.OffsetDateTime"
      description: "When the SAS takes effect"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(java.lang.String)"
  id: "setVersion(java.lang.String)"
  parent: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
  langs:
  - "java"
  name: "setVersion(String version)"
  nameWithType: "DataLakeServiceSasSignatureValues.setVersion(String version)"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion(String version)"
  overload: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion*"
  type: "Method"
  package: "com.azure.storage.file.datalake.sas"
  summary: "Sets the version of the service this SAS will target. If not specified, it will default to the version targeted by the library."
  syntax:
    content: "public DataLakeServiceSasSignatureValues setVersion(String version)"
    parameters:
    - id: "version"
      type: "java.lang.String"
      description: "Version to target"
    return:
      type: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues"
      description: "the updated DataLakeServiceSasSignatureValues object"
references:
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues*"
  name: "DataLakeServiceSasSignatureValues"
  nameWithType: "DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.DataLakeServiceSasSignatureValues"
  package: "com.azure.storage.file.datalake.sas"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.sas.SasProtocol"
  spec.java:
  - uid: "com.azure.storage.common.sas.SasProtocol"
    name: "SasProtocol"
    fullName: "com.azure.storage.common.sas.SasProtocol"
- uid: "com.azure.storage.common.sas.SasIpRange"
  spec.java:
  - uid: "com.azure.storage.common.sas.SasIpRange"
    name: "SasIpRange"
    fullName: "com.azure.storage.common.sas.SasIpRange"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion*"
  name: "getVersion"
  nameWithType: "DataLakeServiceSasSignatureValues.getVersion"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getVersion"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion*"
  name: "setVersion"
  nameWithType: "DataLakeServiceSasSignatureValues.setVersion"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setVersion"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol*"
  name: "getProtocol"
  nameWithType: "DataLakeServiceSasSignatureValues.getProtocol"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getProtocol"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol*"
  name: "setProtocol"
  nameWithType: "DataLakeServiceSasSignatureValues.setProtocol"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setProtocol"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime*"
  name: "getStartTime"
  nameWithType: "DataLakeServiceSasSignatureValues.getStartTime"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getStartTime"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime*"
  name: "setStartTime"
  nameWithType: "DataLakeServiceSasSignatureValues.setStartTime"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setStartTime"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime*"
  name: "getExpiryTime"
  nameWithType: "DataLakeServiceSasSignatureValues.getExpiryTime"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getExpiryTime"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime*"
  name: "setExpiryTime"
  nameWithType: "DataLakeServiceSasSignatureValues.setExpiryTime"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setExpiryTime"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions*"
  name: "getPermissions"
  nameWithType: "DataLakeServiceSasSignatureValues.getPermissions"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPermissions"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.PathSasPermission"
  name: "PathSasPermission"
  nameWithType: "PathSasPermission"
  fullName: "com.azure.storage.file.datalake.sas.PathSasPermission"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions*"
  name: "setPermissions"
  nameWithType: "DataLakeServiceSasSignatureValues.setPermissions"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPermissions"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.FileSystemSasPermission"
  name: "FileSystemSasPermission"
  nameWithType: "FileSystemSasPermission"
  fullName: "com.azure.storage.file.datalake.sas.FileSystemSasPermission"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange*"
  name: "getSasIpRange"
  nameWithType: "DataLakeServiceSasSignatureValues.getSasIpRange"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getSasIpRange"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange*"
  name: "setSasIpRange"
  nameWithType: "DataLakeServiceSasSignatureValues.setSasIpRange"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setSasIpRange"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName*"
  name: "getFileSystemName"
  nameWithType: "DataLakeServiceSasSignatureValues.getFileSystemName"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getFileSystemName"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName*"
  name: "setFileSystemName"
  nameWithType: "DataLakeServiceSasSignatureValues.setFileSystemName"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setFileSystemName"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName*"
  name: "getPathName"
  nameWithType: "DataLakeServiceSasSignatureValues.getPathName"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getPathName"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName*"
  name: "setPathName"
  nameWithType: "DataLakeServiceSasSignatureValues.setPathName"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setPathName"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier*"
  name: "getIdentifier"
  nameWithType: "DataLakeServiceSasSignatureValues.getIdentifier"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getIdentifier"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier*"
  name: "setIdentifier"
  nameWithType: "DataLakeServiceSasSignatureValues.setIdentifier"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setIdentifier"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl*"
  name: "getCacheControl"
  nameWithType: "DataLakeServiceSasSignatureValues.getCacheControl"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getCacheControl"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl*"
  name: "setCacheControl"
  nameWithType: "DataLakeServiceSasSignatureValues.setCacheControl"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setCacheControl"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition*"
  name: "getContentDisposition"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentDisposition"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentDisposition"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition*"
  name: "setContentDisposition"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentDisposition"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentDisposition"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding*"
  name: "getContentEncoding"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentEncoding"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentEncoding"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding*"
  name: "setContentEncoding"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentEncoding"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentEncoding"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage*"
  name: "getContentLanguage"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentLanguage"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentLanguage"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage*"
  name: "setContentLanguage"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentLanguage"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentLanguage"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType*"
  name: "getContentType"
  nameWithType: "DataLakeServiceSasSignatureValues.getContentType"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.getContentType"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType*"
  name: "setContentType"
  nameWithType: "DataLakeServiceSasSignatureValues.setContentType"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.setContentType"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.common.StorageSharedKeyCredential"
  spec.java:
  - uid: "com.azure.storage.common.StorageSharedKeyCredential"
    name: "StorageSharedKeyCredential"
    fullName: "com.azure.storage.common.StorageSharedKeyCredential"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters"
  name: "DataLakeServiceSasQueryParameters"
  nameWithType: "DataLakeServiceSasQueryParameters"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasQueryParameters"
- uid: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters*"
  name: "generateSasQueryParameters"
  nameWithType: "DataLakeServiceSasSignatureValues.generateSasQueryParameters"
  fullName: "com.azure.storage.file.datalake.sas.DataLakeServiceSasSignatureValues.generateSasQueryParameters"
  package: "com.azure.storage.file.datalake.sas"
- uid: "com.azure.storage.file.datalake.models.UserDelegationKey"
  name: "UserDelegationKey"
  nameWithType: "UserDelegationKey"
  fullName: "com.azure.storage.file.datalake.models.UserDelegationKey"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
