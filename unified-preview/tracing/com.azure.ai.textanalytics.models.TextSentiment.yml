### YamlMime:ManagedReference
items:
- uid: "com.azure.ai.textanalytics.models.TextSentiment"
  id: "TextSentiment"
  parent: "com.azure.ai.textanalytics.models"
  children:
  - "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment(com.azure.ai.textanalytics.models.TextSentimentClass,double,double,double,int,int)"
  - "com.azure.ai.textanalytics.models.TextSentiment.getLength()"
  - "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore()"
  - "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore()"
  - "com.azure.ai.textanalytics.models.TextSentiment.getOffset()"
  - "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore()"
  - "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass()"
  langs:
  - "java"
  name: "TextSentiment"
  nameWithType: "TextSentiment"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment"
  type: "Class"
  package: "com.azure.ai.textanalytics.models"
  summary: "The TextSentiment model."
  syntax:
    content: "public final class TextSentiment"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment(com.azure.ai.textanalytics.models.TextSentimentClass,double,double,double,int,int)"
  id: "TextSentiment(com.azure.ai.textanalytics.models.TextSentimentClass,double,double,double,int,int)"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "TextSentiment(TextSentimentClass textSentimentClass, double negativeScore, double neutralScore, double positiveScore, int length, int offset)"
  nameWithType: "TextSentiment.TextSentiment(TextSentimentClass textSentimentClass, double negativeScore, double neutralScore, double positiveScore, int length, int offset)"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment(TextSentimentClass textSentimentClass, double negativeScore, double neutralScore, double positiveScore, int length, int offset)"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment*"
  type: "Constructor"
  package: "com.azure.ai.textanalytics.models"
  summary: "Creates a `TextSentiment` model that describes the sentiment analysis of text"
  syntax:
    content: "public TextSentiment(TextSentimentClass textSentimentClass, double negativeScore, double neutralScore, double positiveScore, int length, int offset)"
    parameters:
    - id: "textSentimentClass"
      type: "com.azure.ai.textanalytics.models.TextSentimentClass"
      description: "text sentiment class of text"
    - id: "negativeScore"
      type: "double"
      description: "negative score value, range in between 0 and 1.0"
    - id: "neutralScore"
      type: "double"
      description: "neutral score value, range in between 0 and 1.0"
    - id: "positiveScore"
      type: "double"
      description: "positive score value, range in between 0 and 1.0"
    - id: "length"
      type: "int"
      description: "length of the text"
    - id: "offset"
      type: "int"
      description: "the offset from the start of the document"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getLength()"
  id: "getLength()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "TextSentiment.getLength()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getLength()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getLength*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the length of the text by Unicode standard."
  syntax:
    content: "public int getLength()"
    return:
      type: "int"
      description: "the length of the text by Unicode standard"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore()"
  id: "getNegativeScore()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getNegativeScore()"
  nameWithType: "TextSentiment.getNegativeScore()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the score of negative sentiment."
  syntax:
    content: "public double getNegativeScore()"
    return:
      type: "double"
      description: "the score of negative sentiment"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore()"
  id: "getNeutralScore()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getNeutralScore()"
  nameWithType: "TextSentiment.getNeutralScore()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the score of neutral sentiment."
  syntax:
    content: "public double getNeutralScore()"
    return:
      type: "double"
      description: "the score of neutral sentiment"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getOffset()"
  id: "getOffset()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getOffset()"
  nameWithType: "TextSentiment.getOffset()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getOffset()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getOffset*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the offset of the text sentiment."
  syntax:
    content: "public int getOffset()"
    return:
      type: "int"
      description: "the offset of text sentiment"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore()"
  id: "getPositiveScore()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getPositiveScore()"
  nameWithType: "TextSentiment.getPositiveScore()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the score of positive sentiment."
  syntax:
    content: "public double getPositiveScore()"
    return:
      type: "double"
      description: "the score of positive sentiment"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass()"
  id: "getTextSentimentClass()"
  parent: "com.azure.ai.textanalytics.models.TextSentiment"
  langs:
  - "java"
  name: "getTextSentimentClass()"
  nameWithType: "TextSentiment.getTextSentimentClass()"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass()"
  overload: "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass*"
  type: "Method"
  package: "com.azure.ai.textanalytics.models"
  summary: "Get the text sentiment enum class: POSITIVE, NEGATIVE, NEUTRAL, MIXED."
  syntax:
    content: "public TextSentimentClass getTextSentimentClass()"
    return:
      type: "com.azure.ai.textanalytics.models.TextSentimentClass"
      description: "the TextSentimentClass"
references:
- uid: "com.azure.ai.textanalytics.models.TextSentimentClass"
  name: "TextSentimentClass"
  nameWithType: "TextSentimentClass"
  fullName: "com.azure.ai.textanalytics.models.TextSentimentClass"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment*"
  name: "TextSentiment"
  nameWithType: "TextSentiment.TextSentiment"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.TextSentiment"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getLength*"
  name: "getLength"
  nameWithType: "TextSentiment.getLength"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getLength"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore*"
  name: "getNegativeScore"
  nameWithType: "TextSentiment.getNegativeScore"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getNegativeScore"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore*"
  name: "getNeutralScore"
  nameWithType: "TextSentiment.getNeutralScore"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getNeutralScore"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore*"
  name: "getPositiveScore"
  nameWithType: "TextSentiment.getPositiveScore"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getPositiveScore"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getOffset*"
  name: "getOffset"
  nameWithType: "TextSentiment.getOffset"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getOffset"
  package: "com.azure.ai.textanalytics.models"
- uid: "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass*"
  name: "getTextSentimentClass"
  nameWithType: "TextSentiment.getTextSentimentClass"
  fullName: "com.azure.ai.textanalytics.models.TextSentiment.getTextSentimentClass"
  package: "com.azure.ai.textanalytics.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
