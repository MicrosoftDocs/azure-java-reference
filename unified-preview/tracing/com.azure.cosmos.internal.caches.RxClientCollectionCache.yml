### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache"
  id: "RxClientCollectionCache"
  parent: "com.azure.cosmos.internal.caches"
  children:
  - "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache(com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.RxStoreModel,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.IRetryPolicyFactory)"
  - "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  langs:
  - "java"
  name: "RxClientCollectionCache"
  nameWithType: "RxClientCollectionCache"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache"
  type: "Class"
  package: "com.azure.cosmos.internal.caches"
  summary: "Caches collection information. While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk."
  syntax:
    content: "public class RxClientCollectionCache extends RxCollectionCache"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.internal.caches.RxCollectionCache"
  inheritedMembers:
  - "com.azure.cosmos.internal.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.azure.cosmos.internal.caches.RxCollectionCache.resolveCollectionAsync(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache(com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.RxStoreModel,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.IRetryPolicyFactory)"
  id: "RxClientCollectionCache(com.azure.cosmos.internal.ISessionContainer,com.azure.cosmos.internal.RxStoreModel,com.azure.cosmos.internal.IAuthorizationTokenProvider,com.azure.cosmos.internal.IRetryPolicyFactory)"
  parent: "com.azure.cosmos.internal.caches.RxClientCollectionCache"
  langs:
  - "java"
  name: "RxClientCollectionCache(ISessionContainer sessionContainer, RxStoreModel storeModel, IAuthorizationTokenProvider tokenProvider, IRetryPolicyFactory retryPolicy)"
  nameWithType: "RxClientCollectionCache.RxClientCollectionCache(ISessionContainer sessionContainer, RxStoreModel storeModel, IAuthorizationTokenProvider tokenProvider, IRetryPolicyFactory retryPolicy)"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache(ISessionContainer sessionContainer, RxStoreModel storeModel, IAuthorizationTokenProvider tokenProvider, IRetryPolicyFactory retryPolicy)"
  overload: "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache*"
  type: "Constructor"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "public RxClientCollectionCache(ISessionContainer sessionContainer, RxStoreModel storeModel, IAuthorizationTokenProvider tokenProvider, IRetryPolicyFactory retryPolicy)"
    parameters:
    - id: "sessionContainer"
      type: "com.azure.cosmos.internal.ISessionContainer"
    - id: "storeModel"
      type: "com.azure.cosmos.internal.RxStoreModel"
    - id: "tokenProvider"
      type: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
    - id: "retryPolicy"
      type: "com.azure.cosmos.internal.IRetryPolicyFactory"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxClientCollectionCache"
  langs:
  - "java"
  name: "getByNameAsync(String resourceAddress, Map<String,Object> properties)"
  nameWithType: "RxClientCollectionCache.getByNameAsync(String resourceAddress, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync(String resourceAddress, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "protected Mono<DocumentCollection> getByNameAsync(String resourceAddress, Map<String,Object> properties)"
    parameters:
    - id: "resourceAddress"
      type: "java.lang.String"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.DocumentCollection>"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.azure.cosmos.internal.caches.RxClientCollectionCache"
  langs:
  - "java"
  name: "getByRidAsync(String collectionRid, Map<String,Object> properties)"
  nameWithType: "RxClientCollectionCache.getByRidAsync(String collectionRid, Map<String,Object> properties)"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync(String collectionRid, Map<String,Object> properties)"
  overload: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync*"
  type: "Method"
  package: "com.azure.cosmos.internal.caches"
  syntax:
    content: "protected Mono<DocumentCollection> getByRidAsync(String collectionRid, Map<String,Object> properties)"
    parameters:
    - id: "collectionRid"
      type: "java.lang.String"
    - id: "properties"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "reactor.core.publisher.Mono<com.azure.cosmos.internal.DocumentCollection>"
references:
- uid: "com.azure.cosmos.internal.ISessionContainer"
  name: "ISessionContainer"
  nameWithType: "ISessionContainer"
  fullName: "com.azure.cosmos.internal.ISessionContainer"
- uid: "com.azure.cosmos.internal.RxStoreModel"
  name: "RxStoreModel"
  nameWithType: "RxStoreModel"
  fullName: "com.azure.cosmos.internal.RxStoreModel"
- uid: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
  name: "IAuthorizationTokenProvider"
  nameWithType: "IAuthorizationTokenProvider"
  fullName: "com.azure.cosmos.internal.IAuthorizationTokenProvider"
- uid: "com.azure.cosmos.internal.IRetryPolicyFactory"
  name: "IRetryPolicyFactory"
  nameWithType: "IRetryPolicyFactory"
  fullName: "com.azure.cosmos.internal.IRetryPolicyFactory"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache*"
  name: "RxClientCollectionCache"
  nameWithType: "RxClientCollectionCache.RxClientCollectionCache"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.RxClientCollectionCache"
  package: "com.azure.cosmos.internal.caches"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.cosmos.internal.DocumentCollection>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.internal.DocumentCollection"
    name: "DocumentCollection"
    fullName: "com.azure.cosmos.internal.DocumentCollection"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync*"
  name: "getByRidAsync"
  nameWithType: "RxClientCollectionCache.getByRidAsync"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByRidAsync"
  package: "com.azure.cosmos.internal.caches"
- uid: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync*"
  name: "getByNameAsync"
  nameWithType: "RxClientCollectionCache.getByNameAsync"
  fullName: "com.azure.cosmos.internal.caches.RxClientCollectionCache.getByNameAsync"
  package: "com.azure.cosmos.internal.caches"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache"
  name: "RxCollectionCache"
  nameWithType: "RxCollectionCache"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "RxCollectionCache.getByNameAsync(String,Map<String,Object>)"
  nameWithType: "RxCollectionCache.getByNameAsync(String,Map<String,Object>)"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.resolveCollectionAsync(com.azure.cosmos.internal.RxDocumentServiceRequest)"
  name: "RxCollectionCache.resolveCollectionAsync(RxDocumentServiceRequest)"
  nameWithType: "RxCollectionCache.resolveCollectionAsync(RxDocumentServiceRequest)"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.resolveCollectionAsync(com.azure.cosmos.internal.RxDocumentServiceRequest)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "RxCollectionCache.getByRidAsync(String,Map<String,Object>)"
  nameWithType: "RxCollectionCache.getByRidAsync(String,Map<String,Object>)"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "RxCollectionCache.refresh(String,Map<String,Object>)"
  nameWithType: "RxCollectionCache.refresh(String,Map<String,Object>)"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "com.azure.cosmos.internal.DocumentCollection"
  name: "DocumentCollection"
  nameWithType: "DocumentCollection"
  fullName: "com.azure.cosmos.internal.DocumentCollection"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map"
  name: "RxCollectionCache.getByNameAsync(String,Map"
  nameWithType: "RxCollectionCache.getByNameAsync(String,Map"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.getByNameAsync(java.lang.String,java.util.Map"
- uid: "java.lang.String,java.lang.Object>)"
  name: "String,Object>)"
  nameWithType: "String,Object>)"
  fullName: "java.lang.String,java.lang.Object>)"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map"
  name: "RxCollectionCache.getByRidAsync(String,Map"
  nameWithType: "RxCollectionCache.getByRidAsync(String,Map"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.getByRidAsync(java.lang.String,java.util.Map"
- uid: "com.azure.cosmos.internal.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map"
  name: "RxCollectionCache.refresh(String,Map"
  nameWithType: "RxCollectionCache.refresh(String,Map"
  fullName: "com.azure.cosmos.internal.caches.RxCollectionCache.refresh(java.lang.String,java.util.Map"
