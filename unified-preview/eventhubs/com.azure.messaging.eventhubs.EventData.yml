### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventData"
  id: "EventData"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventData.EventData(byte[])"
  - "com.azure.messaging.eventhubs.EventData.EventData(byte[],com.azure.core.util.Context)"
  - "com.azure.messaging.eventhubs.EventData.EventData(java.lang.String)"
  - "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer)"
  - "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer,com.azure.core.util.Context)"
  - "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer,com.azure.messaging.eventhubs.EventData.SystemProperties,com.azure.core.util.Context)"
  - "com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES"
  - "com.azure.messaging.eventhubs.EventData.SystemProperties"
  - "com.azure.messaging.eventhubs.EventData.addContext(java.lang.String,java.lang.Object)"
  - "com.azure.messaging.eventhubs.EventData.addProperty(java.lang.String,java.lang.Object)"
  - "com.azure.messaging.eventhubs.EventData.compareTo(com.azure.messaging.eventhubs.EventData)"
  - "com.azure.messaging.eventhubs.EventData.equals(java.lang.Object)"
  - "com.azure.messaging.eventhubs.EventData.getBody()"
  - "com.azure.messaging.eventhubs.EventData.getBodyAsString()"
  - "com.azure.messaging.eventhubs.EventData.getContext()"
  - "com.azure.messaging.eventhubs.EventData.getEnqueuedTime()"
  - "com.azure.messaging.eventhubs.EventData.getOffset()"
  - "com.azure.messaging.eventhubs.EventData.getPartitionKey()"
  - "com.azure.messaging.eventhubs.EventData.getProperties()"
  - "com.azure.messaging.eventhubs.EventData.getSequenceNumber()"
  - "com.azure.messaging.eventhubs.EventData.getSystemProperties()"
  - "com.azure.messaging.eventhubs.EventData.hashCode()"
  langs:
  - "java"
  name: "EventData"
  nameWithType: "EventData"
  fullName: "com.azure.messaging.eventhubs.EventData"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.\n\nHere's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: [AMQP 1.0 specification][]\n\n1.  <xref uid=\"com.azure.messaging.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">#getProperties()</xref> \\- AMQPMessage.ApplicationProperties section\n2.  <xref uid=\"com.azure.messaging.eventhubs.EventData.getBody()\" data-throw-if-not-resolved=\"false\">#getBody()</xref> \\- if AMQPMessage.Body has Data section\n\nSerializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported.\n\n\n[AMQP 1.0 specification]: http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf"
  syntax:
    content: "public class EventData implements Comparable<EventData>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.Comparable<com.azure.messaging.eventhubs.EventData>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventData.EventData(byte[])"
  id: "EventData(byte[])"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(byte[] body)"
  nameWithType: "EventData.EventData(byte[] body)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(byte[] body)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event containing the `data`."
  syntax:
    content: "public EventData(byte[] body)"
    parameters:
    - id: "body"
      type: "byte[]"
      description: "The data to set for this event."
- uid: "com.azure.messaging.eventhubs.EventData.EventData(byte[],com.azure.core.util.Context)"
  id: "EventData(byte[],com.azure.core.util.Context)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(byte[] body, Context context)"
  nameWithType: "EventData.EventData(byte[] body, Context context)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(byte[] body, Context context)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event containing the `data`."
  syntax:
    content: "public EventData(byte[] body, Context context)"
    parameters:
    - id: "body"
      type: "byte[]"
      description: "The data to set for this event."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "A specified key-value pair of type <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref>."
- uid: "com.azure.messaging.eventhubs.EventData.EventData(java.lang.String)"
  id: "EventData(java.lang.String)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(String body)"
  nameWithType: "EventData.EventData(String body)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(String body)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event by encoding the `body` using UTF-8 charset."
  syntax:
    content: "public EventData(String body)"
    parameters:
    - id: "body"
      type: "java.lang.String"
      description: "The string that will be UTF-8 encoded to create an event."
- uid: "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer)"
  id: "EventData(java.nio.ByteBuffer)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(ByteBuffer body)"
  nameWithType: "EventData.EventData(ByteBuffer body)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer body)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event containing the `body`."
  syntax:
    content: "public EventData(ByteBuffer body)"
    parameters:
    - id: "body"
      type: "java.nio.ByteBuffer"
      description: "The data to set for this event."
- uid: "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer,com.azure.core.util.Context)"
  id: "EventData(java.nio.ByteBuffer,com.azure.core.util.Context)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(ByteBuffer body, Context context)"
  nameWithType: "EventData.EventData(ByteBuffer body, Context context)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer body, Context context)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event containing the `body`."
  syntax:
    content: "public EventData(ByteBuffer body, Context context)"
    parameters:
    - id: "body"
      type: "java.nio.ByteBuffer"
      description: "The data to set for this event."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "A specified key-value pair of type <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref>."
- uid: "com.azure.messaging.eventhubs.EventData.EventData(java.nio.ByteBuffer,com.azure.messaging.eventhubs.EventData.SystemProperties,com.azure.core.util.Context)"
  id: "EventData(java.nio.ByteBuffer,com.azure.messaging.eventhubs.EventData.SystemProperties,com.azure.core.util.Context)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "EventData(ByteBuffer body, EventData.SystemProperties systemProperties, Context context)"
  nameWithType: "EventData.EventData(ByteBuffer body, EventData.SystemProperties systemProperties, Context context)"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData(ByteBuffer body, EventData.SystemProperties systemProperties, Context context)"
  overload: "com.azure.messaging.eventhubs.EventData.EventData*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Creates an event with the given `body`, system properties and context."
  syntax:
    content: " EventData(ByteBuffer body, EventData.SystemProperties systemProperties, Context context)"
    parameters:
    - id: "body"
      type: "java.nio.ByteBuffer"
      description: "The data to set for this event."
    - id: "systemProperties"
      type: "com.azure.messaging.eventhubs.EventData.SystemProperties"
      description: "System properties set by message broker for this event."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "A specified key-value pair of type <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref>."
- uid: "com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES"
  id: "RESERVED_SYSTEM_PROPERTIES"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "RESERVED_SYSTEM_PROPERTIES"
  nameWithType: "EventData.RESERVED_SYSTEM_PROPERTIES"
  fullName: "com.azure.messaging.eventhubs.EventData.RESERVED_SYSTEM_PROPERTIES"
  type: "Field"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "static final Set<String> RESERVED_SYSTEM_PROPERTIES"
    return:
      type: "java.util.Set<java.lang.String>"
- uid: "com.azure.messaging.eventhubs.EventData.addContext(java.lang.String,java.lang.Object)"
  id: "addContext(java.lang.String,java.lang.Object)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "addContext(String key, Object value)"
  nameWithType: "EventData.addContext(String key, Object value)"
  fullName: "com.azure.messaging.eventhubs.EventData.addContext(String key, Object value)"
  overload: "com.azure.messaging.eventhubs.EventData.addContext*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Adds a new key value pair to the existing context on Event Data."
  syntax:
    content: "public EventData addContext(String key, Object value)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "The key for this context object"
    - id: "value"
      type: "java.lang.Object"
      description: "The value for this context object."
    return:
      type: "com.azure.messaging.eventhubs.EventData"
      description: "The updated EventData object."
- uid: "com.azure.messaging.eventhubs.EventData.addProperty(java.lang.String,java.lang.Object)"
  id: "addProperty(java.lang.String,java.lang.Object)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "addProperty(String key, Object value)"
  nameWithType: "EventData.addProperty(String key, Object value)"
  fullName: "com.azure.messaging.eventhubs.EventData.addProperty(String key, Object value)"
  overload: "com.azure.messaging.eventhubs.EventData.addProperty*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Adds a piece of metadata to the event, allowing publishers to offer additional information to event consumers. If the `key` exists in the map, its existing value is overwritten.\n\nA common use case for <xref uid=\"com.azure.messaging.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">#getProperties()</xref> is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.getBody()\" data-throw-if-not-resolved=\"false\">#getBody()</xref> as an aid to consumers who wish to deserialize the binary data.\n\n**Adding serialization hint using `addProperty(String, Object)`**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventdata.addProperty\\#string-object\\}"
  syntax:
    content: "public EventData addProperty(String key, Object value)"
    parameters:
    - id: "key"
      type: "java.lang.String"
      description: "The key for this application property"
    - id: "value"
      type: "java.lang.Object"
      description: "The value for this application property."
    return:
      type: "com.azure.messaging.eventhubs.EventData"
      description: "The updated EventData object."
- uid: "com.azure.messaging.eventhubs.EventData.compareTo(com.azure.messaging.eventhubs.EventData)"
  id: "compareTo(com.azure.messaging.eventhubs.EventData)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "compareTo(EventData other)"
  nameWithType: "EventData.compareTo(EventData other)"
  fullName: "com.azure.messaging.eventhubs.EventData.compareTo(EventData other)"
  overload: "com.azure.messaging.eventhubs.EventData.compareTo*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public int compareTo(EventData other)"
    parameters:
    - id: "other"
      type: "com.azure.messaging.eventhubs.EventData"
    return:
      type: "int"
- uid: "com.azure.messaging.eventhubs.EventData.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "equals(Object o)"
  nameWithType: "EventData.equals(Object o)"
  fullName: "com.azure.messaging.eventhubs.EventData.equals(Object o)"
  overload: "com.azure.messaging.eventhubs.EventData.equals*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public boolean equals(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.messaging.eventhubs.EventData.getBody()"
  id: "getBody()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getBody()"
  nameWithType: "EventData.getBody()"
  fullName: "com.azure.messaging.eventhubs.EventData.getBody()"
  overload: "com.azure.messaging.eventhubs.EventData.getBody*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets the actual payload/data wrapped by EventData.\n\nIf the means for deserializing the raw data is not apparent to consumers, a common technique is to make use of <xref uid=\"com.azure.messaging.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">#getProperties()</xref> when creating the event, to associate serialization hints as an aid to consumers who wish to deserialize the binary data."
  syntax:
    content: "public ByteBuffer getBody()"
    return:
      type: "java.nio.ByteBuffer"
      description: "ByteBuffer representing the data."
- uid: "com.azure.messaging.eventhubs.EventData.getBodyAsString()"
  id: "getBodyAsString()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getBodyAsString()"
  nameWithType: "EventData.getBodyAsString()"
  fullName: "com.azure.messaging.eventhubs.EventData.getBodyAsString()"
  overload: "com.azure.messaging.eventhubs.EventData.getBodyAsString*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Returns event data as UTF-8 decoded string."
  syntax:
    content: "public String getBodyAsString()"
    return:
      type: "java.lang.String"
      description: "UTF-8 decoded string representation of the event data."
- uid: "com.azure.messaging.eventhubs.EventData.getContext()"
  id: "getContext()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getContext()"
  nameWithType: "EventData.getContext()"
  fullName: "com.azure.messaging.eventhubs.EventData.getContext()"
  overload: "com.azure.messaging.eventhubs.EventData.getContext*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "A specified key-value pair of type <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref> to set additional information on the event."
  syntax:
    content: "public Context getContext()"
    return:
      type: "com.azure.core.util.Context"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">Context</xref> object set on the event"
- uid: "com.azure.messaging.eventhubs.EventData.getEnqueuedTime()"
  id: "getEnqueuedTime()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getEnqueuedTime()"
  nameWithType: "EventData.getEnqueuedTime()"
  fullName: "com.azure.messaging.eventhubs.EventData.getEnqueuedTime()"
  overload: "com.azure.messaging.eventhubs.EventData.getEnqueuedTime*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets the instant, in UTC, of when the event was enqueued in the Event Hub partition."
  syntax:
    content: "public Instant getEnqueuedTime()"
    return:
      type: "java.time.Instant"
      description: "The instant, in UTC, this was enqueued in the Event Hub partition. <code>null</code> if the EventData was not\n received from Event Hub service."
- uid: "com.azure.messaging.eventhubs.EventData.getOffset()"
  id: "getOffset()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getOffset()"
  nameWithType: "EventData.getOffset()"
  fullName: "com.azure.messaging.eventhubs.EventData.getOffset()"
  overload: "com.azure.messaging.eventhubs.EventData.getOffset*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets the offset of the event when it was received from the associated Event Hub partition."
  syntax:
    content: "public Long getOffset()"
    return:
      type: "java.lang.Long"
      description: "The offset within the Event Hub partition of the received event. <code>null</code> if the EventData was not\n received from Event Hub service."
- uid: "com.azure.messaging.eventhubs.EventData.getPartitionKey()"
  id: "getPartitionKey()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getPartitionKey()"
  nameWithType: "EventData.getPartitionKey()"
  fullName: "com.azure.messaging.eventhubs.EventData.getPartitionKey()"
  overload: "com.azure.messaging.eventhubs.EventData.getPartitionKey*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets a partition key used for message partitioning. If it exists, this value was used to compute a hash to select a partition to send the message to."
  syntax:
    content: "public String getPartitionKey()"
    return:
      type: "java.lang.String"
      description: "A partition key for this Event Data. <code>null</code> if the EventData was not received from Event Hub\n service or there was no partition key set when the event was sent to the Event Hub."
- uid: "com.azure.messaging.eventhubs.EventData.getProperties()"
  id: "getProperties()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "EventData.getProperties()"
  fullName: "com.azure.messaging.eventhubs.EventData.getProperties()"
  overload: "com.azure.messaging.eventhubs.EventData.getProperties*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "The set of free-form event properties which may be used for passing metadata associated with the event with the event body during Event Hubs operations.\n\nA common use case for `properties()` is to associate serialization hints for the <xref uid=\"com.azure.messaging.eventhubs.EventData.getBody()\" data-throw-if-not-resolved=\"false\">#getBody()</xref> as an aid to consumers who wish to deserialize the binary data. See <xref uid=\"com.azure.messaging.eventhubs.EventData.addProperty(java.lang.String,java.lang.Object)\" data-throw-if-not-resolved=\"false\">#addProperty(String, Object)</xref> for a sample."
  syntax:
    content: "public Map<String,Object> getProperties()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.Object>"
      description: "Application properties associated with this <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>."
- uid: "com.azure.messaging.eventhubs.EventData.getSequenceNumber()"
  id: "getSequenceNumber()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getSequenceNumber()"
  nameWithType: "EventData.getSequenceNumber()"
  fullName: "com.azure.messaging.eventhubs.EventData.getSequenceNumber()"
  overload: "com.azure.messaging.eventhubs.EventData.getSequenceNumber*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Gets the sequence number assigned to the event when it was enqueued in the associated Event Hub partition. This is unique for every message received in the Event Hub partition."
  syntax:
    content: "public Long getSequenceNumber()"
    return:
      type: "java.lang.Long"
      description: "The sequence number for this event. <code>null</code> if the EventData was not received from Event Hub\n service."
- uid: "com.azure.messaging.eventhubs.EventData.getSystemProperties()"
  id: "getSystemProperties()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "getSystemProperties()"
  nameWithType: "EventData.getSystemProperties()"
  fullName: "com.azure.messaging.eventhubs.EventData.getSystemProperties()"
  overload: "com.azure.messaging.eventhubs.EventData.getSystemProperties*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Properties that are populated by EventHubService. As these are populated by Service, they are only present on a **received** EventData."
  syntax:
    content: "public Map<String,Object> getSystemProperties()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.Object>"
      description: "an encapsulation of all SystemProperties appended by EventHubs service into EventData. <code>null</code> if\n the <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> is not received and is created by the public constructors."
- uid: "com.azure.messaging.eventhubs.EventData.hashCode()"
  id: "hashCode()"
  parent: "com.azure.messaging.eventhubs.EventData"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "EventData.hashCode()"
  fullName: "com.azure.messaging.eventhubs.EventData.hashCode()"
  overload: "com.azure.messaging.eventhubs.EventData.hashCode*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
references:
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.messaging.eventhubs.EventData.EventData*"
  name: "EventData"
  nameWithType: "EventData.EventData"
  fullName: "com.azure.messaging.eventhubs.EventData.EventData"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "java.nio.ByteBuffer"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.EventData.SystemProperties"
  name: "EventData.SystemProperties"
  nameWithType: "EventData.SystemProperties"
  fullName: "com.azure.messaging.eventhubs.EventData.SystemProperties"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.messaging.eventhubs.EventData.addProperty*"
  name: "addProperty"
  nameWithType: "EventData.addProperty"
  fullName: "com.azure.messaging.eventhubs.EventData.addProperty"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.addContext*"
  name: "addContext"
  nameWithType: "EventData.addContext"
  fullName: "com.azure.messaging.eventhubs.EventData.addContext"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.EventData.getProperties*"
  name: "getProperties"
  nameWithType: "EventData.getProperties"
  fullName: "com.azure.messaging.eventhubs.EventData.getProperties"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getContext*"
  name: "getContext"
  nameWithType: "EventData.getContext"
  fullName: "com.azure.messaging.eventhubs.EventData.getContext"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getSystemProperties*"
  name: "getSystemProperties"
  nameWithType: "EventData.getSystemProperties"
  fullName: "com.azure.messaging.eventhubs.EventData.getSystemProperties"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getBody*"
  name: "getBody"
  nameWithType: "EventData.getBody"
  fullName: "com.azure.messaging.eventhubs.EventData.getBody"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getBodyAsString*"
  name: "getBodyAsString"
  nameWithType: "EventData.getBodyAsString"
  fullName: "com.azure.messaging.eventhubs.EventData.getBodyAsString"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.messaging.eventhubs.EventData.getOffset*"
  name: "getOffset"
  nameWithType: "EventData.getOffset"
  fullName: "com.azure.messaging.eventhubs.EventData.getOffset"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "EventData.getPartitionKey"
  fullName: "com.azure.messaging.eventhubs.EventData.getPartitionKey"
  package: "com.azure.messaging.eventhubs"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "com.azure.messaging.eventhubs.EventData.getEnqueuedTime*"
  name: "getEnqueuedTime"
  nameWithType: "EventData.getEnqueuedTime"
  fullName: "com.azure.messaging.eventhubs.EventData.getEnqueuedTime"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.getSequenceNumber*"
  name: "getSequenceNumber"
  nameWithType: "EventData.getSequenceNumber"
  fullName: "com.azure.messaging.eventhubs.EventData.getSequenceNumber"
  package: "com.azure.messaging.eventhubs"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.messaging.eventhubs.EventData.compareTo*"
  name: "compareTo"
  nameWithType: "EventData.compareTo"
  fullName: "com.azure.messaging.eventhubs.EventData.compareTo"
  package: "com.azure.messaging.eventhubs"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.messaging.eventhubs.EventData.equals*"
  name: "equals"
  nameWithType: "EventData.equals"
  fullName: "com.azure.messaging.eventhubs.EventData.equals"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData.hashCode*"
  name: "hashCode"
  nameWithType: "EventData.hashCode"
  fullName: "com.azure.messaging.eventhubs.EventData.hashCode"
  package: "com.azure.messaging.eventhubs"
- uid: "java.util.Set<java.lang.String>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Comparable<com.azure.messaging.eventhubs.EventData>"
  name: "Comparable<EventData>"
  nameWithType: "Comparable<EventData>"
  fullName: "java.lang.Comparable<com.azure.messaging.eventhubs.EventData>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
- uid: "java.lang.Comparable"
  name: "Comparable"
  nameWithType: "Comparable"
  fullName: "java.lang.Comparable"
