### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  id: "EventHubConsumerOptions"
  parent: "com.azure.messaging.eventhubs.models"
  children:
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.DEFAULT_PREFETCH_COUNT"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties()"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier(java.lang.String)"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel(java.lang.Long)"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount(int)"
  - "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties(boolean)"
  langs:
  - "java"
  name: "EventHubConsumerOptions"
  nameWithType: "EventHubConsumerOptions"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  type: "Class"
  package: "com.azure.messaging.eventhubs.models"
  summary: "The baseline set of options that can be specified when creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerClient</xref> or an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref> to configure its behavior."
  syntax:
    content: "public class EventHubConsumerOptions implements Cloneable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.Cloneable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.DEFAULT_PREFETCH_COUNT"
  id: "DEFAULT_PREFETCH_COUNT"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "DEFAULT_PREFETCH_COUNT"
  nameWithType: "EventHubConsumerOptions.DEFAULT_PREFETCH_COUNT"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.DEFAULT_PREFETCH_COUNT"
  type: "Field"
  package: "com.azure.messaging.eventhubs.models"
  syntax:
    content: "static final int DEFAULT_PREFETCH_COUNT"
    return:
      type: "int"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()"
  id: "EventHubConsumerOptions()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "EventHubConsumerOptions()"
  nameWithType: "EventHubConsumerOptions.EventHubConsumerOptions()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Creates a new instance with the default prefetch amount."
  syntax:
    content: "public EventHubConsumerOptions()"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH"
  id: "MAXIMUM_IDENTIFIER_LENGTH"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "MAXIMUM_IDENTIFIER_LENGTH"
  nameWithType: "EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_IDENTIFIER_LENGTH"
  type: "Field"
  package: "com.azure.messaging.eventhubs.models"
  summary: "The maximum length, in characters, for the identifier assigned to an <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubConsumerAsyncClient</xref>."
  syntax:
    content: "public static final int MAXIMUM_IDENTIFIER_LENGTH"
    return:
      type: "int"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT"
  id: "MAXIMUM_PREFETCH_COUNT"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "MAXIMUM_PREFETCH_COUNT"
  nameWithType: "EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MAXIMUM_PREFETCH_COUNT"
  type: "Field"
  package: "com.azure.messaging.eventhubs.models"
  summary: "The maximum value allowed for the prefetch count of the consumer."
  syntax:
    content: "public static final int MAXIMUM_PREFETCH_COUNT"
    return:
      type: "int"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT"
  id: "MINIMUM_PREFETCH_COUNT"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "MINIMUM_PREFETCH_COUNT"
  nameWithType: "EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.MINIMUM_PREFETCH_COUNT"
  type: "Field"
  package: "com.azure.messaging.eventhubs.models"
  summary: "The minimum value allowed for the prefetch count of the consumer."
  syntax:
    content: "public static final int MINIMUM_PREFETCH_COUNT"
    return:
      type: "int"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()"
  id: "clone()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "clone()"
  nameWithType: "EventHubConsumerOptions.clone()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Creates a shallow clone of this instance."
  syntax:
    content: "public EventHubConsumerOptions clone()"
    return:
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "A shallow clone of this object."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier()"
  id: "getIdentifier()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "getIdentifier()"
  nameWithType: "EventHubConsumerOptions.getIdentifier()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the optional text-based identifier label to assign to an event receiver. The identifier is used for informational purposes only. If not specified, the receiver will have no assigned identifier label."
  syntax:
    content: "public String getIdentifier()"
    return:
      type: "java.lang.String"
      description: "The identifier of the receiver."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel()"
  id: "getOwnerLevel()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "getOwnerLevel()"
  nameWithType: "EventHubConsumerOptions.getOwnerLevel()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the owner level for this consumer. If <xref uid=\"\" data-throw-if-not-resolved=\"false\">Optional#isPresent()</xref> is `false`, then this is not an exclusive consumer. Otherwise, it is an exclusive consumer, and there can only be one active consumer for each partition and consumer group combination."
  syntax:
    content: "public Long getOwnerLevel()"
    return:
      type: "java.lang.Long"
      description: "An optional owner level for this consumer."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount()"
  id: "getPrefetchCount()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "getPrefetchCount()"
  nameWithType: "EventHubConsumerOptions.getPrefetchCount()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets the count used by the consumer to control the number of events this receiver will actively receive and queue locally without regard to whether a receive operation is currently active."
  syntax:
    content: "public int getPrefetchCount()"
    return:
      type: "int"
      description: "The prefetch count receiver will receive and queue locally regardless of whether or not a receive\n     operation is active."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties()"
  id: "getTrackLastEnqueuedEventProperties()"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "getTrackLastEnqueuedEventProperties()"
  nameWithType: "EventHubConsumerOptions.getTrackLastEnqueuedEventProperties()"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties()"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Gets whether or not the consumer should request information on the last enqueued event on its associated partition, and track that information as events are received."
  syntax:
    content: "public boolean getTrackLastEnqueuedEventProperties()"
    return:
      type: "boolean"
      description: "<code>true</code> if the resulting consumer will keep track of the last enqueued information for that\n     partition; <code>false</code> otherwise."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier(java.lang.String)"
  id: "setIdentifier(java.lang.String)"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "setIdentifier(String identifier)"
  nameWithType: "EventHubConsumerOptions.setIdentifier(String identifier)"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier(String identifier)"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Sets an optional text-based identifier label to assign to an event consumer."
  syntax:
    content: "public EventHubConsumerOptions setIdentifier(String identifier)"
    parameters:
    - id: "identifier"
      type: "java.lang.String"
      description: "The receiver name."
    return:
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions</xref> object."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel(java.lang.Long)"
  id: "setOwnerLevel(java.lang.Long)"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "setOwnerLevel(Long priority)"
  nameWithType: "EventHubConsumerOptions.setOwnerLevel(Long priority)"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel(Long priority)"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Sets the `ownerLevel` value on this consumer. When populated, the level indicates that a consumer is intended to be the only reader of events for the requested partition and an associated consumer group. To do so, this consumer will attempt to assert ownership over the partition; in the case where more than one exclusive consumer attempts to assert ownership for the same partition/consumer group pair, the one having a larger <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#getOwnerLevel()</xref> value will \"win\".\n\nWhen an exclusive consumer is used, those consumers which are not exclusive or which have a lower priority will either not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation."
  syntax:
    content: "public EventHubConsumerOptions setOwnerLevel(Long priority)"
    parameters:
    - id: "priority"
      type: "java.lang.Long"
      description: "The priority associated with an exclusive consumer; for a non-exclusive consumer, this\n     value should be <code>null</code>."
    return:
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions</xref> object."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount(int)"
  id: "setPrefetchCount(int)"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "setPrefetchCount(int prefetchCount)"
  nameWithType: "EventHubConsumerOptions.setPrefetchCount(int prefetchCount)"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount(int prefetchCount)"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Sets the count used by the receiver to control the number of events this receiver will actively receive and queue locally without regard to whether a receive operation is currently active."
  syntax:
    content: "public EventHubConsumerOptions setPrefetchCount(int prefetchCount)"
    parameters:
    - id: "prefetchCount"
      type: "int"
      description: "The amount of events to queue locally."
    return:
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions</xref> object."
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties(boolean)"
  id: "setTrackLastEnqueuedEventProperties(boolean)"
  parent: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
  langs:
  - "java"
  name: "setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  nameWithType: "EventHubConsumerOptions.setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  overload: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties*"
  type: "Method"
  package: "com.azure.messaging.eventhubs.models"
  summary: "Sets whether or not the consumer should request information on the last enqueued event on its associated partition, and track that information as events are received.\n\nWhen information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client."
  syntax:
    content: "public EventHubConsumerOptions setTrackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
    parameters:
    - id: "trackLastEnqueuedEventProperties"
      type: "boolean"
      description: "<code>true</code> if the resulting consumer will keep track of the last\n     enqueued information for that partition; <code>false</code> otherwise."
    return:
      type: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions"
      description: "The updated <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions</xref> object."
references:
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions*"
  name: "EventHubConsumerOptions"
  nameWithType: "EventHubConsumerOptions.EventHubConsumerOptions"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.EventHubConsumerOptions"
  package: "com.azure.messaging.eventhubs.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier*"
  name: "setIdentifier"
  nameWithType: "EventHubConsumerOptions.setIdentifier"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setIdentifier"
  package: "com.azure.messaging.eventhubs.models"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel*"
  name: "setOwnerLevel"
  nameWithType: "EventHubConsumerOptions.setOwnerLevel"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setOwnerLevel"
  package: "com.azure.messaging.eventhubs.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount*"
  name: "setPrefetchCount"
  nameWithType: "EventHubConsumerOptions.setPrefetchCount"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setPrefetchCount"
  package: "com.azure.messaging.eventhubs.models"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties*"
  name: "setTrackLastEnqueuedEventProperties"
  nameWithType: "EventHubConsumerOptions.setTrackLastEnqueuedEventProperties"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.setTrackLastEnqueuedEventProperties"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier*"
  name: "getIdentifier"
  nameWithType: "EventHubConsumerOptions.getIdentifier"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getIdentifier"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel*"
  name: "getOwnerLevel"
  nameWithType: "EventHubConsumerOptions.getOwnerLevel"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getOwnerLevel"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount*"
  name: "getPrefetchCount"
  nameWithType: "EventHubConsumerOptions.getPrefetchCount"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getPrefetchCount"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties*"
  name: "getTrackLastEnqueuedEventProperties"
  nameWithType: "EventHubConsumerOptions.getTrackLastEnqueuedEventProperties"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.getTrackLastEnqueuedEventProperties"
  package: "com.azure.messaging.eventhubs.models"
- uid: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone*"
  name: "clone"
  nameWithType: "EventHubConsumerOptions.clone"
  fullName: "com.azure.messaging.eventhubs.models.EventHubConsumerOptions.clone"
  package: "com.azure.messaging.eventhubs.models"
- uid: "java.lang.Cloneable"
  name: "Cloneable"
  nameWithType: "Cloneable"
  fullName: "java.lang.Cloneable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
