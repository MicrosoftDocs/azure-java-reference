### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.EventProcessor"
  id: "EventProcessor"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.EventProcessor.EventProcessor(com.azure.messaging.eventhubs.EventHubClientBuilder,java.lang.String,java.util.function.Supplier<com.azure.messaging.eventhubs.PartitionProcessor>,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.EventProcessorStore,com.azure.core.amqp.implementation.TracerProvider)"
  - "com.azure.messaging.eventhubs.EventProcessor.getIdentifier()"
  - "com.azure.messaging.eventhubs.EventProcessor.start()"
  - "com.azure.messaging.eventhubs.EventProcessor.stop()"
  langs:
  - "java"
  name: "EventProcessor"
  nameWithType: "EventProcessor"
  fullName: "com.azure.messaging.eventhubs.EventProcessor"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "Event Processor provides a convenient mechanism to consume events from all partitions of an Event Hub in the context of a consumer group. Event Processor-based application consists of one or more instances of EventProcessor(s) which are set up to consume events from the same Event Hub, consumer group to balance the workload across different instances and track progress when events are processed. Based on the number of instances running, each Event Processor may own zero or more partitions to balance the workload among all the instances.\n\nTo create an instance of EventProcessor, use the fluent <xref uid=\"com.azure.messaging.eventhubs.EventProcessorBuilder\" data-throw-if-not-resolved=\"false\">EventProcessorBuilder</xref>."
  syntax:
    content: "public class EventProcessor"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.EventProcessor.EventProcessor(com.azure.messaging.eventhubs.EventHubClientBuilder,java.lang.String,java.util.function.Supplier<com.azure.messaging.eventhubs.PartitionProcessor>,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.EventProcessorStore,com.azure.core.amqp.implementation.TracerProvider)"
  id: "EventProcessor(com.azure.messaging.eventhubs.EventHubClientBuilder,java.lang.String,java.util.function.Supplier<com.azure.messaging.eventhubs.PartitionProcessor>,com.azure.messaging.eventhubs.models.EventPosition,com.azure.messaging.eventhubs.EventProcessorStore,com.azure.core.amqp.implementation.TracerProvider)"
  parent: "com.azure.messaging.eventhubs.EventProcessor"
  langs:
  - "java"
  name: "EventProcessor(EventHubClientBuilder eventHubClientBuilder, String consumerGroup, Supplier<PartitionProcessor> partitionProcessorFactory, EventPosition initialEventPosition, EventProcessorStore eventProcessorStore, TracerProvider tracerProvider)"
  nameWithType: "EventProcessor.EventProcessor(EventHubClientBuilder eventHubClientBuilder, String consumerGroup, Supplier<PartitionProcessor> partitionProcessorFactory, EventPosition initialEventPosition, EventProcessorStore eventProcessorStore, TracerProvider tracerProvider)"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.EventProcessor(EventHubClientBuilder eventHubClientBuilder, String consumerGroup, Supplier<PartitionProcessor> partitionProcessorFactory, EventPosition initialEventPosition, EventProcessorStore eventProcessorStore, TracerProvider tracerProvider)"
  overload: "com.azure.messaging.eventhubs.EventProcessor.EventProcessor*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  summary: "Package-private constructor. Use <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref> to create an instance."
  syntax:
    content: " EventProcessor(EventHubClientBuilder eventHubClientBuilder, String consumerGroup, Supplier<PartitionProcessor> partitionProcessorFactory, EventPosition initialEventPosition, EventProcessorStore eventProcessorStore, TracerProvider tracerProvider)"
    parameters:
    - id: "eventHubClientBuilder"
      type: "com.azure.messaging.eventhubs.EventHubClientBuilder"
      description: "The <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\">EventHubClientBuilder</xref>."
    - id: "consumerGroup"
      type: "java.lang.String"
      description: "The consumer group name used in this event processor to consumer events."
    - id: "partitionProcessorFactory"
      type: "java.util.function.Supplier<com.azure.messaging.eventhubs.PartitionProcessor>"
      description: "The factory to create new partition processor(s)."
    - id: "initialEventPosition"
      type: "com.azure.messaging.eventhubs.models.EventPosition"
      description: "Initial event position to start consuming events."
    - id: "eventProcessorStore"
      type: "com.azure.messaging.eventhubs.EventProcessorStore"
      description: "The partition manager used for reading and updating partition ownership and checkpoint\n information."
    - id: "tracerProvider"
      type: "com.azure.core.amqp.implementation.TracerProvider"
      description: "The tracer implementation."
- uid: "com.azure.messaging.eventhubs.EventProcessor.getIdentifier()"
  id: "getIdentifier()"
  parent: "com.azure.messaging.eventhubs.EventProcessor"
  langs:
  - "java"
  name: "getIdentifier()"
  nameWithType: "EventProcessor.getIdentifier()"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.getIdentifier()"
  overload: "com.azure.messaging.eventhubs.EventProcessor.getIdentifier*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "The identifier is a unique name given to this event processor instance."
  syntax:
    content: "public String getIdentifier()"
    return:
      type: "java.lang.String"
      description: "Identifier for this event processor."
- uid: "com.azure.messaging.eventhubs.EventProcessor.start()"
  id: "start()"
  parent: "com.azure.messaging.eventhubs.EventProcessor"
  langs:
  - "java"
  name: "start()"
  nameWithType: "EventProcessor.start()"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.start()"
  overload: "com.azure.messaging.eventhubs.EventProcessor.start*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Starts processing of events for all partitions of the Event Hub that this event processor can own, assigning a dedicated <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref> to each partition. If there are other Event Processors active for the same consumer group on the Event Hub, responsibility for partitions will be shared between them.\n\nSubsequent calls to start will be ignored if this event processor is already running. Calling start after <xref uid=\"com.azure.messaging.eventhubs.EventProcessor.stop()\" data-throw-if-not-resolved=\"false\">#stop()</xref> is called will restart this event processor.\n\n**Starting the processor to consume events from all partitions**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventprocessor.startstop\\}"
  syntax:
    content: "public synchronized void start()"
- uid: "com.azure.messaging.eventhubs.EventProcessor.stop()"
  id: "stop()"
  parent: "com.azure.messaging.eventhubs.EventProcessor"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "EventProcessor.stop()"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.stop()"
  overload: "com.azure.messaging.eventhubs.EventProcessor.stop*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Stops processing events for all partitions owned by this event processor. All <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref> will be shutdown and any open resources will be closed.\n\nSubsequent calls to stop will be ignored if the event processor is not running.\n\n**Stopping the processor**\n\n\\{@codesnippet com.azure.messaging.eventhubs.eventprocessor.startstop\\}"
  syntax:
    content: "public synchronized void stop()"
references:
- uid: "com.azure.messaging.eventhubs.EventHubClientBuilder"
  name: "EventHubClientBuilder"
  nameWithType: "EventHubClientBuilder"
  fullName: "com.azure.messaging.eventhubs.EventHubClientBuilder"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.function.Supplier<com.azure.messaging.eventhubs.PartitionProcessor>"
  spec.java:
  - uid: "java.util.function.Supplier"
    name: "Supplier"
    fullName: "java.util.function.Supplier"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.PartitionProcessor"
    name: "PartitionProcessor"
    fullName: "com.azure.messaging.eventhubs.PartitionProcessor"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.models.EventPosition"
  name: "EventPosition"
  nameWithType: "EventPosition"
  fullName: "com.azure.messaging.eventhubs.models.EventPosition"
- uid: "com.azure.messaging.eventhubs.EventProcessorStore"
  name: "EventProcessorStore"
  nameWithType: "EventProcessorStore"
  fullName: "com.azure.messaging.eventhubs.EventProcessorStore"
- uid: "com.azure.core.amqp.implementation.TracerProvider"
  spec.java:
  - uid: "com.azure.core.amqp.implementation.TracerProvider"
    name: "TracerProvider"
    fullName: "com.azure.core.amqp.implementation.TracerProvider"
- uid: "com.azure.messaging.eventhubs.EventProcessor.EventProcessor*"
  name: "EventProcessor"
  nameWithType: "EventProcessor.EventProcessor"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.EventProcessor"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventProcessor.getIdentifier*"
  name: "getIdentifier"
  nameWithType: "EventProcessor.getIdentifier"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.getIdentifier"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventProcessor.start*"
  name: "start"
  nameWithType: "EventProcessor.start"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.start"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventProcessor.stop*"
  name: "stop"
  nameWithType: "EventProcessor.stop"
  fullName: "com.azure.messaging.eventhubs.EventProcessor.stop"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor"
  name: "PartitionProcessor"
  nameWithType: "PartitionProcessor"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor"
- uid: "java.util.function.Supplier"
  name: "Supplier"
  nameWithType: "Supplier"
  fullName: "java.util.function.Supplier"
