### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.queue.CloudQueue"
  id: "CloudQueue"
  parent: "com.microsoft.azure.storage.queue"
  children:
  - "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.lang.String,com.microsoft.azure.storage.queue.CloudQueueClient)"
  - "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.net.URI)"
  - "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.queue.CloudQueue.addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  - "com.microsoft.azure.storage.queue.CloudQueue.addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.clear()"
  - "com.microsoft.azure.storage.queue.CloudQueue.clear(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.create()"
  - "com.microsoft.azure.storage.queue.CloudQueue.create(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists()"
  - "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.delete()"
  - "com.microsoft.azure.storage.queue.CloudQueue.delete(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists()"
  - "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  - "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()"
  - "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions()"
  - "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.exists()"
  - "com.microsoft.azure.storage.queue.CloudQueue.exists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String)"
  - "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getMetadata()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getName()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri()"
  - "com.microsoft.azure.storage.queue.CloudQueue.getUri()"
  - "com.microsoft.azure.storage.queue.CloudQueue.peekMessage()"
  - "com.microsoft.azure.storage.queue.CloudQueue.peekMessage(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int)"
  - "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage()"
  - "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int)"
  - "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage(boolean)"
  - "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int)"
  - "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,java.util.EnumSet<com.microsoft.azure.storage.queue.MessageUpdateFields>,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()"
  - "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions)"
  - "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudQueue"
  nameWithType: "CloudQueue"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue"
  type: "Class"
  package: "com.microsoft.azure.storage.queue"
  summary: "This class represents a queue in the Microsoft Azure Queue service."
  syntax:
    content: "public final class CloudQueue"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(com.microsoft.azure.storage.StorageUri)"
  id: "CloudQueue(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "CloudQueue(StorageUri uri)"
  nameWithType: "CloudQueue.CloudQueue(StorageUri uri)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(StorageUri uri)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates an instance of the `CloudQueue` class using the specified queue `StorageUri`. The queue `StorageUri` must include a SAS token."
  syntax:
    content: "public CloudQueue(StorageUri uri)"
    parameters:
    - id: "uri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the absolute URI of the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudQueue(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "CloudQueue(StorageUri uri, StorageCredentials credentials)"
  nameWithType: "CloudQueue.CloudQueue(StorageUri uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(StorageUri uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates an instance of the `CloudQueue` class using the specified queue `StorageUri` and credentials. If the `StorageUri` contains a SAS token, the credentials must be `null`."
  syntax:
    content: "public CloudQueue(StorageUri uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> object that represents the absolute URI of the queue."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.lang.String,com.microsoft.azure.storage.queue.CloudQueueClient)"
  id: "CloudQueue(java.lang.String,com.microsoft.azure.storage.queue.CloudQueueClient)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "CloudQueue(String queueName, CloudQueueClient client)"
  nameWithType: "CloudQueue.CloudQueue(String queueName, CloudQueueClient client)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(String queueName, CloudQueueClient client)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates an instance of the `CloudQueue` class using the specified name and client."
  syntax:
    content: "protected CloudQueue(String queueName, CloudQueueClient client)"
    parameters:
    - id: "queueName"
      type: "java.lang.String"
      description: "The name of the queue, which must adhere to queue naming rules. The queue name should not include any\n            path separator characters (/).\n            Queue names must be lowercase, between 3-63 characters long and must start with a letter or number.\n            Queue names may contain only letters, numbers, and the dash (-) character."
    - id: "client"
      type: "com.microsoft.azure.storage.queue.CloudQueueClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref> object that represents the associated service client, and that specifies\n            the endpoint for the Queue service."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.net.URI)"
  id: "CloudQueue(java.net.URI)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "CloudQueue(URI uri)"
  nameWithType: "CloudQueue.CloudQueue(URI uri)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(URI uri)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates an instance of the `CloudQueue` class using the specified queue URI. The queue `URI` must include a SAS token."
  syntax:
    content: "public CloudQueue(URI uri)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudQueue(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "CloudQueue(URI uri, StorageCredentials credentials)"
  nameWithType: "CloudQueue.CloudQueue(URI uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(URI uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates an instance of the `CloudQueue` class using the specified queue `URI` and credentials. If the `URI` contains a SAS token, the credentials must be `null`."
  syntax:
    content: "public CloudQueue(URI uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the queue."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  id: "addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "addMessage(CloudQueueMessage message)"
  nameWithType: "CloudQueue.addMessage(CloudQueueMessage message)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.addMessage(CloudQueueMessage message)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.addMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Adds a message to the back of the queue."
  syntax:
    content: "public void addMessage(CloudQueueMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that specifies the message to add.\n            The message object is modified to include the message ID and pop receipt,\n            and can be used in subsequent calls to updateMessage and deleteMessage."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "addMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "addMessage(CloudQueueMessage message, int timeToLiveInSeconds, int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.addMessage(CloudQueueMessage message, int timeToLiveInSeconds, int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.addMessage(CloudQueueMessage message, int timeToLiveInSeconds, int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.addMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Adds a message to the back of the queue with the specified options."
  syntax:
    content: "public void addMessage(CloudQueueMessage message, int timeToLiveInSeconds, int initialVisibilityDelayInSeconds, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that specifies the message to add.\n            The message object is modified to include the message ID and pop receipt,\n            and can be used in subsequent calls to updateMessage and deleteMessage."
    - id: "timeToLiveInSeconds"
      type: "int"
      description: "The maximum time to allow the message to be in the queue. A value of zero will set the time-to-live to\n            the service default value of seven days. A value of negative one will set an infinite time-to-live."
    - id: "initialVisibilityDelayInSeconds"
      type: "int"
      description: "The length of time during which the message will be invisible, starting when it is added to the queue,\n            or 0 to make the message visible immediately. This value must be greater than or equal to zero and\n            less than the time-to-live value."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.clear()"
  id: "clear()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "clear()"
  nameWithType: "CloudQueue.clear()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.clear()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.clear*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Clears all messages from the queue."
  syntax:
    content: "public void clear()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.clear(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "clear(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "clear(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.clear(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.clear(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.clear*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Clears all messages from the queue, using the specified request options and operation context."
  syntax:
    content: "public void clear(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.create()"
  id: "create()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "create()"
  nameWithType: "CloudQueue.create()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.create()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates the queue."
  syntax:
    content: "public void create()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.create(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "create(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "create(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.create(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.create(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates the queue, using the specified request options and operation context."
  syntax:
    content: "public void create(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists()"
  id: "createIfNotExists()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "createIfNotExists()"
  nameWithType: "CloudQueue.createIfNotExists()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates the queue if it does not already exist."
  syntax:
    content: "public boolean createIfNotExists()"
    return:
      type: "boolean"
      description: "A value of <code>true</code> if the queue is created in the storage service, otherwise <code>false</code>\n         ."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createIfNotExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "createIfNotExists(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.createIfNotExists(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Creates the queue if it does not already exist, using the specified request options and operation context."
  syntax:
    content: "public boolean createIfNotExists(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "A value of <code>true</code> if the queue is created in the storage service, otherwise <code>false</code>\n         ."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.delete()"
  id: "delete()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CloudQueue.delete()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.delete()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the queue."
  syntax:
    content: "public void delete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.delete(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "delete(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.delete(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.delete(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the queue, using the specified request options and operation context."
  syntax:
    content: "public void delete(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists()"
  id: "deleteIfExists()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "deleteIfExists()"
  nameWithType: "CloudQueue.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the queue if it exists."
  syntax:
    content: "public boolean deleteIfExists()"
    return:
      type: "boolean"
      description: "A value of <code>true</code> if the queue existed in the storage service and has been deleted, otherwise\n         <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "deleteIfExists(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.deleteIfExists(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the queue if it exists, using the specified request options and operation context."
  syntax:
    content: "public boolean deleteIfExists(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "A value of <code>true</code> if the queue existed in the storage service and has been deleted, otherwise\n         <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  id: "deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "deleteMessage(CloudQueueMessage message)"
  nameWithType: "CloudQueue.deleteMessage(CloudQueueMessage message)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(CloudQueueMessage message)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the specified message from the queue."
  syntax:
    content: "public void deleteMessage(CloudQueueMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that specifies the message to delete."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "deleteMessage(CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.deleteMessage(CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage(CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Deletes the specified message from the queue, using the specified request options and operation context."
  syntax:
    content: "public void deleteMessage(CloudQueueMessage message, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that specifies the message to delete."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()"
  id: "downloadAttributes()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "downloadAttributes()"
  nameWithType: "CloudQueue.downloadAttributes()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Downloads the queue's metadata and approximate message count value."
  syntax:
    content: "public void downloadAttributes()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAttributes(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "downloadAttributes(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.downloadAttributes(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Downloads the queue's metadata and approximate message count value, using the specified request options and operation context."
  syntax:
    content: "public void downloadAttributes(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue\" data-throw-if-not-resolved=\"false\">CloudQueue</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions()"
  id: "downloadPermissions()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "downloadPermissions()"
  nameWithType: "CloudQueue.downloadPermissions()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Downloads the permission settings for the queue."
  syntax:
    content: "public QueuePermissions downloadPermissions()"
    return:
      type: "com.microsoft.azure.storage.queue.QueuePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueuePermissions\" data-throw-if-not-resolved=\"false\">QueuePermissions</xref> object that represents the queue's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadPermissions(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "downloadPermissions(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.downloadPermissions(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Downloads the permissions settings for the queue using the specified request options and operation context."
  syntax:
    content: "public QueuePermissions downloadPermissions(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.queue.QueuePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueuePermissions\" data-throw-if-not-resolved=\"false\">QueuePermissions</xref> object that represents the container's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.exists()"
  id: "exists()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "exists()"
  nameWithType: "CloudQueue.exists()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.exists()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Returns a value that indicates whether the queue exists."
  syntax:
    content: "public boolean exists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the queue exists in the storage service, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.exists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "exists(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "exists(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.exists(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.exists(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Returns a value that indicates whether the queue existse, using the specified request options and operation context."
  syntax:
    content: "public boolean exists(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the queue exists in the storage service, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier)"
  nameWithType: "CloudQueue.generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Returns a shared access signature for the queue."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.queue.SharedAccessQueuePolicy"
      description: "The access policy for the shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A queue-level access policy."
    return:
      type: "java.lang.String"
      description: "A shared access signature for the queue."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If an invalid key was passed."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an invalid key was passed."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.queue.SharedAccessQueuePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudQueue.generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Returns a shared access signature for the queue."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessQueuePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.queue.SharedAccessQueuePolicy"
      description: "The access policy for the shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A queue-level access policy."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A shared access signature for the queue."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If an invalid key was passed."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an invalid key was passed."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount()"
  id: "getApproximateMessageCount()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getApproximateMessageCount()"
  nameWithType: "CloudQueue.getApproximateMessageCount()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the approximate messages count of the queue. This value is initialized by a request to <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes*\" data-throw-if-not-resolved=\"false\">#downloadAttributes</xref> and represents the approximate message count when that request completed."
  syntax:
    content: "public long getApproximateMessageCount()"
    return:
      type: "long"
      description: "A <code>Long</code> object that represents the approximate messages count of the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getMetadata()"
  id: "getMetadata()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "CloudQueue.getMetadata()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getMetadata()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the metadata collection for the queue as stored in this `CloudQueue` object. This value is initialized with the metadata from the queue by a call to <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes*\" data-throw-if-not-resolved=\"false\">#downloadAttributes</xref>, and is set on the queue with a call to <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref>."
  syntax:
    content: "public HashMap<String,String> getMetadata()"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata for the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getName()"
  id: "getName()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CloudQueue.getName()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getName()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getName*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the name of the queue."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the name of the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient()"
  id: "getServiceClient()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getServiceClient()"
  nameWithType: "CloudQueue.getServiceClient()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the queue service client associated with this queue."
  syntax:
    content: "public CloudQueueClient getServiceClient()"
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref> object that represents the service client associated with this queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage()"
  id: "getShouldEncodeMessage()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getShouldEncodeMessage()"
  nameWithType: "CloudQueue.getShouldEncodeMessage()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the value indicating whether the message should be base-64 encoded."
  syntax:
    content: "public boolean getShouldEncodeMessage()"
    return:
      type: "boolean"
      description: "A <code>Boolean</code> that represents whether the message should be base-64 encoded."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "CloudQueue.getStorageUri()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Returns the list of URIs for all locations."
  syntax:
    content: "public final StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>StorageUri</code> that represents the list of URIs for all locations.."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getUri()"
  id: "getUri()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "getUri()"
  nameWithType: "CloudQueue.getUri()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getUri()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Gets the absolute URI for this queue."
  syntax:
    content: "public URI getUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the URI for this queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage()"
  id: "peekMessage()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "peekMessage()"
  nameWithType: "CloudQueue.peekMessage()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Peeks a message from the queue. A peek request retrieves a message from the front of the queue without changing its visibility."
  syntax:
    content: "public CloudQueueMessage peekMessage()"
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "An <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that represents a message in this queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "peekMessage(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "peekMessage(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.peekMessage(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Peeks a message from the queue, using the specified request options and operation context. A peek request retrieves a message from the front of the queue without changing its visibility."
  syntax:
    content: "public CloudQueueMessage peekMessage(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "An <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that represents the requested message from the queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int)"
  id: "peekMessages(int)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "peekMessages(int numberOfMessages)"
  nameWithType: "CloudQueue.peekMessages(int numberOfMessages)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int numberOfMessages)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Peeks a specified number of messages from the queue. A peek request retrieves messages from the front of the queue without changing their visibility."
  syntax:
    content: "public Iterable<CloudQueueMessage> peekMessages(int numberOfMessages)"
    parameters:
    - id: "numberOfMessages"
      type: "int"
      description: "The number of messages to retrieve."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.queue.CloudQueueMessage>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> objects that represents the requested messages from\n         the queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "peekMessages(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "peekMessages(int numberOfMessages, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.peekMessages(int numberOfMessages, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages(int numberOfMessages, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Peeks a set of messages from the queue, using the specified request options and operation context. A peek request retrieves messages from the front of the queue without changing their visibility."
  syntax:
    content: "public Iterable<CloudQueueMessage> peekMessages(int numberOfMessages, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "numberOfMessages"
      type: "int"
      description: "The number of messages to retrieve."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.queue.CloudQueueMessage>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> objects that represents the requested messages from\n         the queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage()"
  id: "retrieveMessage()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "retrieveMessage()"
  nameWithType: "CloudQueue.retrieveMessage()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Retrieves a message from the front of the queue using the default request options. This operation marks the retrieved message as invisible in the queue for the default visibility timeout period."
  syntax:
    content: "public CloudQueueMessage retrieveMessage()"
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "An <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that represents a message in this queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "retrieveMessage(int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "retrieveMessage(int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.retrieveMessage(int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage(int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Retrieves a message from the front of the queue, using the specified request options and operation context. This operation marks the retrieved message as invisible in the queue for the specified visibility timeout period."
  syntax:
    content: "public CloudQueueMessage retrieveMessage(int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "visibilityTimeoutInSeconds"
      type: "int"
      description: "Specifies the visibility timeout for the message, in seconds."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "An <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> object that represents a message in this queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int)"
  id: "retrieveMessages(int)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "retrieveMessages(int numberOfMessages)"
  nameWithType: "CloudQueue.retrieveMessages(int numberOfMessages)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int numberOfMessages)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Retrieves the specified number of messages from the front of the queue using the default request options. This operation marks the retrieved messages as invisible in the queue for the default visibility timeout period."
  syntax:
    content: "public Iterable<CloudQueueMessage> retrieveMessages(int numberOfMessages)"
    parameters:
    - id: "numberOfMessages"
      type: "int"
      description: "The number of messages to retrieve."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.queue.CloudQueueMessage>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> objects that represents the retrieved messages from\n         the queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "retrieveMessages(int,int,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "retrieveMessages(int numberOfMessages, int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.retrieveMessages(int numberOfMessages, int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages(int numberOfMessages, int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Retrieves the specified number of messages from the front of the queue using the specified request options and operation context. This operation marks the retrieved messages as invisible in the queue for the default visibility timeout period."
  syntax:
    content: "public Iterable<CloudQueueMessage> retrieveMessages(int numberOfMessages, int visibilityTimeoutInSeconds, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "numberOfMessages"
      type: "int"
      description: "The number of messages to retrieve."
    - id: "visibilityTimeoutInSeconds"
      type: "int"
      description: "Specifies the visibility timeout for the retrieved messages, in seconds."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.queue.CloudQueueMessage>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> objects that represents the messages retrieved from\n         the queue."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "setMetadata(HashMap<String,String> metadata)"
  nameWithType: "CloudQueue.setMetadata(HashMap<String,String> metadata)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.setMetadata(HashMap<String,String> metadata)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.setMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Sets the metadata collection of name-value pairs to be set on the queue with an <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call. This collection will overwrite any existing queue metadata. If this is set to an empty collection, the queue metadata will be cleared on an <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call."
  syntax:
    content: "public void setMetadata(HashMap<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata being assigned to the queue."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage(boolean)"
  id: "setShouldEncodeMessage(boolean)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "setShouldEncodeMessage(boolean shouldEncodeMessage)"
  nameWithType: "CloudQueue.setShouldEncodeMessage(boolean shouldEncodeMessage)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage(boolean shouldEncodeMessage)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Sets the flag indicating whether the message should be base-64 encoded."
  syntax:
    content: "public void setShouldEncodeMessage(boolean shouldEncodeMessage)"
    parameters:
    - id: "shouldEncodeMessage"
      type: "boolean"
      description: "The value indicates whether the message should be base-64 encoded."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int)"
  id: "updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds)"
  nameWithType: "CloudQueue.updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Updates the specified message in the queue with a new visibility timeout value in seconds."
  syntax:
    content: "public void updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "The <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> to update in the queue."
    - id: "visibilityTimeoutInSeconds"
      type: "int"
      description: "Specifies the new visibility timeout for the message, in seconds."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,java.util.EnumSet<com.microsoft.azure.storage.queue.MessageUpdateFields>,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "updateMessage(com.microsoft.azure.storage.queue.CloudQueueMessage,int,java.util.EnumSet<com.microsoft.azure.storage.queue.MessageUpdateFields>,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds, EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds, EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds, EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Updates a message in the queue, using the specified request options and operation context."
  syntax:
    content: "public void updateMessage(CloudQueueMessage message, int visibilityTimeoutInSeconds, EnumSet<MessageUpdateFields> messageUpdateFields, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.storage.queue.CloudQueueMessage"
      description: "The <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\">CloudQueueMessage</xref> to update in the queue."
    - id: "visibilityTimeoutInSeconds"
      type: "int"
      description: "Specifies the new visibility timeout for the message, in seconds."
    - id: "messageUpdateFields"
      type: "java.util.EnumSet<com.microsoft.azure.storage.queue.MessageUpdateFields>"
      description: "An <code>EnumSet</code> of <xref uid=\"com.microsoft.azure.storage.queue.MessageUpdateFields\" data-throw-if-not-resolved=\"false\">MessageUpdateFields</xref> values that specifies which parts of the\n            message are to be updated."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()"
  id: "uploadMetadata()"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "uploadMetadata()"
  nameWithType: "CloudQueue.uploadMetadata()"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata()"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Uploads the metadata in the `CloudQueue` object to the queue."
  syntax:
    content: "public void uploadMetadata()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadMetadata(com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "uploadMetadata(QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.uploadMetadata(QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata(QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Uploads the metadata in the `CloudQueue` object to the queue, using the specified request options and operation context."
  syntax:
    content: "public void uploadMetadata(QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions)"
  id: "uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "uploadPermissions(QueuePermissions permissions)"
  nameWithType: "CloudQueue.uploadPermissions(QueuePermissions permissions)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(QueuePermissions permissions)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Uploads the queue's permissions."
  syntax:
    content: "public void uploadPermissions(QueuePermissions permissions)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.queue.QueuePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueuePermissions\" data-throw-if-not-resolved=\"false\">QueuePermissions</xref> object that represents the permissions to upload."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadPermissions(com.microsoft.azure.storage.queue.QueuePermissions,com.microsoft.azure.storage.queue.QueueRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.queue.CloudQueue"
  langs:
  - "java"
  name: "uploadPermissions(QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudQueue.uploadPermissions(QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions(QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.queue"
  summary: "Uploads the queue's permissions using the specified request options and operation context."
  syntax:
    content: "public void uploadPermissions(QueuePermissions permissions, QueueRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.queue.QueuePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueuePermissions\" data-throw-if-not-resolved=\"false\">QueuePermissions</xref> object that represents the permissions to upload."
    - id: "options"
      type: "com.microsoft.azure.storage.queue.QueueRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.queue.QueueRequestOptions\" data-throw-if-not-resolved=\"false\">QueueRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.queue.CloudQueueClient\" data-throw-if-not-resolved=\"false\">CloudQueueClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue*"
  name: "CloudQueue"
  nameWithType: "CloudQueue.CloudQueue"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.CloudQueue"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.queue.CloudQueueClient"
  name: "CloudQueueClient"
  nameWithType: "CloudQueueClient"
  fullName: "com.microsoft.azure.storage.queue.CloudQueueClient"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.queue.CloudQueueMessage"
  name: "CloudQueueMessage"
  nameWithType: "CloudQueueMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueueMessage"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.addMessage*"
  name: "addMessage"
  nameWithType: "CloudQueue.addMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.addMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.queue.QueueRequestOptions"
  name: "QueueRequestOptions"
  nameWithType: "QueueRequestOptions"
  fullName: "com.microsoft.azure.storage.queue.QueueRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.clear*"
  name: "clear"
  nameWithType: "CloudQueue.clear"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.clear"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.create*"
  name: "create"
  nameWithType: "CloudQueue.create"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.create"
  package: "com.microsoft.azure.storage.queue"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists*"
  name: "createIfNotExists"
  nameWithType: "CloudQueue.createIfNotExists"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.createIfNotExists"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.delete*"
  name: "delete"
  nameWithType: "CloudQueue.delete"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.delete"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists*"
  name: "deleteIfExists"
  nameWithType: "CloudQueue.deleteIfExists"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteIfExists"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage*"
  name: "deleteMessage"
  nameWithType: "CloudQueue.deleteMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.deleteMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes*"
  name: "downloadAttributes"
  nameWithType: "CloudQueue.downloadAttributes"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadAttributes"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.exists*"
  name: "exists"
  nameWithType: "CloudQueue.exists"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.exists"
  package: "com.microsoft.azure.storage.queue"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount*"
  name: "getApproximateMessageCount"
  nameWithType: "CloudQueue.getApproximateMessageCount"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getApproximateMessageCount"
  package: "com.microsoft.azure.storage.queue"
- uid: "java.util.HashMap<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getMetadata*"
  name: "getMetadata"
  nameWithType: "CloudQueue.getMetadata"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getMetadata"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getName*"
  name: "getName"
  nameWithType: "CloudQueue.getName"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getName"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient*"
  name: "getServiceClient"
  nameWithType: "CloudQueue.getServiceClient"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getServiceClient"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage*"
  name: "getShouldEncodeMessage"
  nameWithType: "CloudQueue.getShouldEncodeMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getShouldEncodeMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "CloudQueue.getStorageUri"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getStorageUri"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.getUri*"
  name: "getUri"
  nameWithType: "CloudQueue.getUri"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.getUri"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage*"
  name: "peekMessage"
  nameWithType: "CloudQueue.peekMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "java.lang.Iterable<com.microsoft.azure.storage.queue.CloudQueueMessage>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.queue.CloudQueueMessage"
    name: "CloudQueueMessage"
    fullName: "com.microsoft.azure.storage.queue.CloudQueueMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages*"
  name: "peekMessages"
  nameWithType: "CloudQueue.peekMessages"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.peekMessages"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage*"
  name: "retrieveMessage"
  nameWithType: "CloudQueue.retrieveMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages*"
  name: "retrieveMessages"
  nameWithType: "CloudQueue.retrieveMessages"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.retrieveMessages"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.setMetadata*"
  name: "setMetadata"
  nameWithType: "CloudQueue.setMetadata"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.setMetadata"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage*"
  name: "setShouldEncodeMessage"
  nameWithType: "CloudQueue.setShouldEncodeMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.setShouldEncodeMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage*"
  name: "updateMessage"
  nameWithType: "CloudQueue.updateMessage"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.updateMessage"
  package: "com.microsoft.azure.storage.queue"
- uid: "java.util.EnumSet<com.microsoft.azure.storage.queue.MessageUpdateFields>"
  spec.java:
  - uid: "java.util.EnumSet"
    name: "EnumSet"
    fullName: "java.util.EnumSet"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.queue.MessageUpdateFields"
    name: "MessageUpdateFields"
    fullName: "com.microsoft.azure.storage.queue.MessageUpdateFields"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata*"
  name: "uploadMetadata"
  nameWithType: "CloudQueue.uploadMetadata"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadMetadata"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.QueuePermissions"
  name: "QueuePermissions"
  nameWithType: "QueuePermissions"
  fullName: "com.microsoft.azure.storage.queue.QueuePermissions"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions*"
  name: "uploadPermissions"
  nameWithType: "CloudQueue.uploadPermissions"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.uploadPermissions"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions*"
  name: "downloadPermissions"
  nameWithType: "CloudQueue.downloadPermissions"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.downloadPermissions"
  package: "com.microsoft.azure.storage.queue"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.queue.SharedAccessQueuePolicy"
  name: "SharedAccessQueuePolicy"
  nameWithType: "SharedAccessQueuePolicy"
  fullName: "com.microsoft.azure.storage.queue.SharedAccessQueuePolicy"
- uid: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudQueue.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.queue.CloudQueue.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage.queue"
- uid: "com.microsoft.azure.storage.IPRange"
  name: "IPRange"
  nameWithType: "IPRange"
  fullName: "com.microsoft.azure.storage.IPRange"
- uid: "com.microsoft.azure.storage.SharedAccessProtocols"
  name: "SharedAccessProtocols"
  nameWithType: "SharedAccessProtocols"
  fullName: "com.microsoft.azure.storage.SharedAccessProtocols"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.microsoft.azure.storage.queue.MessageUpdateFields"
  name: "MessageUpdateFields"
  nameWithType: "MessageUpdateFields"
  fullName: "com.microsoft.azure.storage.queue.MessageUpdateFields"
- uid: "java.util.EnumSet"
  name: "EnumSet"
  nameWithType: "EnumSet"
  fullName: "java.util.EnumSet"
