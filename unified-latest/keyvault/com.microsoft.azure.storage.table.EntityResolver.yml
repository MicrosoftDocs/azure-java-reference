### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.EntityResolver"
  id: "EntityResolver"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.EntityResolver.resolve(java.lang.String,java.lang.String,java.util.Date,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,java.lang.String)"
  langs:
  - "java"
  name: "EntityResolver<T>"
  nameWithType: "EntityResolver<T>"
  fullName: "com.microsoft.azure.storage.table.EntityResolver<T>"
  type: "Interface"
  package: "com.microsoft.azure.storage.table"
  summary: "An interface to perform client side projection on a retrieved entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance must implement a `resolve` method projecting the entity data represented by the parameters passed in as a new instance of the type specified by the type parameter.\n\nThis interface is useful for converting directly from table entity data to a client object type without requiring a separate table entity class type that deserializes every property individually. For example, a client can perform a client side projection of a *Customer* entity by simply returning the `String` for the *CustomerName* property of each entity. The result of this projection will be a collection of `String`s containing each customer name."
  syntax:
    content: "public interface EntityResolver<T>"
    typeParameters:
    - id: "T"
- uid: "com.microsoft.azure.storage.table.EntityResolver.resolve(java.lang.String,java.lang.String,java.util.Date,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,java.lang.String)"
  id: "resolve(java.lang.String,java.lang.String,java.util.Date,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,java.lang.String)"
  parent: "com.microsoft.azure.storage.table.EntityResolver"
  langs:
  - "java"
  name: "resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String,EntityProperty> properties, String etag)"
  nameWithType: "EntityResolver<T>.resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String,EntityProperty> properties, String etag)"
  fullName: "com.microsoft.azure.storage.table.EntityResolver<T>.resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String,EntityProperty> properties, String etag)"
  overload: "com.microsoft.azure.storage.table.EntityResolver.resolve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns a reference to a new object instance of type `T` containing a projection of the specified table entity data."
  syntax:
    content: "public abstract T resolve(String partitionKey, String rowKey, Date timeStamp, HashMap<String,EntityProperty> properties, String etag)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the PartitionKey value for the entity."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the RowKey value for the entity."
    - id: "timeStamp"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> containing the Timestamp value for the entity."
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>\n            data type and value pairs representing the table entity data."
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> containing the Etag for the entity."
    return:
      type: "T"
      description: "A reference to an object instance of type <code>T</code> constructed as a projection of the table entity\n         parameters."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs during the operation."
references:
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.table.EntityProperty"
    name: "EntityProperty"
    fullName: "com.microsoft.azure.storage.table.EntityProperty"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.microsoft.azure.storage.table.EntityResolver.resolve*"
  name: "resolve"
  nameWithType: "EntityResolver<T>.resolve"
  fullName: "com.microsoft.azure.storage.table.EntityResolver<T>.resolve"
  package: "com.microsoft.azure.storage.table"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
  name: "String,EntityProperty"
  nameWithType: "String,EntityProperty"
  fullName: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
