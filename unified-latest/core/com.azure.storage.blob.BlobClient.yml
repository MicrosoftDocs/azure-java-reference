### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.BlobClient"
  id: "BlobClient"
  parent: "com.azure.storage.blob"
  children:
  - "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  - "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  - "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  - "com.azure.storage.blob.BlobClient.BlobClient(com.azure.storage.blob.BlobAsyncClient)"
  - "com.azure.storage.blob.BlobClient.getAppendBlobClient()"
  - "com.azure.storage.blob.BlobClient.getBlockBlobClient()"
  - "com.azure.storage.blob.BlobClient.getPageBlobClient()"
  - "com.azure.storage.blob.BlobClient.getSnapshotClient(java.lang.String)"
  - "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String)"
  - "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,boolean)"
  - "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  langs:
  - "java"
  name: "BlobClient"
  nameWithType: "BlobClient"
  fullName: "com.azure.storage.blob.BlobClient"
  type: "Class"
  package: "com.azure.storage.blob"
  summary: "This class provides a client that contains generic blob operations for Azure Storage Blobs. Operations allowed by the client are uploading and downloading, copying a blob, retrieving and setting metadata, retrieving and setting HTTP headers, and deleting and un-deleting a blob.\n\nThis client is instantiated through <xref uid=\"com.azure.storage.blob.BlobClientBuilder\" data-throw-if-not-resolved=\"false\">BlobClientBuilder</xref> or retrieved via <xref uid=\"com.azure.storage.blob.BlobContainerClient.getBlobClient(java.lang.String)\" data-throw-if-not-resolved=\"false\">getBlobClient</xref>.\n\nFor operations on a specific blob type (i.e append, block, or page) use <xref uid=\"com.azure.storage.blob.BlobClient.getAppendBlobClient()\" data-throw-if-not-resolved=\"false\">getAppendBlobClient</xref>, <xref uid=\"com.azure.storage.blob.BlobClient.getBlockBlobClient()\" data-throw-if-not-resolved=\"false\">getBlockBlobClient</xref>, or <xref uid=\"com.azure.storage.blob.BlobClient.getPageBlobClient()\" data-throw-if-not-resolved=\"false\">getPageBlobClient</xref> to construct a client that allows blob specific operations.\n\nPlease refer to the [Azure Docs][] for more information.\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs"
  syntax:
    content: "public class BlobClient extends BlobClientBase"
  inheritance:
  - "java.lang.Object"
  - "com.azure.storage.blob.specialized.BlobClientBase"
  inheritedMembers:
  - "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)"
  - "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)"
  - "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  - "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)"
  - "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()"
  - "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.delete()"
  - "com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)"
  - "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)"
  - "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.exists()"
  - "com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.getAccountName()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getBlobName()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getContainerName()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getProperties()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()"
  - "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)"
  - "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()"
  - "com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()"
  - "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
  - "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.blob.specialized.BlobClientBase.undelete()"
  - "com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  id: "BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  nameWithType: "BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
  type: "Field"
  package: "com.azure.storage.blob"
  summary: "If a blob is known to be greater than 100MB, using a larger block size will trigger some server-side optimizations. If the block size is not set and the size of the blob is known to be greater than 100MB, this value will be used."
  syntax:
    content: "public static final int BLOB_DEFAULT_HTBB_UPLOAD_BLOCK_SIZE"
    return:
      type: "int"
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  id: "BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  nameWithType: "BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_NUMBER_OF_BUFFERS"
  type: "Field"
  package: "com.azure.storage.blob"
  summary: "The number of buffers to use if none is specied on the buffered upload method."
  syntax:
    content: "public static final int BLOB_DEFAULT_NUMBER_OF_BUFFERS"
    return:
      type: "int"
- uid: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  id: "BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  nameWithType: "BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  fullName: "com.azure.storage.blob.BlobClient.BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
  type: "Field"
  package: "com.azure.storage.blob"
  summary: "The block size to use if none is specified in parallel operations."
  syntax:
    content: "public static final int BLOB_DEFAULT_UPLOAD_BLOCK_SIZE"
    return:
      type: "int"
- uid: "com.azure.storage.blob.BlobClient.BlobClient(com.azure.storage.blob.BlobAsyncClient)"
  id: "BlobClient(com.azure.storage.blob.BlobAsyncClient)"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "BlobClient(BlobAsyncClient client)"
  nameWithType: "BlobClient.BlobClient(BlobAsyncClient client)"
  fullName: "com.azure.storage.blob.BlobClient.BlobClient(BlobAsyncClient client)"
  overload: "com.azure.storage.blob.BlobClient.BlobClient*"
  type: "Constructor"
  package: "com.azure.storage.blob"
  summary: "Protected constructor for use by <xref uid=\"com.azure.storage.blob.BlobClientBuilder\" data-throw-if-not-resolved=\"false\">BlobClientBuilder</xref>."
  syntax:
    content: "protected BlobClient(BlobAsyncClient client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.blob.BlobAsyncClient"
      description: "the async blob client"
- uid: "com.azure.storage.blob.BlobClient.getAppendBlobClient()"
  id: "getAppendBlobClient()"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "getAppendBlobClient()"
  nameWithType: "BlobClient.getAppendBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getAppendBlobClient()"
  overload: "com.azure.storage.blob.BlobClient.getAppendBlobClient*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\">AppendBlobClient</xref> associated with this blob."
  syntax:
    content: "public AppendBlobClient getAppendBlobClient()"
    return:
      type: "com.azure.storage.blob.specialized.AppendBlobClient"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.AppendBlobClient\" data-throw-if-not-resolved=\"false\">AppendBlobClient</xref> associated with this blob."
- uid: "com.azure.storage.blob.BlobClient.getBlockBlobClient()"
  id: "getBlockBlobClient()"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "getBlockBlobClient()"
  nameWithType: "BlobClient.getBlockBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getBlockBlobClient()"
  overload: "com.azure.storage.blob.BlobClient.getBlockBlobClient*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\">BlockBlobClient</xref> associated with this blob."
  syntax:
    content: "public BlockBlobClient getBlockBlobClient()"
    return:
      type: "com.azure.storage.blob.specialized.BlockBlobClient"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient\" data-throw-if-not-resolved=\"false\">BlockBlobClient</xref> associated with this blob."
- uid: "com.azure.storage.blob.BlobClient.getPageBlobClient()"
  id: "getPageBlobClient()"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "getPageBlobClient()"
  nameWithType: "BlobClient.getPageBlobClient()"
  fullName: "com.azure.storage.blob.BlobClient.getPageBlobClient()"
  overload: "com.azure.storage.blob.BlobClient.getPageBlobClient*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\">PageBlobClient</xref> associated with this blob."
  syntax:
    content: "public PageBlobClient getPageBlobClient()"
    return:
      type: "com.azure.storage.blob.specialized.PageBlobClient"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.PageBlobClient\" data-throw-if-not-resolved=\"false\">PageBlobClient</xref> associated with this blob."
- uid: "com.azure.storage.blob.BlobClient.getSnapshotClient(java.lang.String)"
  id: "getSnapshotClient(java.lang.String)"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "getSnapshotClient(String snapshot)"
  nameWithType: "BlobClient.getSnapshotClient(String snapshot)"
  fullName: "com.azure.storage.blob.BlobClient.getSnapshotClient(String snapshot)"
  overload: "com.azure.storage.blob.BlobClient.getSnapshotClient*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\">BlobClient</xref> linked to the `snapshot` of this blob resource."
  syntax:
    content: "public BlobClient getSnapshotClient(String snapshot)"
    parameters:
    - id: "snapshot"
      type: "java.lang.String"
      description: "the identifier for a specific snapshot of this blob"
    return:
      type: "com.azure.storage.blob.BlobClient"
      description: "A <xref uid=\"com.azure.storage.blob.BlobClient\" data-throw-if-not-resolved=\"false\">BlobClient</xref> used to interact with the specific snapshot."
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String)"
  id: "uploadFromFile(java.lang.String)"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "uploadFromFile(String filePath)"
  nameWithType: "BlobClient.uploadFromFile(String filePath)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath)"
  overload: "com.azure.storage.blob.BlobClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new block blob. By default this method will not overwrite an existing blob.\n\n**Code Samples**\n\n\\{@codesnippet com.azure.storage.blob.BlobClient.uploadFromFile\\#String\\}"
  syntax:
    content: "public void uploadFromFile(String filePath)"
    parameters:
    - id: "filePath"
      type: "java.lang.String"
      description: "Path of the file to upload"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,boolean)"
  id: "uploadFromFile(java.lang.String,boolean)"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "uploadFromFile(String filePath, boolean overwrite)"
  nameWithType: "BlobClient.uploadFromFile(String filePath, boolean overwrite)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath, boolean overwrite)"
  overload: "com.azure.storage.blob.BlobClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n\\{@codesnippet com.azure.storage.blob.BlobClient.uploadFromFile\\#String-boolean\\}"
  syntax:
    content: "public void uploadFromFile(String filePath, boolean overwrite)"
    parameters:
    - id: "filePath"
      type: "java.lang.String"
      description: "Path of the file to upload"
    - id: "overwrite"
      type: "boolean"
      description: "Whether or not to overwrite, should the blob already exist"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  id: "uploadFromFile(java.lang.String,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  parent: "com.azure.storage.blob.BlobClient"
  langs:
  - "java"
  name: "uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  nameWithType: "BlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
  overload: "com.azure.storage.blob.BlobClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.blob"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch(java.lang.String)\" data-throw-if-not-resolved=\"false\">BlobRequestConditions#setIfNoneMatch(String)</xref>.\n\n**Code Samples**\n\n\\{@codesnippet com.azure.storage.blob.BlobClient.uploadFromFile\\#String-ParallelTransferOptions-BlobHttpHeaders-Map-AccessTier-BlobRequestConditions-Duration\\}"
  syntax:
    content: "public void uploadFromFile(String filePath, ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions, Duration timeout)"
    parameters:
    - id: "filePath"
      type: "java.lang.String"
      description: "Path of the file to upload"
    - id: "parallelTransferOptions"
      type: "com.azure.storage.blob.models.ParallelTransferOptions"
      description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\">ParallelTransferOptions</xref> to use to upload from file. Number of parallel\n        transfers parameter is ignored."
    - id: "headers"
      type: "com.azure.storage.blob.models.BlobHttpHeaders"
      description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\">BlobHttpHeaders</xref>"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Metadata to associate with the blob."
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
      description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\">AccessTier</xref> for the uploaded blob"
    - id: "requestConditions"
      type: "com.azure.storage.blob.models.BlobRequestConditions"
      description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\">BlobRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be raised."
references:
- uid: "com.azure.storage.blob.BlobAsyncClient"
  name: "BlobAsyncClient"
  nameWithType: "BlobAsyncClient"
  fullName: "com.azure.storage.blob.BlobAsyncClient"
- uid: "com.azure.storage.blob.BlobClient.BlobClient*"
  name: "BlobClient"
  nameWithType: "BlobClient.BlobClient"
  fullName: "com.azure.storage.blob.BlobClient.BlobClient"
  package: "com.azure.storage.blob"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.blob.BlobClient.getSnapshotClient*"
  name: "getSnapshotClient"
  nameWithType: "BlobClient.getSnapshotClient"
  fullName: "com.azure.storage.blob.BlobClient.getSnapshotClient"
  package: "com.azure.storage.blob"
- uid: "com.azure.storage.blob.specialized.AppendBlobClient"
  name: "AppendBlobClient"
  nameWithType: "AppendBlobClient"
  fullName: "com.azure.storage.blob.specialized.AppendBlobClient"
- uid: "com.azure.storage.blob.BlobClient.getAppendBlobClient*"
  name: "getAppendBlobClient"
  nameWithType: "BlobClient.getAppendBlobClient"
  fullName: "com.azure.storage.blob.BlobClient.getAppendBlobClient"
  package: "com.azure.storage.blob"
- uid: "com.azure.storage.blob.specialized.BlockBlobClient"
  name: "BlockBlobClient"
  nameWithType: "BlockBlobClient"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient"
- uid: "com.azure.storage.blob.BlobClient.getBlockBlobClient*"
  name: "getBlockBlobClient"
  nameWithType: "BlobClient.getBlockBlobClient"
  fullName: "com.azure.storage.blob.BlobClient.getBlockBlobClient"
  package: "com.azure.storage.blob"
- uid: "com.azure.storage.blob.specialized.PageBlobClient"
  name: "PageBlobClient"
  nameWithType: "PageBlobClient"
  fullName: "com.azure.storage.blob.specialized.PageBlobClient"
- uid: "com.azure.storage.blob.BlobClient.getPageBlobClient*"
  name: "getPageBlobClient"
  nameWithType: "BlobClient.getPageBlobClient"
  fullName: "com.azure.storage.blob.BlobClient.getPageBlobClient"
  package: "com.azure.storage.blob"
- uid: "com.azure.storage.blob.BlobClient.uploadFromFile*"
  name: "uploadFromFile"
  nameWithType: "BlobClient.uploadFromFile"
  fullName: "com.azure.storage.blob.BlobClient.uploadFromFile"
  package: "com.azure.storage.blob"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.blob.models.ParallelTransferOptions"
  name: "ParallelTransferOptions"
  nameWithType: "ParallelTransferOptions"
  fullName: "com.azure.storage.blob.models.ParallelTransferOptions"
- uid: "com.azure.storage.blob.models.BlobHttpHeaders"
  name: "BlobHttpHeaders"
  nameWithType: "BlobHttpHeaders"
  fullName: "com.azure.storage.blob.models.BlobHttpHeaders"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.models.AccessTier"
  name: "AccessTier"
  nameWithType: "AccessTier"
  fullName: "com.azure.storage.blob.models.AccessTier"
- uid: "com.azure.storage.blob.models.BlobRequestConditions"
  name: "BlobRequestConditions"
  nameWithType: "BlobRequestConditions"
  fullName: "com.azure.storage.blob.models.BlobRequestConditions"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.blob.specialized.BlobClientBase"
  name: "BlobClientBase"
  nameWithType: "BlobClientBase"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.exists()"
  name: "BlobClientBase.exists()"
  nameWithType: "BlobClientBase.exists()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.exists()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)"
  name: "BlobClientBase.setAccessTier(AccessTier)"
  nameWithType: "BlobClientBase.setAccessTier(AccessTier)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTier(com.azure.storage.blob.models.AccessTier)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  name: "BlobClientBase.setHttpHeaders(BlobHttpHeaders)"
  nameWithType: "BlobClientBase.setHttpHeaders(BlobHttpHeaders)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)"
  nameWithType: "BlobClientBase.abortCopyFromUrlWithResponse(String,String,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrlWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)"
  name: "BlobClientBase.download(OutputStream)"
  nameWithType: "BlobClientBase.download(OutputStream)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.download(java.io.OutputStream)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.createSnapshotWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.undeleteWithResponse(Duration,Context)"
  nameWithType: "BlobClientBase.undeleteWithResponse(Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.undeleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()"
  name: "BlobClientBase.getBlobUrl()"
  nameWithType: "BlobClientBase.getBlobUrl()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getBlobUrl()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)"
  nameWithType: "BlobClientBase.downloadWithResponse(OutputStream,BlobRange,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadWithResponse(java.io.OutputStream,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getBlobName()"
  name: "BlobClientBase.getBlobName()"
  nameWithType: "BlobClientBase.getBlobName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getBlobName()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.getAccountInfoWithResponse(Duration,Context)"
  nameWithType: "BlobClientBase.getAccountInfoWithResponse(Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfoWithResponse(java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)"
  name: "BlobClientBase.copyFromUrl(String)"
  nameWithType: "BlobClientBase.copyFromUrl(String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrl(java.lang.String)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()"
  name: "BlobClientBase.getHttpPipeline()"
  nameWithType: "BlobClientBase.getHttpPipeline()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getHttpPipeline()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
  name: "BlobClientBase.openInputStream()"
  nameWithType: "BlobClientBase.openInputStream()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()"
  name: "BlobClientBase.getSnapshotId()"
  nameWithType: "BlobClientBase.getSnapshotId()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotId()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)"
  nameWithType: "BlobClientBase.setAccessTierWithResponse(AccessTier,RehydratePriority,String,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setAccessTierWithResponse(com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getProperties()"
  name: "BlobClientBase.getProperties()"
  nameWithType: "BlobClientBase.getProperties()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getProperties()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)"
  name: "BlobClientBase.abortCopyFromUrl(String)"
  nameWithType: "BlobClientBase.abortCopyFromUrl(String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.abortCopyFromUrl(java.lang.String)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()"
  name: "BlobClientBase.getCustomerProvidedKey()"
  nameWithType: "BlobClientBase.getCustomerProvidedKey()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getCustomerProvidedKey()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.setHttpHeadersWithResponse(BlobHttpHeaders,BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setHttpHeadersWithResponse(com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  name: "BlobClientBase.setMetadata(Map<String,String>)"
  nameWithType: "BlobClientBase.setMetadata(Map<String,String>)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.deleteWithResponse(DeleteSnapshotsOptionType,BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.deleteWithResponse(com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.undelete()"
  name: "BlobClientBase.undelete()"
  nameWithType: "BlobClientBase.undelete()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.undelete()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  name: "BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)"
  nameWithType: "BlobClientBase.beginCopy(String,Map<String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.copyFromUrlWithResponse(String,Map<String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)"
  name: "BlobClientBase.getSnapshotClient(String)"
  nameWithType: "BlobClientBase.getSnapshotClient(String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getSnapshotClient(java.lang.String)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.getPropertiesWithResponse(BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getPropertiesWithResponse(com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.delete()"
  name: "BlobClientBase.delete()"
  nameWithType: "BlobClientBase.delete()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.delete()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountName()"
  name: "BlobClientBase.getAccountName()"
  nameWithType: "BlobClientBase.getAccountName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountName()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()"
  name: "BlobClientBase.getServiceVersion()"
  nameWithType: "BlobClientBase.getServiceVersion()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getServiceVersion()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()"
  name: "BlobClientBase.createSnapshot()"
  nameWithType: "BlobClientBase.createSnapshot()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshot()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getContainerName()"
  name: "BlobClientBase.getContainerName()"
  nameWithType: "BlobClientBase.getContainerName()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getContainerName()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()"
  name: "BlobClientBase.getAccountInfo()"
  nameWithType: "BlobClientBase.getAccountInfo()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.getAccountInfo()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()"
  name: "BlobClientBase.isSnapshot()"
  nameWithType: "BlobClientBase.isSnapshot()"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.isSnapshot()"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)"
  name: "BlobClientBase.beginCopy(String,Duration)"
  nameWithType: "BlobClientBase.beginCopy(String,Duration)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.time.Duration)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)"
  nameWithType: "BlobClientBase.downloadToFileWithResponse(String,BlobRange,ParallelTransferOptions,DownloadRetryOptions,BlobRequestConditions,boolean,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFileWithResponse(java.lang.String,com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.DownloadRetryOptions,com.azure.storage.blob.models.BlobRequestConditions,boolean,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)"
  nameWithType: "BlobClientBase.setMetadataWithResponse(Map<String,String>,BlobRequestConditions,Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
  name: "BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)"
  nameWithType: "BlobClientBase.openInputStream(BlobRange,BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.openInputStream(com.azure.storage.blob.models.BlobRange,com.azure.storage.blob.models.BlobRequestConditions)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)"
  name: "BlobClientBase.downloadToFile(String)"
  nameWithType: "BlobClientBase.downloadToFile(String)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.downloadToFile(java.lang.String)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)"
  name: "BlobClientBase.existsWithResponse(Duration,Context)"
  nameWithType: "BlobClientBase.existsWithResponse(Duration,Context)"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.existsWithResponse(java.time.Duration,com.azure.core.util.Context)"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "String,String>,BlobRequestConditions,Duration,Context)"
  nameWithType: "String,String>,BlobRequestConditions,Duration,Context)"
  fullName: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map"
  name: "BlobClientBase.createSnapshotWithResponse(Map"
  nameWithType: "BlobClientBase.createSnapshotWithResponse(Map"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.createSnapshotWithResponse(java.util.Map"
- uid: "java.lang.String,java.lang.String>)"
  name: "String,String>)"
  nameWithType: "String,String>)"
  fullName: "java.lang.String,java.lang.String>)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map"
  name: "BlobClientBase.setMetadata(Map"
  nameWithType: "BlobClientBase.setMetadata(Map"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadata(java.util.Map"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map"
  name: "BlobClientBase.beginCopy(String,Map"
  nameWithType: "BlobClientBase.beginCopy(String,Map"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.beginCopy(java.lang.String,java.util.Map"
- uid: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
  name: "String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)"
  nameWithType: "String,String>,AccessTier,RehydratePriority,RequestConditions,BlobRequestConditions,Duration)"
  fullName: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration)"
- uid: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  name: "String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)"
  nameWithType: "String,String>,AccessTier,RequestConditions,BlobRequestConditions,Duration,Context)"
  fullName: "java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.http.RequestConditions,com.azure.storage.blob.models.BlobRequestConditions,java.time.Duration,com.azure.core.util.Context)"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map"
  name: "BlobClientBase.copyFromUrlWithResponse(String,Map"
  nameWithType: "BlobClientBase.copyFromUrlWithResponse(String,Map"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.copyFromUrlWithResponse(java.lang.String,java.util.Map"
- uid: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map"
  name: "BlobClientBase.setMetadataWithResponse(Map"
  nameWithType: "BlobClientBase.setMetadataWithResponse(Map"
  fullName: "com.azure.storage.blob.specialized.BlobClientBase.setMetadataWithResponse(java.util.Map"
