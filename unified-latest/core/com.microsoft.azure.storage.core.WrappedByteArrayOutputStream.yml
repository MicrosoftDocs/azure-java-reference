### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream"
  id: "WrappedByteArrayOutputStream"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream(byte[],int)"
  - "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition()"
  - "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write(int)"
  langs:
  - "java"
  name: "WrappedByteArrayOutputStream"
  nameWithType: "WrappedByteArrayOutputStream"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. Wraps a user-specified buffer in a stream."
  syntax:
    content: "public class WrappedByteArrayOutputStream extends OutputStream"
  inheritance:
  - "java.lang.Object"
  - "java.io.OutputStream"
  inheritedMembers:
  - "java.io.OutputStream.close()"
  - "java.io.OutputStream.flush()"
  - "java.io.OutputStream.nullOutputStream()"
  - "java.io.OutputStream.write(byte[])"
  - "java.io.OutputStream.write(byte[],int,int)"
  - "java.io.OutputStream.write(int)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream(byte[],int)"
  id: "WrappedByteArrayOutputStream(byte[],int)"
  parent: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream"
  langs:
  - "java"
  name: "WrappedByteArrayOutputStream(byte[] buffer, int bufferOffset)"
  nameWithType: "WrappedByteArrayOutputStream.WrappedByteArrayOutputStream(byte[] buffer, int bufferOffset)"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream(byte[] buffer, int bufferOffset)"
  overload: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public WrappedByteArrayOutputStream(byte[] buffer, int bufferOffset)"
    parameters:
    - id: "buffer"
      type: "byte[]"
    - id: "bufferOffset"
      type: "int"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition()"
  id: "getPosition()"
  parent: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream"
  langs:
  - "java"
  name: "getPosition()"
  nameWithType: "WrappedByteArrayOutputStream.getPosition()"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition()"
  overload: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public int getPosition()"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write(int)"
  id: "write(int)"
  parent: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream"
  langs:
  - "java"
  name: "write(int b)"
  nameWithType: "WrappedByteArrayOutputStream.write(int b)"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write(int b)"
  overload: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void write(int b)"
    parameters:
    - id: "b"
      type: "int"
  exceptions:
  - type: "java.io.IOException"
references:
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream*"
  name: "WrappedByteArrayOutputStream"
  nameWithType: "WrappedByteArrayOutputStream.WrappedByteArrayOutputStream"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.WrappedByteArrayOutputStream"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition*"
  name: "getPosition"
  nameWithType: "WrappedByteArrayOutputStream.getPosition"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.getPosition"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write*"
  name: "write"
  nameWithType: "WrappedByteArrayOutputStream.write"
  fullName: "com.microsoft.azure.storage.core.WrappedByteArrayOutputStream.write"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.OutputStream"
  name: "OutputStream"
  nameWithType: "OutputStream"
  fullName: "java.io.OutputStream"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.io.OutputStream.write(int)"
  name: "OutputStream.write(int)"
  nameWithType: "OutputStream.write(int)"
  fullName: "java.io.OutputStream.write(int)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.io.OutputStream.flush()"
  name: "OutputStream.flush()"
  nameWithType: "OutputStream.flush()"
  fullName: "java.io.OutputStream.flush()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.io.OutputStream.close()"
  name: "OutputStream.close()"
  nameWithType: "OutputStream.close()"
  fullName: "java.io.OutputStream.close()"
- uid: "java.io.OutputStream.nullOutputStream()"
  name: "OutputStream.nullOutputStream()"
  nameWithType: "OutputStream.nullOutputStream()"
  fullName: "java.io.OutputStream.nullOutputStream()"
- uid: "java.io.OutputStream.write(byte[],int,int)"
  name: "OutputStream.write(byte[],int,int)"
  nameWithType: "OutputStream.write(byte[],int,int)"
  fullName: "java.io.OutputStream.write(byte[],int,int)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.io.OutputStream.write(byte[])"
  name: "OutputStream.write(byte[])"
  nameWithType: "OutputStream.write(byte[])"
  fullName: "java.io.OutputStream.write(byte[])"
