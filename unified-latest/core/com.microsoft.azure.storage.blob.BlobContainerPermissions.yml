### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  id: "BlobContainerPermissions"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions()"
  - "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess()"
  - "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  langs:
  - "java"
  name: "BlobContainerPermissions"
  nameWithType: "BlobContainerPermissions"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the permissions for a container.\n\nThe container's permissions encompass two types of access settings for the container:\n\n *  The container's public access setting, represented by the <xref uid=\"\" data-throw-if-not-resolved=\"false\">#publicAccess</xref> property. The public access setting indicates whether the container and its blobs can be read via an anonymous request.\n *  The container's access policies, represented by the <xref uid=\"\" data-throw-if-not-resolved=\"false\">#getSharedAccessPolicies</xref> method. This setting references a collection of shared access policies for the container. A shared access policy may be used to control the start time, expiry time, and permissions for one or more shared access signatures. A shared access signature provides delegated access to the container's resources.\n\nFor more information on managing container permissions, see [Managing Access to Containers and Blobs][].\n\n\n[Managing Access to Containers and Blobs]: http://go.microsoft.com/fwlink/?LinkID=224643"
  syntax:
    content: "public final class BlobContainerPermissions extends Permissions<SharedAccessBlobPolicy>"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.Permissions"
  inheritedMembers:
  - "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies()"
  - "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions()"
  id: "BlobContainerPermissions()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  langs:
  - "java"
  name: "BlobContainerPermissions()"
  nameWithType: "BlobContainerPermissions.BlobContainerPermissions()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `BlobContainerPermissions` class."
  syntax:
    content: "public BlobContainerPermissions()"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess()"
  id: "getPublicAccess()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  langs:
  - "java"
  name: "getPublicAccess()"
  nameWithType: "BlobContainerPermissions.getPublicAccess()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the public access setting for the container.\n\nThe public access setting indicates whether the container and its blobs can be read via an anonymous request.\n\nThe <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref> enumeration provides three levels of anonymous read access:\n\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.OFF\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#OFF</xref>, which prevents anonymous access.\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.BLOB\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#BLOB</xref>, which permits anonymous read access to blob resources, but not to container metadata or to the list of blobs in the container.\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.CONTAINER\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#CONTAINER</xref>, which permits anonymous read access to blob resources, container metadata, and the list of blobs in the container.\n\nFor more information on managing anonymous access to Blob service resources, see [Setting Access Control for Containers][].\n\n\n[Setting Access Control for Containers]: http://go.microsoft.com/fwlink/?LinkID=224644"
  syntax:
    content: "public BlobContainerPublicAccessType getPublicAccess()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  id: "setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  langs:
  - "java"
  name: "setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  nameWithType: "BlobContainerPermissions.setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the public access setting for the container.\n\nThe public access setting indicates whether the container and its blobs can be read via an anonymous request.\n\nThe <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref> enumeration provides three levels of anonymous read access:\n\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.OFF\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#OFF</xref>, which prevents anonymous access.\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.BLOB\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#BLOB</xref>, which permits anonymous read access to blob resources, but not to container metadata or to the list of blobs in the container.\n *  <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType.CONTAINER\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType#CONTAINER</xref>, which permits anonymous read access to blob resources, container metadata, and the list of blobs in the container.\n\nFor more information on managing anonymous access to Blob service resources, see [Setting Access Control for Containers][].\n\n\n[Setting Access Control for Containers]: http://go.microsoft.com/fwlink/?LinkID=224644"
  syntax:
    content: "public void setPublicAccess(BlobContainerPublicAccessType publicAccess)"
    parameters:
    - id: "publicAccess"
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
references:
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions*"
  name: "BlobContainerPermissions"
  nameWithType: "BlobContainerPermissions.BlobContainerPermissions"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.BlobContainerPermissions"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
  name: "BlobContainerPublicAccessType"
  nameWithType: "BlobContainerPublicAccessType"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess*"
  name: "getPublicAccess"
  nameWithType: "BlobContainerPermissions.getPublicAccess"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.getPublicAccess"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess*"
  name: "setPublicAccess"
  nameWithType: "BlobContainerPermissions.setPublicAccess"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions.setPublicAccess"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.Permissions<com.microsoft.azure.storage.blob.SharedAccessBlobPolicy>"
  name: "Permissions<SharedAccessBlobPolicy>"
  nameWithType: "Permissions<SharedAccessBlobPolicy>"
  fullName: "com.microsoft.azure.storage.Permissions<com.microsoft.azure.storage.blob.SharedAccessBlobPolicy>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies()"
  name: "Permissions.getSharedAccessPolicies()"
  nameWithType: "Permissions.getSharedAccessPolicies()"
  fullName: "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies()"
- uid: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
  name: "Permissions.setSharedAccessPolicies(HashMap<String,T>)"
  nameWithType: "Permissions.setSharedAccessPolicies(HashMap<String,T>)"
  fullName: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
  name: "SharedAccessBlobPolicy"
  nameWithType: "SharedAccessBlobPolicy"
  fullName: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
- uid: "com.microsoft.azure.storage.Permissions"
  name: "Permissions"
  nameWithType: "Permissions"
  fullName: "com.microsoft.azure.storage.Permissions"
- uid: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap"
  name: "Permissions.setSharedAccessPolicies(HashMap"
  nameWithType: "Permissions.setSharedAccessPolicies(HashMap"
  fullName: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap"
- uid: "java.lang.String,T>)"
  name: "String,T>)"
  nameWithType: "String,T>)"
  fullName: "java.lang.String,T>)"
