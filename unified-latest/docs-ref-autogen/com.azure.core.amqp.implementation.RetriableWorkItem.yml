### YamlMime:ManagedReference
items:
- uid: com.azure.core.amqp.implementation.RetriableWorkItem
  id: RetriableWorkItem
  artifact: com.azure:azure-core-amqp:1.0.1
  parent: com.azure.core.amqp.implementation
  langs:
  - java
  name: RetriableWorkItem
  nameWithType: RetriableWorkItem
  fullName: com.azure.core.amqp.implementation.RetriableWorkItem
  type: Class
  package: com.azure.core.amqp.implementation
  summary: Represents a work item that can be scheduled multiple times.
  syntax:
    content: " class RetriableWorkItem"
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,com.azure.core.amqp.implementation.TimeoutTracker)
  id: RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,com.azure.core.amqp.implementation.TimeoutTracker)
  artifact: com.azure:azure-core-amqp:1.0.1
  parent: com.azure.core.amqp.implementation.RetriableWorkItem
  langs:
  - java
  name: RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)
  nameWithType: RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)
  fullName: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)
  overload: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*
  type: Constructor
  package: com.azure.core.amqp.implementation
  syntax:
    content: private RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, TimeoutTracker timeout)
    parameters:
    - id: amqpMessage
      type: byte[]
    - id: encodedMessageSize
      type: int
    - id: messageFormat
      type: int
    - id: monoSink
      type: reactor.core.publisher.MonoSink<java.lang.Void>
    - id: timeout
      type: com.azure.core.amqp.implementation.TimeoutTracker
- uid: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,java.time.Duration)
  id: RetriableWorkItem(byte[],int,int,reactor.core.publisher.MonoSink<java.lang.Void>,java.time.Duration)
  artifact: com.azure:azure-core-amqp:1.0.1
  parent: com.azure.core.amqp.implementation.RetriableWorkItem
  langs:
  - java
  name: RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)
  nameWithType: RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)
  fullName: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)
  overload: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*
  type: Constructor
  package: com.azure.core.amqp.implementation
  syntax:
    content: " RetriableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, MonoSink<Void> monoSink, Duration timeout)"
    parameters:
    - id: amqpMessage
      type: byte[]
    - id: encodedMessageSize
      type: int
    - id: messageFormat
      type: int
    - id: monoSink
      type: reactor.core.publisher.MonoSink<java.lang.Void>
    - id: timeout
      type: java.time.Duration
references:
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.MonoSink<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.MonoSink
    name: MonoSink
    fullName: reactor.core.publisher.MonoSink
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem*
  name: RetriableWorkItem
  nameWithType: RetriableWorkItem.RetriableWorkItem
  fullName: com.azure.core.amqp.implementation.RetriableWorkItem.RetriableWorkItem
  package: com.azure.core.amqp.implementation
- uid: com.azure.core.amqp.implementation.TimeoutTracker
  name: TimeoutTracker
  nameWithType: TimeoutTracker
  fullName: com.azure.core.amqp.implementation.TimeoutTracker
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: reactor.core.publisher.MonoSink
  name: MonoSink
  nameWithType: MonoSink
  fullName: reactor.core.publisher.MonoSink
