### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  id: "CloudBlobContainer"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.lang.String,com.microsoft.azure.storage.blob.CloudBlobClient)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.net.URI)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(java.lang.Integer)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.create()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.create(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.create(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.delete()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.exists()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getName()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String,boolean)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.metadata"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.name"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.properties"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties(com.microsoft.azure.storage.blob.BlobContainerProperties)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions)"
  - "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudBlobContainer"
  nameWithType: "CloudBlobContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents a container in the Microsoft Azure Blob service.\n\nContainers hold directories, which are encapsulated as <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobDirectory\" data-throw-if-not-resolved=\"false\">CloudBlobDirectory</xref> objects, and directories hold block blobs and page blobs. Directories can also contain sub-directories."
  syntax:
    content: "public final class CloudBlobContainer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(com.microsoft.azure.storage.StorageUri)"
  id: "CloudBlobContainer(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "CloudBlobContainer(StorageUri storageUri)"
  nameWithType: "CloudBlobContainer.CloudBlobContainer(StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlobContainer` class using the specified URI. The blob URI should include a SAS token unless anonymous access is to be used."
  syntax:
    content: "public CloudBlobContainer(StorageUri storageUri)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the URI of the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlobContainer(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "CloudBlobContainer(StorageUri storageUri, StorageCredentials credentials)"
  nameWithType: "CloudBlobContainer.CloudBlobContainer(StorageUri storageUri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(StorageUri storageUri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlobContainer` class using the specified StorageUri and credentials."
  syntax:
    content: "public CloudBlobContainer(StorageUri storageUri, StorageCredentials credentials)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the absolute StorageUri of the container."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.lang.String,com.microsoft.azure.storage.blob.CloudBlobClient)"
  id: "CloudBlobContainer(java.lang.String,com.microsoft.azure.storage.blob.CloudBlobClient)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "CloudBlobContainer(String containerName, CloudBlobClient client)"
  nameWithType: "CloudBlobContainer.CloudBlobContainer(String containerName, CloudBlobClient client)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(String containerName, CloudBlobClient client)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlobContainer` class using the specified name and client."
  syntax:
    content: "protected CloudBlobContainer(String containerName, CloudBlobClient client)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the container, which must adhere to container\n            naming rules.\n            The container name should not include any path separator characters (/).\n            Container names must be lowercase, between 3-63 characters long and must start with a letter or\n            number. Container names may contain only letters, numbers, and the dash (-) character."
    - id: "client"
      type: "com.microsoft.azure.storage.blob.CloudBlobClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object that represents the associated service client, and that specifies the\n            endpoint for the Blob service. *"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.net.URI)"
  id: "CloudBlobContainer(java.net.URI)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "CloudBlobContainer(URI uri)"
  nameWithType: "CloudBlobContainer.CloudBlobContainer(URI uri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(URI uri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlobContainer` class using the specified URI. The blob URI should include a SAS token unless anonymous access is to be used."
  syntax:
    content: "public CloudBlobContainer(URI uri)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object which represents the URI of the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlobContainer(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "CloudBlobContainer(URI uri, StorageCredentials credentials)"
  nameWithType: "CloudBlobContainer.CloudBlobContainer(URI uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(URI uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlobContainer` class using the specified URI and credentials."
  syntax:
    content: "public CloudBlobContainer(URI uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the container."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()"
  id: "acquireLease()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "acquireLease()"
  nameWithType: "CloudBlobContainer.acquireLease()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new infinite lease on the container."
  syntax:
    content: "public final String acquireLease()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(java.lang.Integer,java.lang.String)"
  id: "acquireLease(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  nameWithType: "CloudBlobContainer.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new lease on the container with the specified lease time and proposed lease ID."
  syntax:
    content: "public final String acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
    parameters:
    - id: "leaseTimeInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds.\n            If null, an infinite lease will be acquired. If not null, the value must be greater than\n            zero."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new lease on the container with the specified lease time, proposed lease ID, request options, and operation context."
  syntax:
    content: "public final String acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "leaseTimeInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds.\n            If null, an infinite lease will be acquired. If not null, the value must be greater than\n            zero."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(java.lang.Integer)"
  id: "breakLease(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "breakLease(Integer breakPeriodInSeconds)"
  nameWithType: "CloudBlobContainer.breakLease(Integer breakPeriodInSeconds)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(Integer breakPeriodInSeconds)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Breaks the lease and ensures that another client cannot acquire a new lease until the current lease period has expired."
  syntax:
    content: "public final long breakLease(Integer breakPeriodInSeconds)"
    parameters:
    - id: "breakPeriodInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the time to wait, in seconds, until the current lease is\n            broken.\n            If null, the break period is the remainder of the current lease, or zero for infinite leases."
    return:
      type: "long"
      description: "The time, in seconds, remaining in the lease period."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Breaks the existing lease, using the specified request options and operation context, and ensures that another client cannot acquire a new lease until the current lease period has expired."
  syntax:
    content: "public final long breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "breakPeriodInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the time to wait, in seconds, until the current lease is\n            broken.\n            If null, the break period is the remainder of the current lease, or zero for infinite leases."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "long"
      description: "The time, in seconds, remaining in the lease period."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  id: "changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  nameWithType: "CloudBlobContainer.changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Changes the existing lease ID to the proposed lease ID."
  syntax:
    content: "public final String changeLease(String proposedLeaseId, AccessCondition accessCondition)"
    parameters:
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the new lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Changes the existing lease ID to the proposed lease Id with the specified access conditions, request options, and operation context."
  syntax:
    content: "public final String changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease. This cannot be null."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the new lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.create()"
  id: "create()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "create()"
  nameWithType: "CloudBlobContainer.create()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.create()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container."
  syntax:
    content: "public void create()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.create(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "create(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "create(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.create(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.create(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container using the specified options and operation context."
  syntax:
    content: "public void create(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessType"
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref> object that specifies whether data in the container may be\n            accessed publicly and what level of access is to be allowed."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.create(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "create(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "create(BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.create(BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.create(BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container using the specified options and operation context."
  syntax:
    content: "public void create(BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists()"
  id: "createIfNotExists()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "createIfNotExists()"
  nameWithType: "CloudBlobContainer.createIfNotExists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container if it does not exist."
  syntax:
    content: "public boolean createIfNotExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createIfNotExists(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "createIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.createIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container if it does not exist, using the specified request options and operation context."
  syntax:
    content: "public boolean createIfNotExists(BlobContainerPublicAccessType accessType, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessType"
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref> object that specifies whether data in the container may be\n            accessed publicly and what level of access is to be allowed."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createIfNotExists(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "createIfNotExists(BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.createIfNotExists(BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists(BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates the container if it does not exist, using the specified request options and operation context."
  syntax:
    content: "public boolean createIfNotExists(BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete()"
  id: "delete()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CloudBlobContainer.delete()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the container."
  syntax:
    content: "public void delete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "delete(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.delete(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the container using the specified request options and operation context."
  syntax:
    content: "public void delete(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()"
  id: "deleteIfExists()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "deleteIfExists()"
  nameWithType: "CloudBlobContainer.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the container if it exists."
  syntax:
    content: "public boolean deleteIfExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the container did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the container if it exists using the specified request options and operation context."
  syntax:
    content: "public boolean deleteIfExists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the container existed and was deleted; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo()"
  id: "downloadAccountInfo()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadAccountInfo()"
  nameWithType: "CloudBlobContainer.downloadAccountInfo()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets information related to the storage account in which this container resides."
  syntax:
    content: "public AccountInformation downloadAccountInfo()"
    return:
      type: "com.microsoft.azure.storage.AccountInformation"
      description: "A <xref uid=\"com.microsoft.azure.storage.AccountInformation\" data-throw-if-not-resolved=\"false\">AccountInformation</xref> object for the given storage account."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets information related to the storage account in which this container resides."
  syntax:
    content: "public AccountInformation downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.AccountInformation"
      description: "A <xref uid=\"com.microsoft.azure.storage.AccountInformation\" data-throw-if-not-resolved=\"false\">AccountInformation</xref> object for the given storage account."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  id: "downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadAccountInformationImpl(RequestOptions options)"
  nameWithType: "CloudBlobContainer.downloadAccountInformationImpl(RequestOptions options)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl(RequestOptions options)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "protected StorageRequest<ServiceClient,CloudBlobContainer,AccountInformation> downloadAccountInformationImpl(RequestOptions options)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
    return:
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlobContainer,com.microsoft.azure.storage.AccountInformation>"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes()"
  id: "downloadAttributes()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadAttributes()"
  nameWithType: "CloudBlobContainer.downloadAttributes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the container's attributes, which consist of metadata and properties."
  syntax:
    content: "public void downloadAttributes()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the container's attributes, which consist of metadata and properties, using the specified request options and operation context."
  syntax:
    content: "public void downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions()"
  id: "downloadPermissions()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadPermissions()"
  nameWithType: "CloudBlobContainer.downloadPermissions()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the permission settings for the container."
  syntax:
    content: "public BlobContainerPermissions downloadPermissions()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\">BlobContainerPermissions</xref> object that represents the container's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "downloadPermissions(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.downloadPermissions(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the permissions settings for the container using the specified request options and operation context."
  syntax:
    content: "public BlobContainerPermissions downloadPermissions(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\">BlobContainerPermissions</xref> object that represents the container's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists()"
  id: "exists()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "exists()"
  nameWithType: "CloudBlobContainer.exists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a value that indicates whether the container exists."
  syntax:
    content: "public boolean exists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the container exists, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a value that indicates whether the container exists, using the specified request options and operation context."
  syntax:
    content: "public boolean exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the container exists, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  nameWithType: "CloudBlobContainer.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature for the container. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.SharedAccessBlobPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessBlobPolicy</xref> object that represents the access policy for the shared access\n            signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the container-level access policy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents a shared access signature for the container."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudBlobContainer.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature for the container. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.SharedAccessBlobPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessBlobPolicy</xref> object that represents the access policy for the shared access\n            signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the container-level access policy."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents a shared access signature for the container."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(java.lang.String)"
  id: "getAppendBlobReference(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getAppendBlobReference(String blobName)"
  nameWithType: "CloudBlobContainer.getAppendBlobReference(String blobName)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(String blobName)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\">CloudAppendBlob</xref> object that represents an append blob in this container."
  syntax:
    content: "public CloudAppendBlob getAppendBlobReference(String blobName)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudAppendBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\">CloudAppendBlob</xref> object that represents a reference to the specified append blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(java.lang.String,java.lang.String)"
  id: "getAppendBlobReference(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getAppendBlobReference(String blobName, String snapshotID)"
  nameWithType: "CloudBlobContainer.getAppendBlobReference(String blobName, String snapshotID)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference(String blobName, String snapshotID)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\">CloudAppendBlob</xref> object that represents an append blob in the container, using the specified snapshot ID."
  syntax:
    content: "public CloudAppendBlob getAppendBlobReference(String blobName, String snapshotID)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot ID of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudAppendBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\">CloudAppendBlob</xref> object that represents a reference to the specified append blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(java.lang.String)"
  id: "getBlobReferenceFromServer(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getBlobReferenceFromServer(String blobName)"
  nameWithType: "CloudBlobContainer.getBlobReferenceFromServer(String blobName)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(String blobName)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets a reference to a blob in this container. The blob must already exist on the service. Unlike the other get\\*Reference methods, this method does a service request to retrieve the blob's metadata and properties. The returned blob may be used directly as a CloudBlob or cast using either instanceof or getProperties().getBlobType() to determine its subtype."
  syntax:
    content: "public final CloudBlob getBlobReferenceFromServer(String blobName)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob\" data-throw-if-not-resolved=\"false\">CloudBlob</xref> object that represents a reference to the specified blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "getBlobReferenceFromServer(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getBlobReferenceFromServer(String blobName, String snapshotID, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.getBlobReferenceFromServer(String blobName, String snapshotID, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer(String blobName, String snapshotID, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets a reference to a blob in this container. The blob must already exist on the service. Unlike the other get\\*Reference methods, this method does a service request to retrieve the blob's metadata and properties. The returned blob may be used directly as a CloudBlob or cast using either instanceof or getProperties().getBlobType() to determine its subtype."
  syntax:
    content: "public final CloudBlob getBlobReferenceFromServer(String blobName, String snapshotID, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot ID of the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob\" data-throw-if-not-resolved=\"false\">CloudBlob</xref> object that represents a reference to the specified blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(java.lang.String)"
  id: "getBlockBlobReference(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getBlockBlobReference(String blobName)"
  nameWithType: "CloudBlobContainer.getBlockBlobReference(String blobName)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(String blobName)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> object that represents a block blob in this container."
  syntax:
    content: "public CloudBlockBlob getBlockBlobReference(String blobName)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> object that represents a reference to the specified block blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(java.lang.String,java.lang.String)"
  id: "getBlockBlobReference(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getBlockBlobReference(String blobName, String snapshotID)"
  nameWithType: "CloudBlobContainer.getBlockBlobReference(String blobName, String snapshotID)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference(String blobName, String snapshotID)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> object that represents a block blob in this container, using the specified snapshot ID."
  syntax:
    content: "public CloudBlockBlob getBlockBlobReference(String blobName, String snapshotID)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot ID of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> object that represents a reference to the specified block blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl(java.lang.String)"
  id: "getContainerAcl(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getContainerAcl(String aclString)"
  nameWithType: "CloudBlobContainer.getContainerAcl(String aclString)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl(String aclString)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Converts the ACL string to a BlobContainerPermissions object."
  syntax:
    content: "static BlobContainerPermissions getContainerAcl(String aclString)"
    parameters:
    - id: "aclString"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the ACLs to convert."
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\">BlobContainerPermissions</xref> object which represents the ACLs."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference(java.lang.String)"
  id: "getDirectoryReference(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getDirectoryReference(String directoryName)"
  nameWithType: "CloudBlobContainer.getDirectoryReference(String directoryName)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference(String directoryName)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobDirectory\" data-throw-if-not-resolved=\"false\">CloudBlobDirectory</xref> object that represents a virtual blob directory within this container."
  syntax:
    content: "public CloudBlobDirectory getDirectoryReference(String directoryName)"
    parameters:
    - id: "directoryName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the virtual blob directory. If the root directory\n            (the directory representing the container itself) is desired, use an empty string."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobDirectory\" data-throw-if-not-resolved=\"false\">CloudBlobDirectory</xref> that represents a virtual blob directory within this container."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If the resource URI is invalid."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata()"
  id: "getMetadata()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "CloudBlobContainer.getMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the metadata for the container. This value is initialized with the metadata from the queue by a call to <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes*\" data-throw-if-not-resolved=\"false\">#downloadAttributes</xref>, and is set on the queue with a call to <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref>."
  syntax:
    content: "public HashMap<String,String> getMetadata()"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata for the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getName()"
  id: "getName()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CloudBlobContainer.getName()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getName()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getName*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the name of the container."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(java.lang.String)"
  id: "getPageBlobReference(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getPageBlobReference(String blobName)"
  nameWithType: "CloudBlobContainer.getPageBlobReference(String blobName)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(String blobName)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> object that represents a page blob in this container."
  syntax:
    content: "public CloudPageBlob getPageBlobReference(String blobName)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudPageBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> object that represents a reference to the specified page blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(java.lang.String,java.lang.String)"
  id: "getPageBlobReference(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getPageBlobReference(String blobName, String snapshotID)"
  nameWithType: "CloudBlobContainer.getPageBlobReference(String blobName, String snapshotID)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference(String blobName, String snapshotID)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> object that represents a page blob in the container, using the specified snapshot ID."
  syntax:
    content: "public CloudPageBlob getPageBlobReference(String blobName, String snapshotID)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot ID of the blob."
    return:
      type: "com.microsoft.azure.storage.blob.CloudPageBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> object that represents a reference to the specified page blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties()"
  id: "getProperties()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CloudBlobContainer.getProperties()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the properties for the container."
  syntax:
    content: "public BlobContainerProperties getProperties()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerProperties\" data-throw-if-not-resolved=\"false\">BlobContainerProperties</xref> object that represents the properties for the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient()"
  id: "getServiceClient()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getServiceClient()"
  nameWithType: "CloudBlobContainer.getServiceClient()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the Blob service client associated with this container."
  syntax:
    content: "public CloudBlobClient getServiceClient()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object that represents the service client associated with this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "CloudBlobContainer.getStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the list of URIs for all locations."
  syntax:
    content: "public StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the list of URIs for all locations.."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri()"
  id: "getUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "getUri()"
  nameWithType: "CloudBlobContainer.getUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the URI for this container."
  syntax:
    content: "public URI getUri()"
    return:
      type: "java.net.URI"
      description: "The absolute URI to the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs()"
  id: "listBlobs()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobs()"
  nameWithType: "CloudBlobContainer.listBlobs()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of blob items for the container."
  syntax:
    content: "public Iterable<ListBlobItem> listBlobs()"
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects retrieved lazily that represents the items in\n         this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String)"
  id: "listBlobs(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobs(String prefix)"
  nameWithType: "CloudBlobContainer.listBlobs(String prefix)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(String prefix)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of blob items for the container whose names begin with the specified prefix."
  syntax:
    content: "public Iterable<ListBlobItem> listBlobs(String prefix)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the blob name prefix. This value must be preceded either by the\n            name of the container or by the absolute path to the container."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects retrieved lazily that represents the\n         items whose names begin with the specified prefix in this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String,boolean)"
  id: "listBlobs(java.lang.String,boolean)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobs(String prefix, boolean useFlatBlobListing)"
  nameWithType: "CloudBlobContainer.listBlobs(String prefix, boolean useFlatBlobListing)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(String prefix, boolean useFlatBlobListing)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of blob items for the container whose names begin with the specified prefix using the specified flat or hierarchical option."
  syntax:
    content: "public Iterable<ListBlobItem> listBlobs(String prefix, boolean useFlatBlobListing)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the blob name prefix. This value must be preceded either by the\n            name of the container or by the absolute path to the container."
    - id: "useFlatBlobListing"
      type: "boolean"
      description: "<code>true</code> to indicate that the returned list will be flat; <code>false</code> to indicate that\n            the returned list will be hierarchical."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects retrieved lazily that represents the\n         items whose names begin with the specified prefix in this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "listBlobs(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobs(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.listBlobs(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of blob items for the container whose names begin with the specified prefix, using the specified flat or hierarchical option, listing details options, request options, and operation context."
  syntax:
    content: "public Iterable<ListBlobItem> listBlobs(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the blob name prefix. This value must be preceded either by the\n            name of the container or by the absolute path to the container."
    - id: "useFlatBlobListing"
      type: "boolean"
      description: "<code>true</code> to indicate that the returned list will be flat; <code>false</code> to indicate that\n            the returned list will be hierarchical."
    - id: "listingDetails"
      type: "java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>"
      description: "A <code>java.util.EnumSet</code> object that contains <xref uid=\"com.microsoft.azure.storage.blob.BlobListingDetails\" data-throw-if-not-resolved=\"false\">BlobListingDetails</xref> values that indicate\n            whether snapshots, soft-deleted blobs, metadata, and/or uncommitted blocks are returned. Committed blocks are always\n            returned."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects retrieved lazily that represents the\n         items whose names begin with the specified prefix in this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented()"
  id: "listBlobsSegmented()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobsSegmented()"
  nameWithType: "CloudBlobContainer.listBlobsSegmented()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment of an enumerable collection of blob items in the container."
  syntax:
    content: "public ResultSegment<ListBlobItem> listBlobsSegmented()"
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection of\n         <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects that represent the blob items in the container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(java.lang.String)"
  id: "listBlobsSegmented(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobsSegmented(String prefix)"
  nameWithType: "CloudBlobContainer.listBlobsSegmented(String prefix)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(String prefix)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment containing a collection of blob items whose names begin with the specified prefix."
  syntax:
    content: "public ResultSegment<ListBlobItem> listBlobsSegmented(String prefix)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the prefix of the blob name."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection of\n         <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects that represent the blob items whose names begin with the specified prefix in\n         the container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "listBlobsSegmented(java.lang.String,boolean,java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listBlobsSegmented(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.listBlobsSegmented(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment containing a collection of blob items whose names begin with the specified prefix, using the specified flat or hierarchical option, listing details options, request options, and operation context."
  syntax:
    content: "public ResultSegment<ListBlobItem> listBlobsSegmented(String prefix, boolean useFlatBlobListing, EnumSet<BlobListingDetails> listingDetails, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the prefix of the blob name."
    - id: "useFlatBlobListing"
      type: "boolean"
      description: "<code>true</code> to indicate that the returned list will be flat;\n            <code>false</code> to indicate that the returned list will be hierarchical."
    - id: "listingDetails"
      type: "java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>"
      description: "A <code>java.util.EnumSet</code> object that contains <xref uid=\"com.microsoft.azure.storage.blob.BlobListingDetails\" data-throw-if-not-resolved=\"false\">BlobListingDetails</xref> \n            values that indicate whether snapshots, soft-deleted blobs, metadata, and/or uncommitted blocks\n            are returned. Committed blocks are always returned."
    - id: "maxResults"
      type: "java.lang.Integer"
      description: "The maximum number of results to retrieve.  If <code>null</code> or greater\n            than 5000, the server will return up to 5,000 items.  Must be at least 1."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object that represents a continuation token returned\n            by a previous listing operation."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the\n            request. Specifying <code>null</code> will use the default request options from\n            the associated service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current\n            operation. This object is used to track requests to the storage service,\n            and to provide additional runtime information about the operation."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.ListBlobItem>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection\n         of <xref uid=\"com.microsoft.azure.storage.blob.ListBlobItem\" data-throw-if-not-resolved=\"false\">ListBlobItem</xref> objects that represent the block items whose names begin\n         with the specified prefix in the container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers()"
  id: "listContainers()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainers()"
  nameWithType: "CloudBlobContainer.listContainers()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of containers for the service client associated with this container."
  syntax:
    content: "public Iterable<CloudBlobContainer> listContainers()"
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects retrieved lazily that represent the\n         containers for the service client associated with this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(java.lang.String)"
  id: "listContainers(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainers(String prefix)"
  nameWithType: "CloudBlobContainer.listContainers(String prefix)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(String prefix)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of containers whose names begin with the specified prefix for the service client associated with this container."
  syntax:
    content: "public Iterable<CloudBlobContainer> listContainers(String prefix)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the container name prefix."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects retrieved lazily that represent the\n         containers whose names begin with the specified prefix for the service client associated with this\n         container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "listContainers(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainers(String prefix, ContainerListingDetails detailsIncluded, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.listContainers(String prefix, ContainerListingDetails detailsIncluded, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers(String prefix, ContainerListingDetails detailsIncluded, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns an enumerable collection of containers whose names begin with the specified prefix for the service client associated with this container, using the specified details setting, request options, and operation context."
  syntax:
    content: "public Iterable<CloudBlobContainer> listContainers(String prefix, ContainerListingDetails detailsIncluded, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the container name prefix."
    - id: "detailsIncluded"
      type: "com.microsoft.azure.storage.blob.ContainerListingDetails"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.ContainerListingDetails\" data-throw-if-not-resolved=\"false\">ContainerListingDetails</xref> value that indicates whether container metadata will be returned."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects retrieved lazily that represents the\n         containers for the\n         service client associated with this container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented()"
  id: "listContainersSegmented()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainersSegmented()"
  nameWithType: "CloudBlobContainer.listContainersSegmented()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment of an enumerable collection of containers for the service client associated with this container."
  syntax:
    content: "public ResultSegment<CloudBlobContainer> listContainersSegmented()"
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection of\n         <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects that represent the containers for the service client associated with\n         this container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(java.lang.String)"
  id: "listContainersSegmented(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainersSegmented(String prefix)"
  nameWithType: "CloudBlobContainer.listContainersSegmented(String prefix)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(String prefix)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment of an enumerable collection of containers whose names begin with the specified prefix for the service client associated with this container."
  syntax:
    content: "public ResultSegment<CloudBlobContainer> listContainersSegmented(String prefix)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the blob name prefix."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection of\n         <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects that represent the containers whose names begin with the specified\n         prefix for the service client associated with this container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "listContainersSegmented(java.lang.String,com.microsoft.azure.storage.blob.ContainerListingDetails,java.lang.Integer,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "listContainersSegmented(String prefix, ContainerListingDetails detailsIncluded, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.listContainersSegmented(String prefix, ContainerListingDetails detailsIncluded, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented(String prefix, ContainerListingDetails detailsIncluded, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a result segment containing a collection of containers whose names begin with the specified prefix for the service client associated with this container, using the specified listing details options, request options, and operation context."
  syntax:
    content: "public ResultSegment<CloudBlobContainer> listContainersSegmented(String prefix, ContainerListingDetails detailsIncluded, Integer maxResults, ResultContinuation continuationToken, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the prefix of the container name."
    - id: "detailsIncluded"
      type: "com.microsoft.azure.storage.blob.ContainerListingDetails"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.ContainerListingDetails\" data-throw-if-not-resolved=\"false\">ContainerListingDetails</xref> object that indicates whether metadata is included."
    - id: "maxResults"
      type: "java.lang.Integer"
      description: "The maximum number of results to retrieve.  If <code>null</code> or greater\n            than 5000, the server will return up to 5,000 items.  Must be at least 1."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object that represents a continuation token\n            returned by a previous listing operation."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the\n            request. Specifying <code>null</code> will use the default request options from\n            the associated service client ( <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current\n            operation. This object is used to track requests to the storage service,\n             and to provide additional runtime information about the operation."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.CloudBlobContainer>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object that contains a segment of the enumerable collection\n         of <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> objects that represent the containers whose names\n         begin with the specified prefix for the service client associated with this container."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.metadata"
  id: "metadata"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "metadata"
  nameWithType: "CloudBlobContainer.metadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.metadata"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the container metadata."
  syntax:
    content: "protected HashMap<String,String> metadata"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.name"
  id: "name"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "name"
  nameWithType: "CloudBlobContainer.name"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.name"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the name of the container."
  syntax:
    content: " String name"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.properties"
  id: "properties"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "properties"
  nameWithType: "CloudBlobContainer.properties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.properties"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the container properties."
  syntax:
    content: " BlobContainerProperties properties"
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerProperties"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  id: "releaseLease(com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "releaseLease(AccessCondition accessCondition)"
  nameWithType: "CloudBlobContainer.releaseLease(AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Releases the lease on the container."
  syntax:
    content: "public final void releaseLease(AccessCondition accessCondition)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Releases the lease on the container using the specified access conditions, request options, and operation context."
  syntax:
    content: "public final void releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(com.microsoft.azure.storage.AccessCondition)"
  id: "renewLease(com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "renewLease(AccessCondition accessCondition)"
  nameWithType: "CloudBlobContainer.renewLease(AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Renews an existing lease with the specified access conditions."
  syntax:
    content: "public final void renewLease(AccessCondition accessCondition)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container. The lease\n            ID is required to be set with an access condition."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Renews an existing lease with the specified access conditions, request options, and operation context."
  syntax:
    content: "public final void renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "setMetadata(HashMap<String,String> metadata)"
  nameWithType: "CloudBlobContainer.setMetadata(HashMap<String,String> metadata)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata(HashMap<String,String> metadata)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the metadata collection of name-value pairs to be set on the container with an <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call. This collection will overwrite any existing container metadata. If this is set to an empty collection, the container metadata will be cleared on an <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call."
  syntax:
    content: "public void setMetadata(HashMap<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata being assigned to the container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties(com.microsoft.azure.storage.blob.BlobContainerProperties)"
  id: "setProperties(com.microsoft.azure.storage.blob.BlobContainerProperties)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "setProperties(BlobContainerProperties properties)"
  nameWithType: "CloudBlobContainer.setProperties(BlobContainerProperties properties)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties(BlobContainerProperties properties)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the properties for the container."
  syntax:
    content: "protected void setProperties(BlobContainerProperties properties)"
    parameters:
    - id: "properties"
      type: "com.microsoft.azure.storage.blob.BlobContainerProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerProperties\" data-throw-if-not-resolved=\"false\">BlobContainerProperties</xref> object that represents the properties being assigned to the\n            container."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  id: "setStorageUri(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "setStorageUri(StorageUri storageUri)"
  nameWithType: "CloudBlobContainer.setStorageUri(StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri(StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the list of URIs for all locations."
  syntax:
    content: "protected void setStorageUri(StorageUri storageUri)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the list of URIs for all locations."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse(java.net.HttpURLConnection)"
  id: "updatePropertiesFromResponse(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "updatePropertiesFromResponse(HttpURLConnection request)"
  nameWithType: "CloudBlobContainer.updatePropertiesFromResponse(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: " void updatePropertiesFromResponse(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata()"
  id: "uploadMetadata()"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "uploadMetadata()"
  nameWithType: "CloudBlobContainer.uploadMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata()"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the container's metadata."
  syntax:
    content: "public void uploadMetadata()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the container's metadata using the specified request options and operation context."
  syntax:
    content: "public void uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions)"
  id: "uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "uploadPermissions(BlobContainerPermissions permissions)"
  nameWithType: "CloudBlobContainer.uploadPermissions(BlobContainerPermissions permissions)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(BlobContainerPermissions permissions)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the container's permissions."
  syntax:
    content: "public void uploadPermissions(BlobContainerPermissions permissions)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\">BlobContainerPermissions</xref> object that represents the permissions to upload."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  langs:
  - "java"
  name: "uploadPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlobContainer.uploadPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the container's permissions using the specified request options and operation context."
  syntax:
    content: "public void uploadPermissions(BlobContainerPermissions permissions, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPermissions\" data-throw-if-not-resolved=\"false\">BlobContainerPermissions</xref> object that represents the permissions to upload."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the container."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer*"
  name: "CloudBlobContainer"
  nameWithType: "CloudBlobContainer.CloudBlobContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
  name: "CloudBlobClient"
  nameWithType: "CloudBlobClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
  name: "BlobContainerPermissions"
  nameWithType: "BlobContainerPermissions"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPermissions"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl*"
  name: "getContainerAcl"
  nameWithType: "CloudBlobContainer.getContainerAcl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getContainerAcl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.create*"
  name: "create"
  nameWithType: "CloudBlobContainer.create"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.create"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobRequestOptions"
  name: "BlobRequestOptions"
  nameWithType: "BlobRequestOptions"
  fullName: "com.microsoft.azure.storage.blob.BlobRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
  name: "BlobContainerPublicAccessType"
  nameWithType: "BlobContainerPublicAccessType"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists*"
  name: "createIfNotExists"
  nameWithType: "CloudBlobContainer.createIfNotExists"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.createIfNotExists"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete*"
  name: "delete"
  nameWithType: "CloudBlobContainer.delete"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.delete"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists*"
  name: "deleteIfExists"
  nameWithType: "CloudBlobContainer.deleteIfExists"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.deleteIfExists"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes*"
  name: "downloadAttributes"
  nameWithType: "CloudBlobContainer.downloadAttributes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAttributes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions*"
  name: "downloadPermissions"
  nameWithType: "CloudBlobContainer.downloadPermissions"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadPermissions"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists*"
  name: "exists"
  nameWithType: "CloudBlobContainer.exists"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.exists"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
  name: "SharedAccessBlobPolicy"
  nameWithType: "SharedAccessBlobPolicy"
  fullName: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudBlobContainer.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.IPRange"
  name: "IPRange"
  nameWithType: "IPRange"
  fullName: "com.microsoft.azure.storage.IPRange"
- uid: "com.microsoft.azure.storage.SharedAccessProtocols"
  name: "SharedAccessProtocols"
  nameWithType: "SharedAccessProtocols"
  fullName: "com.microsoft.azure.storage.SharedAccessProtocols"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.blob.CloudAppendBlob"
  name: "CloudAppendBlob"
  nameWithType: "CloudAppendBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudAppendBlob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference*"
  name: "getAppendBlobReference"
  nameWithType: "CloudBlobContainer.getAppendBlobReference"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getAppendBlobReference"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  name: "CloudBlockBlob"
  nameWithType: "CloudBlockBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference*"
  name: "getBlockBlobReference"
  nameWithType: "CloudBlobContainer.getBlockBlobReference"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlockBlobReference"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
  name: "CloudBlobDirectory"
  nameWithType: "CloudBlobDirectory"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference*"
  name: "getDirectoryReference"
  nameWithType: "CloudBlobContainer.getDirectoryReference"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getDirectoryReference"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob"
  name: "CloudBlob"
  nameWithType: "CloudBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer*"
  name: "getBlobReferenceFromServer"
  nameWithType: "CloudBlobContainer.getBlobReferenceFromServer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getBlobReferenceFromServer"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.HashMap<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata*"
  name: "getMetadata"
  nameWithType: "CloudBlobContainer.getMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getName*"
  name: "getName"
  nameWithType: "CloudBlobContainer.getName"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getName"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "CloudBlobContainer.getStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudPageBlob"
  name: "CloudPageBlob"
  nameWithType: "CloudPageBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudPageBlob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference*"
  name: "getPageBlobReference"
  nameWithType: "CloudBlobContainer.getPageBlobReference"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getPageBlobReference"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  name: "BlobContainerProperties"
  nameWithType: "BlobContainerProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties*"
  name: "getProperties"
  nameWithType: "CloudBlobContainer.getProperties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient*"
  name: "getServiceClient"
  nameWithType: "CloudBlobContainer.getServiceClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getServiceClient"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri*"
  name: "getUri"
  nameWithType: "CloudBlobContainer.getUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.getUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Iterable<com.microsoft.azure.storage.blob.ListBlobItem>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.ListBlobItem"
    name: "ListBlobItem"
    fullName: "com.microsoft.azure.storage.blob.ListBlobItem"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs*"
  name: "listBlobs"
  nameWithType: "CloudBlobContainer.listBlobs"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobs"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.EnumSet<com.microsoft.azure.storage.blob.BlobListingDetails>"
  spec.java:
  - uid: "java.util.EnumSet"
    name: "EnumSet"
    fullName: "java.util.EnumSet"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.BlobListingDetails"
    name: "BlobListingDetails"
    fullName: "com.microsoft.azure.storage.blob.BlobListingDetails"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.ListBlobItem>"
  spec.java:
  - uid: "com.microsoft.azure.storage.ResultSegment"
    name: "ResultSegment"
    fullName: "com.microsoft.azure.storage.ResultSegment"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.ListBlobItem"
    name: "ListBlobItem"
    fullName: "com.microsoft.azure.storage.blob.ListBlobItem"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented*"
  name: "listBlobsSegmented"
  nameWithType: "CloudBlobContainer.listBlobsSegmented"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listBlobsSegmented"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.storage.ResultContinuation"
  name: "ResultContinuation"
  nameWithType: "ResultContinuation"
  fullName: "com.microsoft.azure.storage.ResultContinuation"
- uid: "java.lang.Iterable<com.microsoft.azure.storage.blob.CloudBlobContainer>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
    name: "CloudBlobContainer"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers*"
  name: "listContainers"
  nameWithType: "CloudBlobContainer.listContainers"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainers"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.ContainerListingDetails"
  name: "ContainerListingDetails"
  nameWithType: "ContainerListingDetails"
  fullName: "com.microsoft.azure.storage.blob.ContainerListingDetails"
- uid: "com.microsoft.azure.storage.ResultSegment<com.microsoft.azure.storage.blob.CloudBlobContainer>"
  spec.java:
  - uid: "com.microsoft.azure.storage.ResultSegment"
    name: "ResultSegment"
    fullName: "com.microsoft.azure.storage.ResultSegment"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
    name: "CloudBlobContainer"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented*"
  name: "listContainersSegmented"
  nameWithType: "CloudBlobContainer.listContainersSegmented"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.listContainersSegmented"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse*"
  name: "updatePropertiesFromResponse"
  nameWithType: "CloudBlobContainer.updatePropertiesFromResponse"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.updatePropertiesFromResponse"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata*"
  name: "setMetadata"
  nameWithType: "CloudBlobContainer.setMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri*"
  name: "setStorageUri"
  nameWithType: "CloudBlobContainer.setStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties*"
  name: "setProperties"
  nameWithType: "CloudBlobContainer.setProperties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.setProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata*"
  name: "uploadMetadata"
  nameWithType: "CloudBlobContainer.uploadMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions*"
  name: "uploadPermissions"
  nameWithType: "CloudBlobContainer.uploadPermissions"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease*"
  name: "acquireLease"
  nameWithType: "CloudBlobContainer.acquireLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.acquireLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease*"
  name: "renewLease"
  nameWithType: "CloudBlobContainer.renewLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.renewLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease*"
  name: "releaseLease"
  nameWithType: "CloudBlobContainer.releaseLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.releaseLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease*"
  name: "breakLease"
  nameWithType: "CloudBlobContainer.breakLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.breakLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease*"
  name: "changeLease"
  nameWithType: "CloudBlobContainer.changeLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.changeLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccountInformation"
  name: "AccountInformation"
  nameWithType: "AccountInformation"
  fullName: "com.microsoft.azure.storage.AccountInformation"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo*"
  name: "downloadAccountInfo"
  nameWithType: "CloudBlobContainer.downloadAccountInfo"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInfo"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
- uid: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlobContainer,com.microsoft.azure.storage.AccountInformation>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.ServiceClient"
    name: "ServiceClient"
    fullName: "com.microsoft.azure.storage.ServiceClient"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
    name: "CloudBlobContainer"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.AccountInformation"
    name: "AccountInformation"
    fullName: "com.microsoft.azure.storage.AccountInformation"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl*"
  name: "downloadAccountInformationImpl"
  nameWithType: "CloudBlobContainer.downloadAccountInformationImpl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer.downloadAccountInformationImpl"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.microsoft.azure.storage.blob.ListBlobItem"
  name: "ListBlobItem"
  nameWithType: "ListBlobItem"
  fullName: "com.microsoft.azure.storage.blob.ListBlobItem"
- uid: "com.microsoft.azure.storage.blob.BlobListingDetails"
  name: "BlobListingDetails"
  nameWithType: "BlobListingDetails"
  fullName: "com.microsoft.azure.storage.blob.BlobListingDetails"
- uid: "java.util.EnumSet"
  name: "EnumSet"
  nameWithType: "EnumSet"
  fullName: "java.util.EnumSet"
- uid: "com.microsoft.azure.storage.ResultSegment"
  name: "ResultSegment"
  nameWithType: "ResultSegment"
  fullName: "com.microsoft.azure.storage.ResultSegment"
- uid: "com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlobContainer,com.microsoft.azure.storage.AccountInformation"
  name: "ServiceClient,CloudBlobContainer,AccountInformation"
  nameWithType: "ServiceClient,CloudBlobContainer,AccountInformation"
  fullName: "com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlobContainer,com.microsoft.azure.storage.AccountInformation"
- uid: "com.microsoft.azure.storage.core.StorageRequest"
  name: "StorageRequest"
  nameWithType: "StorageRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest"
