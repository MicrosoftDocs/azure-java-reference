### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  id: "HttpProxyHandler"
  parent: "com.azure.core.http.netty.implementation"
  children:
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler(java.net.InetSocketAddress,com.azure.core.util.AuthorizationChallengeHandler,java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>)"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme()"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol()"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
  - "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
  langs:
  - "java"
  name: "HttpProxyHandler"
  nameWithType: "HttpProxyHandler"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  type: "Class"
  package: "com.azure.core.http.netty.implementation"
  summary: "This class handles authorizing requests being sent through a proxy which require authentication."
  syntax:
    content: "public final class HttpProxyHandler extends ProxyHandler"
  inheritance:
  - "java.lang.Object"
  - "io.netty.channel.ChannelHandlerAdapter"
  - "io.netty.channel.ChannelInboundHandlerAdapter"
  - "io.netty.channel.ChannelDuplexHandler"
  - "io.netty.handler.proxy.ProxyHandler"
  inheritedMembers:
  - "io.netty.channel.ChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
  - "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelHandlerAdapter.isSharable()"
  - "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "io.netty.handler.proxy.ProxyHandler.<T>destinationAddress()"
  - "io.netty.handler.proxy.ProxyHandler.<T>proxyAddress()"
  - "io.netty.handler.proxy.ProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.authScheme()"
  - "io.netty.handler.proxy.ProxyHandler.channelActive(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.channelInactive(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "io.netty.handler.proxy.ProxyHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "io.netty.handler.proxy.ProxyHandler.connectFuture()"
  - "io.netty.handler.proxy.ProxyHandler.connectTimeoutMillis()"
  - "io.netty.handler.proxy.ProxyHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  - "io.netty.handler.proxy.ProxyHandler.exceptionMessage(java.lang.String)"
  - "io.netty.handler.proxy.ProxyHandler.flush(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  - "io.netty.handler.proxy.ProxyHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.isConnected()"
  - "io.netty.handler.proxy.ProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.protocol()"
  - "io.netty.handler.proxy.ProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.proxy.ProxyHandler.sendToProxyServer(java.lang.Object)"
  - "io.netty.handler.proxy.ProxyHandler.setConnectTimeoutMillis(long)"
  - "io.netty.handler.proxy.ProxyHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler(java.net.InetSocketAddress,com.azure.core.util.AuthorizationChallengeHandler,java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>)"
  id: "HttpProxyHandler(java.net.InetSocketAddress,com.azure.core.util.AuthorizationChallengeHandler,java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "HttpProxyHandler(InetSocketAddress proxyAddress, AuthorizationChallengeHandler challengeHandler, AtomicReference<ChallengeHolder> proxyChallengeHolderReference)"
  nameWithType: "HttpProxyHandler.HttpProxyHandler(InetSocketAddress proxyAddress, AuthorizationChallengeHandler challengeHandler, AtomicReference<ChallengeHolder> proxyChallengeHolderReference)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler(InetSocketAddress proxyAddress, AuthorizationChallengeHandler challengeHandler, AtomicReference<ChallengeHolder> proxyChallengeHolderReference)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler*"
  type: "Constructor"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "public HttpProxyHandler(InetSocketAddress proxyAddress, AuthorizationChallengeHandler challengeHandler, AtomicReference<ChallengeHolder> proxyChallengeHolderReference)"
    parameters:
    - id: "proxyAddress"
      type: "java.net.InetSocketAddress"
    - id: "challengeHandler"
      type: "com.azure.core.util.AuthorizationChallengeHandler"
    - id: "proxyChallengeHolderReference"
      type: "java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
  id: "addCodec(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "addCodec(ChannelHandlerContext ctx)"
  nameWithType: "HttpProxyHandler.addCodec(ChannelHandlerContext ctx)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec(ChannelHandlerContext ctx)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "protected void addCodec(ChannelHandlerContext ctx)"
    parameters:
    - id: "ctx"
      type: "io.netty.channel.ChannelHandlerContext"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme()"
  id: "authScheme()"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "authScheme()"
  nameWithType: "HttpProxyHandler.authScheme()"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme()"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "public String authScheme()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  id: "handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "handleResponse(ChannelHandlerContext ctx, Object o)"
  nameWithType: "HttpProxyHandler.handleResponse(ChannelHandlerContext ctx, Object o)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse(ChannelHandlerContext ctx, Object o)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "protected boolean handleResponse(ChannelHandlerContext ctx, Object o)"
    parameters:
    - id: "ctx"
      type: "io.netty.channel.ChannelHandlerContext"
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "boolean"
  exceptions:
  - type: "io.netty.handler.proxy.ProxyConnectException"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
  id: "newInitialMessage(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "newInitialMessage(ChannelHandlerContext ctx)"
  nameWithType: "HttpProxyHandler.newInitialMessage(ChannelHandlerContext ctx)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage(ChannelHandlerContext ctx)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "protected Object newInitialMessage(ChannelHandlerContext ctx)"
    parameters:
    - id: "ctx"
      type: "io.netty.channel.ChannelHandlerContext"
    return:
      type: "java.lang.Object"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol()"
  id: "protocol()"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "protocol()"
  nameWithType: "HttpProxyHandler.protocol()"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol()"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "public String protocol()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
  id: "removeDecoder(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "removeDecoder(ChannelHandlerContext ctx)"
  nameWithType: "HttpProxyHandler.removeDecoder(ChannelHandlerContext ctx)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder(ChannelHandlerContext ctx)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "protected void removeDecoder(ChannelHandlerContext ctx)"
    parameters:
    - id: "ctx"
      type: "io.netty.channel.ChannelHandlerContext"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
  id: "removeEncoder(io.netty.channel.ChannelHandlerContext)"
  parent: "com.azure.core.http.netty.implementation.HttpProxyHandler"
  langs:
  - "java"
  name: "removeEncoder(ChannelHandlerContext ctx)"
  nameWithType: "HttpProxyHandler.removeEncoder(ChannelHandlerContext ctx)"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder(ChannelHandlerContext ctx)"
  overload: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder*"
  type: "Method"
  package: "com.azure.core.http.netty.implementation"
  syntax:
    content: "protected void removeEncoder(ChannelHandlerContext ctx)"
    parameters:
    - id: "ctx"
      type: "io.netty.channel.ChannelHandlerContext"
references:
- uid: "java.net.InetSocketAddress"
  spec.java:
  - uid: "java.net.InetSocketAddress"
    name: "InetSocketAddress"
    fullName: "java.net.InetSocketAddress"
- uid: "com.azure.core.util.AuthorizationChallengeHandler"
  spec.java:
  - uid: "com.azure.core.util.AuthorizationChallengeHandler"
    name: "AuthorizationChallengeHandler"
    fullName: "com.azure.core.util.AuthorizationChallengeHandler"
- uid: "java.util.concurrent.atomic.AtomicReference<com.azure.core.http.netty.implementation.ChallengeHolder>"
  spec.java:
  - uid: "java.util.concurrent.atomic.AtomicReference"
    name: "AtomicReference"
    fullName: "java.util.concurrent.atomic.AtomicReference"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.netty.implementation.ChallengeHolder"
    name: "ChallengeHolder"
    fullName: "com.azure.core.http.netty.implementation.ChallengeHolder"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler*"
  name: "HttpProxyHandler"
  nameWithType: "HttpProxyHandler.HttpProxyHandler"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.HttpProxyHandler"
  package: "com.azure.core.http.netty.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol*"
  name: "protocol"
  nameWithType: "HttpProxyHandler.protocol"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.protocol"
  package: "com.azure.core.http.netty.implementation"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme*"
  name: "authScheme"
  nameWithType: "HttpProxyHandler.authScheme"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.authScheme"
  package: "com.azure.core.http.netty.implementation"
- uid: "io.netty.channel.ChannelHandlerContext"
  spec.java:
  - uid: "io.netty.channel.ChannelHandlerContext"
    name: "ChannelHandlerContext"
    fullName: "io.netty.channel.ChannelHandlerContext"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec*"
  name: "addCodec"
  nameWithType: "HttpProxyHandler.addCodec"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.addCodec"
  package: "com.azure.core.http.netty.implementation"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder*"
  name: "removeEncoder"
  nameWithType: "HttpProxyHandler.removeEncoder"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeEncoder"
  package: "com.azure.core.http.netty.implementation"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder*"
  name: "removeDecoder"
  nameWithType: "HttpProxyHandler.removeDecoder"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.removeDecoder"
  package: "com.azure.core.http.netty.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage*"
  name: "newInitialMessage"
  nameWithType: "HttpProxyHandler.newInitialMessage"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.newInitialMessage"
  package: "com.azure.core.http.netty.implementation"
- uid: "io.netty.handler.proxy.ProxyConnectException"
  spec.java:
  - uid: "io.netty.handler.proxy.ProxyConnectException"
    name: "ProxyConnectException"
    fullName: "io.netty.handler.proxy.ProxyConnectException"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse*"
  name: "handleResponse"
  nameWithType: "HttpProxyHandler.handleResponse"
  fullName: "com.azure.core.http.netty.implementation.HttpProxyHandler.handleResponse"
  package: "com.azure.core.http.netty.implementation"
- uid: "io.netty.handler.proxy.ProxyHandler"
  name: "ProxyHandler"
  nameWithType: "ProxyHandler"
  fullName: "io.netty.handler.proxy.ProxyHandler"
- uid: "io.netty.handler.proxy.ProxyHandler.channelActive(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.channelActive(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.channelActive(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.channelActive(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.removeEncoder(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.removeEncoder(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.removeEncoder(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
  name: "ChannelHandlerAdapter.ensureNotSharable()"
  nameWithType: "ChannelHandlerAdapter.ensureNotSharable()"
  fullName: "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "io.netty.handler.proxy.ProxyHandler.exceptionMessage(java.lang.String)"
  name: "ProxyHandler.exceptionMessage(String)"
  nameWithType: "ProxyHandler.exceptionMessage(String)"
  fullName: "io.netty.handler.proxy.ProxyHandler.exceptionMessage(java.lang.String)"
- uid: "io.netty.handler.proxy.ProxyHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.handlerAdded(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.handlerAdded(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.handlerAdded(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.isConnected()"
  name: "ProxyHandler.isConnected()"
  nameWithType: "ProxyHandler.isConnected()"
  fullName: "io.netty.handler.proxy.ProxyHandler.isConnected()"
- uid: "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelInboundHandlerAdapter.channelRegistered(ChannelHandlerContext)"
  nameWithType: "ChannelInboundHandlerAdapter.channelRegistered(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.flush(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.flush(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.flush(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.flush(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.channel.ChannelHandlerAdapter.isSharable()"
  name: "ChannelHandlerAdapter.isSharable()"
  nameWithType: "ChannelHandlerAdapter.isSharable()"
  fullName: "io.netty.channel.ChannelHandlerAdapter.isSharable()"
- uid: "io.netty.channel.ChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  name: "ChannelDuplexHandler.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)"
  nameWithType: "ChannelDuplexHandler.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)"
  fullName: "io.netty.channel.ChannelDuplexHandler.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.proxy.ProxyHandler.connectTimeoutMillis()"
  name: "ProxyHandler.connectTimeoutMillis()"
  nameWithType: "ProxyHandler.connectTimeoutMillis()"
  fullName: "io.netty.handler.proxy.ProxyHandler.connectTimeoutMillis()"
- uid: "io.netty.channel.ChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelDuplexHandler.close(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelDuplexHandler.close(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelDuplexHandler.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.proxy.ProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.removeDecoder(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.removeDecoder(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.removeDecoder(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelInboundHandlerAdapter.channelUnregistered(ChannelHandlerContext)"
  nameWithType: "ChannelInboundHandlerAdapter.channelUnregistered(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(io.netty.channel.ChannelHandlerContext)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "io.netty.handler.proxy.ProxyHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  name: "ProxyHandler.write(ChannelHandlerContext,Object,ChannelPromise)"
  nameWithType: "ProxyHandler.write(ChannelHandlerContext,Object,ChannelPromise)"
  fullName: "io.netty.handler.proxy.ProxyHandler.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.netty.handler.proxy.ProxyHandler.setConnectTimeoutMillis(long)"
  name: "ProxyHandler.setConnectTimeoutMillis(long)"
  nameWithType: "ProxyHandler.setConnectTimeoutMillis(long)"
  fullName: "io.netty.handler.proxy.ProxyHandler.setConnectTimeoutMillis(long)"
- uid: "io.netty.handler.proxy.ProxyHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  name: "ProxyHandler.channelRead(ChannelHandlerContext,Object)"
  nameWithType: "ProxyHandler.channelRead(ChannelHandlerContext,Object)"
  fullName: "io.netty.handler.proxy.ProxyHandler.channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- uid: "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  name: "ChannelInboundHandlerAdapter.userEventTriggered(ChannelHandlerContext,Object)"
  nameWithType: "ChannelInboundHandlerAdapter.userEventTriggered(ChannelHandlerContext,Object)"
  fullName: "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- uid: "io.netty.channel.ChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelDuplexHandler.read(ChannelHandlerContext)"
  nameWithType: "ChannelDuplexHandler.read(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelDuplexHandler.read(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.protocol()"
  name: "ProxyHandler.protocol()"
  nameWithType: "ProxyHandler.protocol()"
  fullName: "io.netty.handler.proxy.ProxyHandler.protocol()"
- uid: "io.netty.channel.ChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelDuplexHandler.deregister(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelDuplexHandler.deregister(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelDuplexHandler.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.proxy.ProxyHandler.sendToProxyServer(java.lang.Object)"
  name: "ProxyHandler.sendToProxyServer(Object)"
  nameWithType: "ProxyHandler.sendToProxyServer(Object)"
  fullName: "io.netty.handler.proxy.ProxyHandler.sendToProxyServer(java.lang.Object)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "io.netty.handler.proxy.ProxyHandler.authScheme()"
  name: "ProxyHandler.authScheme()"
  nameWithType: "ProxyHandler.authScheme()"
  fullName: "io.netty.handler.proxy.ProxyHandler.authScheme()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelInboundHandlerAdapter.channelWritabilityChanged(ChannelHandlerContext)"
  nameWithType: "ChannelInboundHandlerAdapter.channelWritabilityChanged(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.<T>proxyAddress()"
  name: "ProxyHandler.<T>proxyAddress()"
  nameWithType: "ProxyHandler.<T>proxyAddress()"
  fullName: "io.netty.handler.proxy.ProxyHandler.<T>proxyAddress()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.netty.handler.proxy.ProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.newInitialMessage(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.newInitialMessage(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.newInitialMessage(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.connectFuture()"
  name: "ProxyHandler.connectFuture()"
  nameWithType: "ProxyHandler.connectFuture()"
  fullName: "io.netty.handler.proxy.ProxyHandler.connectFuture()"
- uid: "io.netty.handler.proxy.ProxyHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.channelReadComplete(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.channelReadComplete(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.channelReadComplete(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelHandlerAdapter.handlerRemoved(ChannelHandlerContext)"
  nameWithType: "ChannelHandlerAdapter.handlerRemoved(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.channelInactive(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.channelInactive(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.channelInactive(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.channelInactive(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  name: "ProxyHandler.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)"
  nameWithType: "ProxyHandler.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)"
  fullName: "io.netty.handler.proxy.ProxyHandler.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.proxy.ProxyHandler.<T>destinationAddress()"
  name: "ProxyHandler.<T>destinationAddress()"
  nameWithType: "ProxyHandler.<T>destinationAddress()"
  fullName: "io.netty.handler.proxy.ProxyHandler.<T>destinationAddress()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.netty.handler.proxy.ProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
  name: "ProxyHandler.addCodec(ChannelHandlerContext)"
  nameWithType: "ProxyHandler.addCodec(ChannelHandlerContext)"
  fullName: "io.netty.handler.proxy.ProxyHandler.addCodec(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.proxy.ProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
  name: "ProxyHandler.handleResponse(ChannelHandlerContext,Object)"
  nameWithType: "ProxyHandler.handleResponse(ChannelHandlerContext,Object)"
  fullName: "io.netty.handler.proxy.ProxyHandler.handleResponse(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
- uid: "io.netty.handler.proxy.ProxyHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  name: "ProxyHandler.exceptionCaught(ChannelHandlerContext,Throwable)"
  nameWithType: "ProxyHandler.exceptionCaught(ChannelHandlerContext,Throwable)"
  fullName: "io.netty.handler.proxy.ProxyHandler.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
- uid: "io.netty.channel.ChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelDuplexHandler.disconnect(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelDuplexHandler.disconnect(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelDuplexHandler.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "com.azure.core.http.netty.implementation.ChallengeHolder"
  name: "ChallengeHolder"
  nameWithType: "ChallengeHolder"
  fullName: "com.azure.core.http.netty.implementation.ChallengeHolder"
- uid: "java.util.concurrent.atomic.AtomicReference"
  name: "AtomicReference"
  nameWithType: "AtomicReference"
  fullName: "java.util.concurrent.atomic.AtomicReference"
- uid: "io.netty.handler.proxy.ProxyHandler."
  name: "ProxyHandler."
  nameWithType: "ProxyHandler."
  fullName: "io.netty.handler.proxy.ProxyHandler."
- uid: "T>proxyAddress()"
  name: "T>proxyAddress()"
  nameWithType: "T>proxyAddress()"
  fullName: "T>proxyAddress()"
- uid: "T>destinationAddress()"
  name: "T>destinationAddress()"
  nameWithType: "T>destinationAddress()"
  fullName: "T>destinationAddress()"
