### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.PropertyPair"
  id: "PropertyPair"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.PropertyPair.PropertyPair()"
  - "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty(com.microsoft.azure.storage.table.EntityProperty,java.lang.Object)"
  - "com.microsoft.azure.storage.table.PropertyPair.effectiveName"
  - "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty(java.lang.Object)"
  - "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs(java.lang.Class<?>)"
  - "com.microsoft.azure.storage.table.PropertyPair.isEncrypted"
  - "com.microsoft.azure.storage.table.PropertyPair.shouldProcess()"
  - "com.microsoft.azure.storage.table.PropertyPair.type"
  langs:
  - "java"
  name: "PropertyPair"
  nameWithType: "PropertyPair"
  fullName: "com.microsoft.azure.storage.table.PropertyPair"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. A class used internally during the reflection process to determine which properties should be serialized."
  syntax:
    content: "final class PropertyPair"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.PropertyPair.PropertyPair()"
  id: "PropertyPair()"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "PropertyPair()"
  nameWithType: "PropertyPair.PropertyPair()"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.PropertyPair()"
  overload: "com.microsoft.azure.storage.table.PropertyPair.PropertyPair*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: " PropertyPair()"
- uid: "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty(com.microsoft.azure.storage.table.EntityProperty,java.lang.Object)"
  id: "consumeEntityProperty(com.microsoft.azure.storage.table.EntityProperty,java.lang.Object)"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "consumeEntityProperty(EntityProperty prop, Object instance)"
  nameWithType: "PropertyPair.consumeEntityProperty(EntityProperty prop, Object instance)"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty(EntityProperty prop, Object instance)"
  overload: "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Invokes the setter method on the specified instance parameter with the value of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> deserialized as the appropriate type."
  syntax:
    content: "protected void consumeEntityProperty(EntityProperty prop, Object instance)"
    parameters:
    - id: "prop"
      type: "com.microsoft.azure.storage.table.EntityProperty"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> containing the value to pass to the setter on the instance."
    - id: "instance"
      type: "java.lang.Object"
      description: "An instance of a class supporting this property with getter and setter methods of the\n            appropriate name and parameter or return type."
  exceptions:
  - type: "java.lang.IllegalArgumentException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the setter method (or of a subclass or implementor thereof)."
  - type: "java.lang.IllegalAccessException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the setter method (or of a subclass or implementor thereof)."
  - type: "java.lang.reflect.InvocationTargetException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the setter method (or of a subclass or implementor thereof)."
- uid: "com.microsoft.azure.storage.table.PropertyPair.effectiveName"
  id: "effectiveName"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "effectiveName"
  nameWithType: "PropertyPair.effectiveName"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.effectiveName"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: " String effectiveName"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty(java.lang.Object)"
  id: "generateEntityProperty(java.lang.Object)"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "generateEntityProperty(Object instance)"
  nameWithType: "PropertyPair.generateEntityProperty(Object instance)"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty(Object instance)"
  overload: "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Generates an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> from the result of invoking the getter method for this property on the specified instance parameter."
  syntax:
    content: "protected EntityProperty generateEntityProperty(Object instance)"
    parameters:
    - id: "instance"
      type: "java.lang.Object"
      description: "An instance of a class supporting this property with getter and setter methods of the\n            appropriate name and parameter or return type."
    return:
      type: "com.microsoft.azure.storage.table.EntityProperty"
      description: "An <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> with the data type and value returned by the invoked getter on the instance."
  exceptions:
  - type: "java.lang.IllegalArgumentException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the getter method (or of a subclass or implementor thereof)."
  - type: "java.lang.IllegalAccessException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the getter method (or of a subclass or implementor thereof)."
  - type: "java.lang.reflect.InvocationTargetException"
    description: "if the specified instance parameter is not an instance of the class\n             or interface declaring the getter method (or of a subclass or implementor thereof)."
- uid: "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs(java.lang.Class<?>)"
  id: "generatePropertyPairs(java.lang.Class<?>)"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "generatePropertyPairs(Class<?> clazzType)"
  nameWithType: "PropertyPair.generatePropertyPairs(Class<?> clazzType)"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs(Class<?> clazzType)"
  overload: "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. A static factory method to generate a map of property names to <xref uid=\"com.microsoft.azure.storage.table.PropertyPair\" data-throw-if-not-resolved=\"false\">PropertyPair</xref> instances for the specified class type. Checks if the cache is enabled and if so tries to get the property pairs from it. Otherwise, uses reflection to find pairs of getter and setter methods that are annotated with <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\">StoreAs</xref> with a common property name, or of the form `getPropertyName` and `setPropertyName`, with a common type for the getter return value and the setter parameter, and stores the methods and the property name for each pair found in a map for use in serializing and deserializing entity data. If the cache is enabled and the mapping was not present, adds it to the cache."
  syntax:
    content: "protected static HashMap<String,PropertyPair> generatePropertyPairs(Class<?> clazzType)"
    parameters:
    - id: "clazzType"
      type: "java.lang.Class<?>"
      description: "The class type to check for matching getter and setter methods with a common return and parameter\n            type, respectively."
    return:
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.PropertyPair>"
- uid: "com.microsoft.azure.storage.table.PropertyPair.isEncrypted"
  id: "isEncrypted"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "isEncrypted"
  nameWithType: "PropertyPair.isEncrypted"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.isEncrypted"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: " boolean isEncrypted"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.table.PropertyPair.shouldProcess()"
  id: "shouldProcess()"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "shouldProcess()"
  nameWithType: "PropertyPair.shouldProcess()"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.shouldProcess()"
  overload: "com.microsoft.azure.storage.table.PropertyPair.shouldProcess*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. A utility function that returns `true` if this property is accessible through reflection."
  syntax:
    content: "protected boolean shouldProcess()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.table.PropertyPair.type"
  id: "type"
  parent: "com.microsoft.azure.storage.table.PropertyPair"
  langs:
  - "java"
  name: "type"
  nameWithType: "PropertyPair.type"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.type"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: " Class<?> type"
    return:
      type: "java.lang.Class<?>"
references:
- uid: "com.microsoft.azure.storage.table.PropertyPair.PropertyPair*"
  name: "PropertyPair"
  nameWithType: "PropertyPair.PropertyPair"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.PropertyPair"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.PropertyPair>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.table.PropertyPair"
    name: "PropertyPair"
    fullName: "com.microsoft.azure.storage.table.PropertyPair"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs*"
  name: "generatePropertyPairs"
  nameWithType: "PropertyPair.generatePropertyPairs"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.generatePropertyPairs"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.IllegalArgumentException"
  spec.java:
  - uid: "java.lang.IllegalArgumentException"
    name: "IllegalArgumentException"
    fullName: "java.lang.IllegalArgumentException"
- uid: "java.lang.IllegalAccessException"
  spec.java:
  - uid: "java.lang.IllegalAccessException"
    name: "IllegalAccessException"
    fullName: "java.lang.IllegalAccessException"
- uid: "java.lang.reflect.InvocationTargetException"
  spec.java:
  - uid: "java.lang.reflect.InvocationTargetException"
    name: "InvocationTargetException"
    fullName: "java.lang.reflect.InvocationTargetException"
- uid: "com.microsoft.azure.storage.table.EntityProperty"
  name: "EntityProperty"
  nameWithType: "EntityProperty"
  fullName: "com.microsoft.azure.storage.table.EntityProperty"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty*"
  name: "consumeEntityProperty"
  nameWithType: "PropertyPair.consumeEntityProperty"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.consumeEntityProperty"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty*"
  name: "generateEntityProperty"
  nameWithType: "PropertyPair.generateEntityProperty"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.generateEntityProperty"
  package: "com.microsoft.azure.storage.table"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.table.PropertyPair.shouldProcess*"
  name: "shouldProcess"
  nameWithType: "PropertyPair.shouldProcess"
  fullName: "com.microsoft.azure.storage.table.PropertyPair.shouldProcess"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.lang.String,com.microsoft.azure.storage.table.PropertyPair"
  name: "String,PropertyPair"
  nameWithType: "String,PropertyPair"
  fullName: "java.lang.String,com.microsoft.azure.storage.table.PropertyPair"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
