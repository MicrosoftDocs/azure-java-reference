### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  id: "BlobContainerProperties"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold()"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy(java.lang.Boolean)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold(java.lang.Boolean)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified(java.util.Date)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  - "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  langs:
  - "java"
  name: "BlobContainerProperties"
  nameWithType: "BlobContainerProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the system properties for a container."
  syntax:
    content: "public final class BlobContainerProperties"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties()"
  id: "BlobContainerProperties()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "BlobContainerProperties()"
  nameWithType: "BlobContainerProperties.BlobContainerProperties()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public BlobContainerProperties()"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag()"
  id: "getEtag()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getEtag()"
  nameWithType: "BlobContainerProperties.getEtag()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the ETag value of the container.\n\nThe ETag value is a unique identifier that is updated when a write operation is performed against the container. It may be used to perform operations conditionally, providing concurrency control and improved efficiency.\n\nThe <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(java.lang.String)\" data-throw-if-not-resolved=\"false\">AccessCondition#generateIfMatchCondition(String)</xref> and <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(java.lang.String)\" data-throw-if-not-resolved=\"false\">AccessCondition#generateIfNoneMatchCondition(String)</xref> methods take an ETag value and return an <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that may be specified on the request."
  syntax:
    content: "public String getEtag()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ETag."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified()"
  id: "getLastModified()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getLastModified()"
  nameWithType: "BlobContainerProperties.getLastModified()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the last modified time on the container."
  syntax:
    content: "public Date getLastModified()"
    return:
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object which represents the last modified time."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration()"
  id: "getLeaseDuration()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getLeaseDuration()"
  nameWithType: "BlobContainerProperties.getLeaseDuration()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease duration of the container."
  syntax:
    content: "public LeaseDuration getLeaseDuration()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseDuration"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseDuration\" data-throw-if-not-resolved=\"false\">LeaseDuration</xref></code> object which represents the lease duration of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState()"
  id: "getLeaseState()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getLeaseState()"
  nameWithType: "BlobContainerProperties.getLeaseState()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease state of the container."
  syntax:
    content: "public LeaseState getLeaseState()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseState"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseState\" data-throw-if-not-resolved=\"false\">LeaseState</xref></code> object which represents the lease state of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus()"
  id: "getLeaseStatus()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getLeaseStatus()"
  nameWithType: "BlobContainerProperties.getLeaseStatus()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease status of the container."
  syntax:
    content: "public LeaseStatus getLeaseStatus()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseStatus"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseStatus\" data-throw-if-not-resolved=\"false\">LeaseStatus</xref></code> object which represents the lease status of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess()"
  id: "getPublicAccess()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "getPublicAccess()"
  nameWithType: "BlobContainerProperties.getPublicAccess()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the public access level for the container. This field should only be set using the container's <xref uid=\"CloudBlobContainer#create(BlobContainerPublicAccessType,\n BlobRequestOptions, com.microsoft.azure.storage.OperationContext)\" data-throw-if-not-resolved=\"false\">create</xref> method or <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions)\" data-throw-if-not-resolved=\"false\">uploadPermissions</xref> method."
  syntax:
    content: "public BlobContainerPublicAccessType getPublicAccess()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref></code> that specifies the level of public access\n that is allowed on the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy()"
  id: "hasImmutabilityPolicy()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "hasImmutabilityPolicy()"
  nameWithType: "BlobContainerProperties.hasImmutabilityPolicy()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the hasImmutabilityPolicy value of the container."
  syntax:
    content: "public Boolean hasImmutabilityPolicy()"
    return:
      type: "java.lang.Boolean"
      description: "A <code>Boolean</code> which represents the hasImmutabilityPolicy value."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold()"
  id: "hasLegalHold()"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "hasLegalHold()"
  nameWithType: "BlobContainerProperties.hasLegalHold()"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold()"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the hasLegalHold value of the container."
  syntax:
    content: "public Boolean hasLegalHold()"
    return:
      type: "java.lang.Boolean"
      description: "A <code>Boolean</code> which represents the hasLegalHold value."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag(java.lang.String)"
  id: "setEtag(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setEtag(String etag)"
  nameWithType: "BlobContainerProperties.setEtag(String etag)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag(String etag)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the ETag value on the container."
  syntax:
    content: "protected void setEtag(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ETag to set."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy(java.lang.Boolean)"
  id: "setHasImmutabilityPolicy(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  nameWithType: "BlobContainerProperties.setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the hasImmutabilityPolicy value on the container."
  syntax:
    content: "protected void setHasImmutabilityPolicy(Boolean hasImmutabilityPolicy)"
    parameters:
    - id: "hasImmutabilityPolicy"
      type: "java.lang.Boolean"
      description: "A <code>Boolean</code> which represents the hasImmutabilityProperty value to set."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold(java.lang.Boolean)"
  id: "setHasLegalHold(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setHasLegalHold(Boolean hasLegalHold)"
  nameWithType: "BlobContainerProperties.setHasLegalHold(Boolean hasLegalHold)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold(Boolean hasLegalHold)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the hasLegalHold value on the container."
  syntax:
    content: "protected void setHasLegalHold(Boolean hasLegalHold)"
    parameters:
    - id: "hasLegalHold"
      type: "java.lang.Boolean"
      description: "A <code>Boolean</code> which represents the hasLegalHold value to set."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified(java.util.Date)"
  id: "setLastModified(java.util.Date)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setLastModified(Date lastModified)"
  nameWithType: "BlobContainerProperties.setLastModified(Date lastModified)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified(Date lastModified)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the last modified time on the container."
  syntax:
    content: "protected void setLastModified(Date lastModified)"
    parameters:
    - id: "lastModified"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object which represents the last modified time to set."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  id: "setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setLeaseDuration(LeaseDuration leaseDuration)"
  nameWithType: "BlobContainerProperties.setLeaseDuration(LeaseDuration leaseDuration)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration(LeaseDuration leaseDuration)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease duration on the container."
  syntax:
    content: "protected void setLeaseDuration(LeaseDuration leaseDuration)"
    parameters:
    - id: "leaseDuration"
      type: "com.microsoft.azure.storage.blob.LeaseDuration"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseDuration\" data-throw-if-not-resolved=\"false\">LeaseDuration</xref></code> object which represents the lease duration of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  id: "setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setLeaseState(LeaseState leaseState)"
  nameWithType: "BlobContainerProperties.setLeaseState(LeaseState leaseState)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState(LeaseState leaseState)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease status on the container."
  syntax:
    content: "protected void setLeaseState(LeaseState leaseState)"
    parameters:
    - id: "leaseState"
      type: "com.microsoft.azure.storage.blob.LeaseState"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseState\" data-throw-if-not-resolved=\"false\">LeaseState</xref></code> object which represents the lease state of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  id: "setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setLeaseStatus(LeaseStatus leaseStatus)"
  nameWithType: "BlobContainerProperties.setLeaseStatus(LeaseStatus leaseStatus)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus(LeaseStatus leaseStatus)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease status on the container."
  syntax:
    content: "protected void setLeaseStatus(LeaseStatus leaseStatus)"
    parameters:
    - id: "leaseStatus"
      type: "com.microsoft.azure.storage.blob.LeaseStatus"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.LeaseStatus\" data-throw-if-not-resolved=\"false\">LeaseStatus</xref></code> object which represents the lease status of the container."
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  id: "setPublicAccess(com.microsoft.azure.storage.blob.BlobContainerPublicAccessType)"
  parent: "com.microsoft.azure.storage.blob.BlobContainerProperties"
  langs:
  - "java"
  name: "setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  nameWithType: "BlobContainerProperties.setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess(BlobContainerPublicAccessType publicAccess)"
  overload: "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the public access level on the container. This should only be set using the container's <xref uid=\"CloudBlobContainer#create(BlobContainerPublicAccessType,\n BlobRequestOptions, com.microsoft.azure.storage.OperationContext)\" data-throw-if-not-resolved=\"false\">create</xref> method or <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.uploadPermissions(com.microsoft.azure.storage.blob.BlobContainerPermissions)\" data-throw-if-not-resolved=\"false\">uploadPermissions</xref> method."
  syntax:
    content: "protected void setPublicAccess(BlobContainerPublicAccessType publicAccess)"
    parameters:
    - id: "publicAccess"
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.BlobContainerPublicAccessType\" data-throw-if-not-resolved=\"false\">BlobContainerPublicAccessType</xref></code> object\n            which represents the public access level on the container."
references:
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties*"
  name: "BlobContainerProperties"
  nameWithType: "BlobContainerProperties.BlobContainerProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.BlobContainerProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag*"
  name: "getEtag"
  nameWithType: "BlobContainerProperties.getEtag"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getEtag"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy*"
  name: "hasImmutabilityPolicy"
  nameWithType: "BlobContainerProperties.hasImmutabilityPolicy"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasImmutabilityPolicy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold*"
  name: "hasLegalHold"
  nameWithType: "BlobContainerProperties.hasLegalHold"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.hasLegalHold"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified*"
  name: "getLastModified"
  nameWithType: "BlobContainerProperties.getLastModified"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLastModified"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseStatus"
  name: "LeaseStatus"
  nameWithType: "LeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.LeaseStatus"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus*"
  name: "getLeaseStatus"
  nameWithType: "BlobContainerProperties.getLeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseState"
  name: "LeaseState"
  nameWithType: "LeaseState"
  fullName: "com.microsoft.azure.storage.blob.LeaseState"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState*"
  name: "getLeaseState"
  nameWithType: "BlobContainerProperties.getLeaseState"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseDuration"
  name: "LeaseDuration"
  nameWithType: "LeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.LeaseDuration"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration*"
  name: "getLeaseDuration"
  nameWithType: "BlobContainerProperties.getLeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getLeaseDuration"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
  name: "BlobContainerPublicAccessType"
  nameWithType: "BlobContainerPublicAccessType"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess*"
  name: "getPublicAccess"
  nameWithType: "BlobContainerProperties.getPublicAccess"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.getPublicAccess"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag*"
  name: "setEtag"
  nameWithType: "BlobContainerProperties.setEtag"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setEtag"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy*"
  name: "setHasImmutabilityPolicy"
  nameWithType: "BlobContainerProperties.setHasImmutabilityPolicy"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasImmutabilityPolicy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold*"
  name: "setHasLegalHold"
  nameWithType: "BlobContainerProperties.setHasLegalHold"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setHasLegalHold"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified*"
  name: "setLastModified"
  nameWithType: "BlobContainerProperties.setLastModified"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLastModified"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus*"
  name: "setLeaseStatus"
  nameWithType: "BlobContainerProperties.setLeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState*"
  name: "setLeaseState"
  nameWithType: "BlobContainerProperties.setLeaseState"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration*"
  name: "setLeaseDuration"
  nameWithType: "BlobContainerProperties.setLeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setLeaseDuration"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess*"
  name: "setPublicAccess"
  nameWithType: "BlobContainerProperties.setPublicAccess"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerProperties.setPublicAccess"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
