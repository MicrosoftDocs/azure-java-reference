### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  id: "MessageAndSessionPump"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions,java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions,java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,java.util.concurrent.ExecutorService)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount(int)"
  langs:
  - "java"
  name: "MessageAndSessionPump"
  nameWithType: "MessageAndSessionPump"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " class MessageAndSessionPump extends InitializableEntity implements IMessageAndSessionPump"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity"
  - "com.microsoft.azure.servicebus.InitializableEntity"
  implements:
  - "com.microsoft.azure.servicebus.IMessageAndSessionPump"
  inheritedMembers:
  - "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  id: "MessageAndSessionPump(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "MessageAndSessionPump(MessagingFactory factory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  nameWithType: "MessageAndSessionPump.MessageAndSessionPump(MessagingFactory factory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump(MessagingFactory factory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageAndSessionPump(MessagingFactory factory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
    parameters:
    - id: "factory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "receiveMode"
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID)"
  id: "abandon(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandon(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.abandon(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandon(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.abandon(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID)"
  id: "abandonAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.abandonAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.abandonAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(java.util.UUID)"
  id: "complete(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "complete(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.complete(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void complete(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "complete(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.complete(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void complete(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(java.util.UUID)"
  id: "completeAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "completeAsync(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.completeAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "completeAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.completeAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID)"
  id: "deadLetter(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID)"
  id: "deadLetterAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(java.util.UUID)"
  id: "defer(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "defer(UUID lockToken)"
  nameWithType: "MessageAndSessionPump.defer(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " void defer(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageAndSessionPump.defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " void defer(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount()"
  id: "getPrefetchCount()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "getPrefetchCount()"
  nameWithType: "MessageAndSessionPump.getPrefetchCount()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public int getPrefetchCount()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync()"
  id: "initializeAsync()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "initializeAsync()"
  nameWithType: "MessageAndSessionPump.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " CompletableFuture<Void> initializeAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose()"
  id: "onClose()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "onClose()"
  nameWithType: "MessageAndSessionPump.onClose()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected CompletableFuture<Void> onClose()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler)"
  id: "registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerMessageHandler(IMessageHandler handler)"
  nameWithType: "MessageAndSessionPump.registerMessageHandler(IMessageHandler handler)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(IMessageHandler handler)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerMessageHandler(IMessageHandler handler)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.IMessageHandler"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions)"
  id: "registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  nameWithType: "MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.IMessageHandler"
    - id: "handlerOptions"
      type: "com.microsoft.azure.servicebus.MessageHandlerOptions"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions,java.util.concurrent.ExecutorService)"
  id: "registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,com.microsoft.azure.servicebus.MessageHandlerOptions,java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  nameWithType: "MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions, ExecutorService executorService)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.IMessageHandler"
    - id: "handlerOptions"
      type: "com.microsoft.azure.servicebus.MessageHandlerOptions"
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,java.util.concurrent.ExecutorService)"
  id: "registerMessageHandler(com.microsoft.azure.servicebus.IMessageHandler,java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  nameWithType: "MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerMessageHandler(IMessageHandler handler, ExecutorService executorService)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.IMessageHandler"
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler)"
  id: "registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerSessionHandler(ISessionHandler handler)"
  nameWithType: "MessageAndSessionPump.registerSessionHandler(ISessionHandler handler)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(ISessionHandler handler)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerSessionHandler(ISessionHandler handler)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.ISessionHandler"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions)"
  id: "registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  nameWithType: "MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.ISessionHandler"
    - id: "handlerOptions"
      type: "com.microsoft.azure.servicebus.SessionHandlerOptions"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions,java.util.concurrent.ExecutorService)"
  id: "registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,com.microsoft.azure.servicebus.SessionHandlerOptions,java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  nameWithType: "MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions, ExecutorService executorService)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.ISessionHandler"
    - id: "handlerOptions"
      type: "com.microsoft.azure.servicebus.SessionHandlerOptions"
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,java.util.concurrent.ExecutorService)"
  id: "registerSessionHandler(com.microsoft.azure.servicebus.ISessionHandler,java.util.concurrent.ExecutorService)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  nameWithType: "MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void registerSessionHandler(ISessionHandler handler, ExecutorService executorService)"
    parameters:
    - id: "handler"
      type: "com.microsoft.azure.servicebus.ISessionHandler"
    - id: "executorService"
      type: "java.util.concurrent.ExecutorService"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount(int)"
  id: "setPrefetchCount(int)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump"
  langs:
  - "java"
  name: "setPrefetchCount(int prefetchCount)"
  nameWithType: "MessageAndSessionPump.setPrefetchCount(int prefetchCount)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount(int prefetchCount)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void setPrefetchCount(int prefetchCount)"
    parameters:
    - id: "prefetchCount"
      type: "int"
  exceptions:
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
references:
- uid: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
  name: "MessagingFactory"
  nameWithType: "MessagingFactory"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump*"
  name: "MessageAndSessionPump"
  nameWithType: "MessageAndSessionPump.MessageAndSessionPump"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessageAndSessionPump"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  name: "ServiceBusException"
  nameWithType: "ServiceBusException"
  fullName: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.IMessageHandler"
  name: "IMessageHandler"
  nameWithType: "IMessageHandler"
  fullName: "com.microsoft.azure.servicebus.IMessageHandler"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler*"
  name: "registerMessageHandler"
  nameWithType: "MessageAndSessionPump.registerMessageHandler"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerMessageHandler"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.ExecutorService"
  spec.java:
  - uid: "java.util.concurrent.ExecutorService"
    name: "ExecutorService"
    fullName: "java.util.concurrent.ExecutorService"
- uid: "com.microsoft.azure.servicebus.MessageHandlerOptions"
  name: "MessageHandlerOptions"
  nameWithType: "MessageHandlerOptions"
  fullName: "com.microsoft.azure.servicebus.MessageHandlerOptions"
- uid: "com.microsoft.azure.servicebus.ISessionHandler"
  name: "ISessionHandler"
  nameWithType: "ISessionHandler"
  fullName: "com.microsoft.azure.servicebus.ISessionHandler"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler*"
  name: "registerSessionHandler"
  nameWithType: "MessageAndSessionPump.registerSessionHandler"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.registerSessionHandler"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.SessionHandlerOptions"
  name: "SessionHandlerOptions"
  nameWithType: "SessionHandlerOptions"
  fullName: "com.microsoft.azure.servicebus.SessionHandlerOptions"
- uid: "java.util.concurrent.CompletableFuture<java.lang.Void>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync*"
  name: "initializeAsync"
  nameWithType: "MessageAndSessionPump.initializeAsync"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.initializeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose*"
  name: "onClose"
  nameWithType: "MessageAndSessionPump.onClose"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.onClose"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon*"
  name: "abandon"
  nameWithType: "MessageAndSessionPump.abandon"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandon"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.TransactionContext"
  name: "TransactionContext"
  nameWithType: "TransactionContext"
  fullName: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync*"
  name: "abandonAsync"
  nameWithType: "MessageAndSessionPump.abandonAsync"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.abandonAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete*"
  name: "complete"
  nameWithType: "MessageAndSessionPump.complete"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.complete"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync*"
  name: "completeAsync"
  nameWithType: "MessageAndSessionPump.completeAsync"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.completeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer*"
  name: "defer"
  nameWithType: "MessageAndSessionPump.defer"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.defer"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter*"
  name: "deadLetter"
  nameWithType: "MessageAndSessionPump.deadLetter"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetter"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync*"
  name: "deadLetterAsync"
  nameWithType: "MessageAndSessionPump.deadLetterAsync"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.deadLetterAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount*"
  name: "getPrefetchCount"
  nameWithType: "MessageAndSessionPump.getPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.getPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount*"
  name: "setPrefetchCount"
  nameWithType: "MessageAndSessionPump.setPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.setPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.InitializableEntity"
  name: "InitializableEntity"
  nameWithType: "InitializableEntity"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity"
- uid: "com.microsoft.azure.servicebus.IMessageAndSessionPump"
  name: "IMessageAndSessionPump"
  nameWithType: "IMessageAndSessionPump"
  fullName: "com.microsoft.azure.servicebus.IMessageAndSessionPump"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  name: "ClientEntity.setClosed()"
  nameWithType: "ClientEntity.setClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  name: "ClientEntity.finalize()"
  nameWithType: "ClientEntity.finalize()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  name: "ClientEntity.setClosing()"
  nameWithType: "ClientEntity.setClosing()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  name: "ClientEntity.throwIfClosed(Throwable)"
  nameWithType: "ClientEntity.throwIfClosed(Throwable)"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  name: "ClientEntity.close()"
  nameWithType: "ClientEntity.close()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  name: "ClientEntity.closeAsync()"
  nameWithType: "ClientEntity.closeAsync()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- uid: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  name: "InitializableEntity.initializeAsync()"
  nameWithType: "InitializableEntity.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  name: "ClientEntity.onClose()"
  nameWithType: "ClientEntity.onClose()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  name: "ClientEntity.getIsClosed()"
  nameWithType: "ClientEntity.getIsClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  name: "ClientEntity.getIsClosingOrClosed()"
  nameWithType: "ClientEntity.getIsClosingOrClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  name: "ClientEntity.getClientId()"
  nameWithType: "ClientEntity.getClientId()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.SessionTracker"
  name: "MessageAndSessionPump.SessionTracker"
  nameWithType: "MessageAndSessionPump.SessionTracker"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.SessionTracker"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  name: "MessageAndSessionPump.RenewLockLoop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessgeRenewLockLoop"
  name: "MessageAndSessionPump.MessgeRenewLockLoop"
  nameWithType: "MessageAndSessionPump.MessgeRenewLockLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.MessgeRenewLockLoop"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.SessionRenewLockLoop"
  name: "MessageAndSessionPump.SessionRenewLockLoop"
  nameWithType: "MessageAndSessionPump.SessionRenewLockLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.SessionRenewLockLoop"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
