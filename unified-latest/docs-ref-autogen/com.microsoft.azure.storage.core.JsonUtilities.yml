### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.JsonUtilities"
  id: "JsonUtilities"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities()"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName(com.fasterxml.jackson.core.JsonParser,java.lang.String)"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken(com.fasterxml.jackson.core.JsonParser)"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  - "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  langs:
  - "java"
  name: "JsonUtilities"
  nameWithType: "JsonUtilities"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. A class to hold utility methods for parsing Json payloads"
  syntax:
    content: "public final class JsonUtilities"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities()"
  id: "JsonUtilities()"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "JsonUtilities()"
  nameWithType: "JsonUtilities.JsonUtilities()"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities()"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public JsonUtilities()"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  id: "assertIsEndArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsEndArrayJsonToken(JsonParser parser)"
  nameWithType: "JsonUtilities.assertIsEndArrayJsonToken(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the token type of the parser is the end of an array."
  syntax:
    content: "public static void assertIsEndArrayJsonToken(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  id: "assertIsEndObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsEndObjectJsonToken(JsonParser parser)"
  nameWithType: "JsonUtilities.assertIsEndObjectJsonToken(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the current token of the parser is the end of an object."
  syntax:
    content: "public static void assertIsEndObjectJsonToken(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName(com.fasterxml.jackson.core.JsonParser,java.lang.String)"
  id: "assertIsExpectedFieldName(com.fasterxml.jackson.core.JsonParser,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsExpectedFieldName(JsonParser parser, String expectedValue)"
  nameWithType: "JsonUtilities.assertIsExpectedFieldName(JsonParser parser, String expectedValue)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName(JsonParser parser, String expectedValue)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the current name of the parser equals the expected value"
  syntax:
    content: "public static void assertIsExpectedFieldName(JsonParser parser, String expectedValue)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
    - id: "expectedValue"
      type: "java.lang.String"
      description: "The expected current name of the parser's current token."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken(com.fasterxml.jackson.core.JsonParser)"
  id: "assertIsFieldNameJsonToken(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsFieldNameJsonToken(JsonParser parser)"
  nameWithType: "JsonUtilities.assertIsFieldNameJsonToken(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the current token of the parser is a field name."
  syntax:
    content: "public static void assertIsFieldNameJsonToken(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  id: "assertIsStartArrayJsonToken(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsStartArrayJsonToken(JsonParser parser)"
  nameWithType: "JsonUtilities.assertIsStartArrayJsonToken(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the token type of the parser is the start of an array."
  syntax:
    content: "public static void assertIsStartArrayJsonToken(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  id: "assertIsStartObjectJsonToken(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.JsonUtilities"
  langs:
  - "java"
  name: "assertIsStartObjectJsonToken(JsonParser parser)"
  nameWithType: "JsonUtilities.assertIsStartObjectJsonToken(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reserved for internal use. Asserts that the current token of the parser is the start of an object."
  syntax:
    content: "public static void assertIsStartObjectJsonToken(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">JsonParser</xref> whose current token to check."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
references:
- uid: "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities*"
  name: "JsonUtilities"
  nameWithType: "JsonUtilities.JsonUtilities"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.JsonUtilities"
  package: "com.microsoft.azure.storage.core"
- uid: "com.fasterxml.jackson.core.JsonParseException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParseException"
    name: "JsonParseException"
    fullName: "com.fasterxml.jackson.core.JsonParseException"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.fasterxml.jackson.core.JsonParser"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParser"
    name: "JsonParser"
    fullName: "com.fasterxml.jackson.core.JsonParser"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName*"
  name: "assertIsExpectedFieldName"
  nameWithType: "JsonUtilities.assertIsExpectedFieldName"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsExpectedFieldName"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken*"
  name: "assertIsFieldNameJsonToken"
  nameWithType: "JsonUtilities.assertIsFieldNameJsonToken"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsFieldNameJsonToken"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken*"
  name: "assertIsStartObjectJsonToken"
  nameWithType: "JsonUtilities.assertIsStartObjectJsonToken"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartObjectJsonToken"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken*"
  name: "assertIsEndObjectJsonToken"
  nameWithType: "JsonUtilities.assertIsEndObjectJsonToken"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndObjectJsonToken"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken*"
  name: "assertIsStartArrayJsonToken"
  nameWithType: "JsonUtilities.assertIsStartArrayJsonToken"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsStartArrayJsonToken"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken*"
  name: "assertIsEndArrayJsonToken"
  nameWithType: "JsonUtilities.assertIsEndArrayJsonToken"
  fullName: "com.microsoft.azure.storage.core.JsonUtilities.assertIsEndArrayJsonToken"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
