### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  id: "SubscriptionDescription"
  parent: "com.microsoft.azure.servicebus.management"
  children:
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.autoDeleteOnIdle"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultMessageTimeToLive"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultRule"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableBatchedOperations"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnFilterEvaluationException"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnMessageExpiration"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(java.lang.Object)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardDeadLetteredMessagesTo"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardTo"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.lockDuration"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.maxDeliveryCount"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.requiresSession"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(java.time.Duration)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(java.time.Duration)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(java.lang.String)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(java.lang.String)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(java.time.Duration)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(java.lang.String)"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.status"
  - "com.microsoft.azure.servicebus.management.SubscriptionDescription.userMetadata"
  langs:
  - "java"
  name: "SubscriptionDescription"
  nameWithType: "SubscriptionDescription"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  type: "Class"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Represents the metadata description of the subscription."
  syntax:
    content: "public class SubscriptionDescription"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(java.lang.String,java.lang.String)"
  id: "SubscriptionDescription(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "SubscriptionDescription(String topicPath, String subscriptionName)"
  nameWithType: "SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription(String topicPath, String subscriptionName)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Initializes a new instance of SubscriptionDescription with the specified relative path."
  syntax:
    content: "public SubscriptionDescription(String topicPath, String subscriptionName)"
    parameters:
    - id: "topicPath"
      type: "java.lang.String"
      description: "- Path of the topic\n                  Max length is 260 chars. Cannot start or end with a slash.\n                  Cannot have restricted characters: '@','?','#','*'"
    - id: "subscriptionName"
      type: "java.lang.String"
      description: "- Name of the subscription\n                         Max length is 50 chars. Cannot have restricted characters: '@','?','#','*','/'"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.autoDeleteOnIdle"
  id: "autoDeleteOnIdle"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "autoDeleteOnIdle"
  nameWithType: "SubscriptionDescription.autoDeleteOnIdle"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.autoDeleteOnIdle"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " Duration autoDeleteOnIdle"
    return:
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultMessageTimeToLive"
  id: "defaultMessageTimeToLive"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "defaultMessageTimeToLive"
  nameWithType: "SubscriptionDescription.defaultMessageTimeToLive"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultMessageTimeToLive"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " Duration defaultMessageTimeToLive"
    return:
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultRule"
  id: "defaultRule"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "defaultRule"
  nameWithType: "SubscriptionDescription.defaultRule"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.defaultRule"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " RuleDescription defaultRule"
    return:
      type: "com.microsoft.azure.servicebus.rules.RuleDescription"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableBatchedOperations"
  id: "enableBatchedOperations"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "enableBatchedOperations"
  nameWithType: "SubscriptionDescription.enableBatchedOperations"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableBatchedOperations"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " boolean enableBatchedOperations"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnFilterEvaluationException"
  id: "enableDeadLetteringOnFilterEvaluationException"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "enableDeadLetteringOnFilterEvaluationException"
  nameWithType: "SubscriptionDescription.enableDeadLetteringOnFilterEvaluationException"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnFilterEvaluationException"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " boolean enableDeadLetteringOnFilterEvaluationException"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnMessageExpiration"
  id: "enableDeadLetteringOnMessageExpiration"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "enableDeadLetteringOnMessageExpiration"
  nameWithType: "SubscriptionDescription.enableDeadLetteringOnMessageExpiration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.enableDeadLetteringOnMessageExpiration"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " boolean enableDeadLetteringOnMessageExpiration"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "equals(Object o)"
  nameWithType: "SubscriptionDescription.equals(Object o)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals(Object o)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public boolean equals(Object o)"
    parameters:
    - id: "o"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardDeadLetteredMessagesTo"
  id: "forwardDeadLetteredMessagesTo"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "forwardDeadLetteredMessagesTo"
  nameWithType: "SubscriptionDescription.forwardDeadLetteredMessagesTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardDeadLetteredMessagesTo"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " String forwardDeadLetteredMessagesTo"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardTo"
  id: "forwardTo"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "forwardTo"
  nameWithType: "SubscriptionDescription.forwardTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.forwardTo"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " String forwardTo"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()"
  id: "getAutoDeleteOnIdle()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getAutoDeleteOnIdle()"
  nameWithType: "SubscriptionDescription.getAutoDeleteOnIdle()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public Duration getAutoDeleteOnIdle()"
    return:
      type: "java.time.Duration"
      description: "The idle interval after which the subscription is automatically deleted.\n Default value is <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION\" data-throw-if-not-resolved=\"false\">ManagementClientConstants#MAX_DURATION</xref>"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()"
  id: "getDefaultMessageTimeToLive()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getDefaultMessageTimeToLive()"
  nameWithType: "SubscriptionDescription.getDefaultMessageTimeToLive()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Time-To-Live is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\">IMessage#getTimeToLive()</xref> is not set on a message itself. Messages older than their TimeToLive value will expire and no longer be retained in the message store. Subscribers will be unable to receive expired messages."
  syntax:
    content: "public Duration getDefaultMessageTimeToLive()"
    return:
      type: "java.time.Duration"
      description: "The default time to live value for the messages. Default value is <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientConstants.MAX_DURATION\" data-throw-if-not-resolved=\"false\">ManagementClientConstants#MAX_DURATION</xref>"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()"
  id: "getEntityStatus()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getEntityStatus()"
  nameWithType: "SubscriptionDescription.getEntityStatus()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Gets the status of the entity. When an entity is disabled, that entity cannot send or receive messages."
  syntax:
    content: "public EntityStatus getEntityStatus()"
    return:
      type: "com.microsoft.azure.servicebus.management.EntityStatus"
      description: "The current status of the queue (Enabled / Disabled).\n The default value is Enabled."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()"
  id: "getForwardDeadLetteredMessagesTo()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getForwardDeadLetteredMessagesTo()"
  nameWithType: "SubscriptionDescription.getForwardDeadLetteredMessagesTo()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getForwardDeadLetteredMessagesTo()"
    return:
      type: "java.lang.String"
      description: "The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to.\n If set, user cannot manually receive dead-lettered messages from this subscription. The destination\n entity must already exist."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()"
  id: "getForwardTo()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getForwardTo()"
  nameWithType: "SubscriptionDescription.getForwardTo()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getForwardTo()"
    return:
      type: "java.lang.String"
      description: "The path of the recipient entity to which all the messages sent to the subscription are forwarded to.\n If set, user cannot manually receive messages from this subscription. The destination entity\n must be an already existing entity."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()"
  id: "getLockDuration()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getLockDuration()"
  nameWithType: "SubscriptionDescription.getLockDuration()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "The amount of time that the message is locked by a given receiver so that no other receiver receives the same message."
  syntax:
    content: "public Duration getLockDuration()"
    return:
      type: "java.time.Duration"
      description: "The duration of a peek lock. Default value is 60 seconds."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()"
  id: "getMaxDeliveryCount()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getMaxDeliveryCount()"
  nameWithType: "SubscriptionDescription.getMaxDeliveryCount()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK</xref> mode and didn't complete the message before the message lock expired."
  syntax:
    content: "public int getMaxDeliveryCount()"
    return:
      type: "int"
      description: "Default value is 10."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()"
  id: "getPath()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getPath()"
  nameWithType: "SubscriptionDescription.getPath()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getPath()"
    return:
      type: "java.lang.String"
      description: "the path of the subscription, including the topic."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()"
  id: "getSubscriptionName()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getSubscriptionName()"
  nameWithType: "SubscriptionDescription.getSubscriptionName()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getSubscriptionName()"
    return:
      type: "java.lang.String"
      description: "the subscription name."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()"
  id: "getTopicPath()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getTopicPath()"
  nameWithType: "SubscriptionDescription.getTopicPath()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getTopicPath()"
    return:
      type: "java.lang.String"
      description: "the path of the topic."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()"
  id: "getUserMetadata()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "getUserMetadata()"
  nameWithType: "SubscriptionDescription.getUserMetadata()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public String getUserMetadata()"
    return:
      type: "java.lang.String"
      description: "Custom metdata that user can associate with the description."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()"
  id: "hashCode()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "SubscriptionDescription.hashCode()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()"
  id: "isEnableBatchedOperations()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "isEnableBatchedOperations()"
  nameWithType: "SubscriptionDescription.isEnableBatchedOperations()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public boolean isEnableBatchedOperations()"
    return:
      type: "boolean"
      description: "Indicates whether server-side batched operations are enabled.\n Defaults to true."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()"
  id: "isEnableDeadLetteringOnFilterEvaluationException()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "isEnableDeadLetteringOnFilterEvaluationException()"
  nameWithType: "SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public boolean isEnableDeadLetteringOnFilterEvaluationException()"
    return:
      type: "boolean"
      description: "boolean indicating whether messages need to be forwarded to dead-letter subqueue when subscription rule evaluation fails.\n Default value is true."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()"
  id: "isEnableDeadLetteringOnMessageExpiration()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "isEnableDeadLetteringOnMessageExpiration()"
  nameWithType: "SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Indicates whether this subscription has dead letter support when a message expires."
  syntax:
    content: "public boolean isEnableDeadLetteringOnMessageExpiration()"
    return:
      type: "boolean"
      description: "If true, the expired messages are moved to dead-letter subqueue.\n Default value is false."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()"
  id: "isRequiresSession()"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "isRequiresSession()"
  nameWithType: "SubscriptionDescription.isRequiresSession()"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession()"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public boolean isRequiresSession()"
    return:
      type: "boolean"
      description: "This indicates whether the subscription supports the concept of session. Sessionful-messages follow FIFO ordering."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.lockDuration"
  id: "lockDuration"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "lockDuration"
  nameWithType: "SubscriptionDescription.lockDuration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.lockDuration"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " Duration lockDuration"
    return:
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.maxDeliveryCount"
  id: "maxDeliveryCount"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "maxDeliveryCount"
  nameWithType: "SubscriptionDescription.maxDeliveryCount"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.maxDeliveryCount"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " int maxDeliveryCount"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.requiresSession"
  id: "requiresSession"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "requiresSession"
  nameWithType: "SubscriptionDescription.requiresSession"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.requiresSession"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " boolean requiresSession"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(java.time.Duration)"
  id: "setAutoDeleteOnIdle(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  nameWithType: "SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setAutoDeleteOnIdle(Duration autoDeleteOnIdle)"
    parameters:
    - id: "autoDeleteOnIdle"
      type: "java.time.Duration"
      description: "- The idle interval after which the subscription is automatically deleted.\n The minimum duration is 5 minutes."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(java.time.Duration)"
  id: "setDefaultMessageTimeToLive(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  nameWithType: "SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setDefaultMessageTimeToLive(Duration defaultMessageTimeToLive)"
    parameters:
    - id: "defaultMessageTimeToLive"
      type: "java.time.Duration"
      description: "- Sets the default message time to live value.\n Value cannot be lower than 1 second.\n See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive()\" data-throw-if-not-resolved=\"false\">#getDefaultMessageTimeToLive()</xref>"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean)"
  id: "setEnableBatchedOperations(boolean)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setEnableBatchedOperations(boolean enableBatchedOperations)"
  nameWithType: "SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations(boolean enableBatchedOperations)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setEnableBatchedOperations(boolean enableBatchedOperations)"
    parameters:
    - id: "enableBatchedOperations"
      type: "boolean"
      description: "- Indicates whether server-side batched operations are enabled."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean)"
  id: "setEnableDeadLetteringOnFilterEvaluationException(boolean)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)"
  nameWithType: "SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setEnableDeadLetteringOnFilterEvaluationException(boolean enableDeadLetteringOnFilterEvaluationException)"
    parameters:
    - id: "enableDeadLetteringOnFilterEvaluationException"
      type: "boolean"
      description: "- True if messages should be dead-lettered on filter evaluation exception.\n See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException()\" data-throw-if-not-resolved=\"false\">#isEnableDeadLetteringOnFilterEvaluationException()</xref>"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean)"
  id: "setEnableDeadLetteringOnMessageExpiration(boolean)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)"
  nameWithType: "SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setEnableDeadLetteringOnMessageExpiration(boolean enableDeadLetteringOnMessageExpiration)"
    parameters:
    - id: "enableDeadLetteringOnMessageExpiration"
      type: "boolean"
      description: "- True if messages should be dead-lettered on expiration.\n See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration()\" data-throw-if-not-resolved=\"false\">#isEnableDeadLetteringOnMessageExpiration()</xref>"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)"
  id: "setEntityStatus(com.microsoft.azure.servicebus.management.EntityStatus)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setEntityStatus(EntityStatus status)"
  nameWithType: "SubscriptionDescription.setEntityStatus(EntityStatus status)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus(EntityStatus status)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setEntityStatus(EntityStatus status)"
    parameters:
    - id: "status"
      type: "com.microsoft.azure.servicebus.management.EntityStatus"
      description: "- the status of the queue (Enabled / Disabled).\n When an entity is disabled, that entity cannot send or receive messages."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(java.lang.String)"
  id: "setForwardDeadLetteredMessagesTo(java.lang.String)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)"
  nameWithType: "SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setForwardDeadLetteredMessagesTo(String forwardDeadLetteredMessagesTo)"
    parameters:
    - id: "forwardDeadLetteredMessagesTo"
      type: "java.lang.String"
      description: "- The path of the recipient entity to which all the dead-lettered messages of this subscription are forwarded to.\n If set, user cannot manually receive dead-lettered messages from this subscription. The destination\n entity must already exist."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(java.lang.String)"
  id: "setForwardTo(java.lang.String)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setForwardTo(String forwardTo)"
  nameWithType: "SubscriptionDescription.setForwardTo(String forwardTo)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo(String forwardTo)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setForwardTo(String forwardTo)"
    parameters:
    - id: "forwardTo"
      type: "java.lang.String"
      description: "- The path of the recipient entity to which all the messages sent to the subscription are forwarded to.\n If set, user cannot manually receive messages from this subscription. The destination entity\n must be an already existing entity."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(java.time.Duration)"
  id: "setLockDuration(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setLockDuration(Duration lockDuration)"
  nameWithType: "SubscriptionDescription.setLockDuration(Duration lockDuration)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration(Duration lockDuration)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "Sets The amount of time that the message is locked by a given receiver so that no other receiver receives the same message."
  syntax:
    content: "public void setLockDuration(Duration lockDuration)"
    parameters:
    - id: "lockDuration"
      type: "java.time.Duration"
      description: "- The duration of a peek lock. Max value is 5 minutes."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int)"
  id: "setMaxDeliveryCount(int)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setMaxDeliveryCount(int maxDeliveryCount)"
  nameWithType: "SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount(int maxDeliveryCount)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  summary: "The maximum delivery count of a message before it is dead-lettered. The delivery count is increased when a message is received in <xref uid=\"com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK\" data-throw-if-not-resolved=\"false\">com.microsoft.azure.servicebus.ReceiveMode#PEEKLOCK</xref> mode and didn't complete the message before the message lock expired."
  syntax:
    content: "public void setMaxDeliveryCount(int maxDeliveryCount)"
    parameters:
    - id: "maxDeliveryCount"
      type: "int"
      description: "- Minimum value is 1."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean)"
  id: "setRequiresSession(boolean)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setRequiresSession(boolean requiresSession)"
  nameWithType: "SubscriptionDescription.setRequiresSession(boolean requiresSession)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession(boolean requiresSession)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setRequiresSession(boolean requiresSession)"
    parameters:
    - id: "requiresSession"
      type: "boolean"
      description: "- Set to true if subscription should support sessions."
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(java.lang.String)"
  id: "setUserMetadata(java.lang.String)"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "setUserMetadata(String userMetadata)"
  nameWithType: "SubscriptionDescription.setUserMetadata(String userMetadata)"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata(String userMetadata)"
  overload: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: "public void setUserMetadata(String userMetadata)"
    parameters:
    - id: "userMetadata"
      type: "java.lang.String"
      description: "- Custom metdata that user can associate with the description.\n Cannot be null. Max length is 1024 chars"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.status"
  id: "status"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "status"
  nameWithType: "SubscriptionDescription.status"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.status"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " EntityStatus status"
    return:
      type: "com.microsoft.azure.servicebus.management.EntityStatus"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.userMetadata"
  id: "userMetadata"
  parent: "com.microsoft.azure.servicebus.management.SubscriptionDescription"
  langs:
  - "java"
  name: "userMetadata"
  nameWithType: "SubscriptionDescription.userMetadata"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.userMetadata"
  type: "Field"
  package: "com.microsoft.azure.servicebus.management"
  syntax:
    content: " String userMetadata"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription*"
  name: "SubscriptionDescription"
  nameWithType: "SubscriptionDescription.SubscriptionDescription"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.SubscriptionDescription"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath*"
  name: "getTopicPath"
  nameWithType: "SubscriptionDescription.getTopicPath"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getTopicPath"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName*"
  name: "getSubscriptionName"
  nameWithType: "SubscriptionDescription.getSubscriptionName"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getSubscriptionName"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath*"
  name: "getPath"
  nameWithType: "SubscriptionDescription.getPath"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getPath"
  package: "com.microsoft.azure.servicebus.management"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration*"
  name: "getLockDuration"
  nameWithType: "SubscriptionDescription.getLockDuration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getLockDuration"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration*"
  name: "setLockDuration"
  nameWithType: "SubscriptionDescription.setLockDuration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setLockDuration"
  package: "com.microsoft.azure.servicebus.management"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession*"
  name: "isRequiresSession"
  nameWithType: "SubscriptionDescription.isRequiresSession"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isRequiresSession"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession*"
  name: "setRequiresSession"
  nameWithType: "SubscriptionDescription.setRequiresSession"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setRequiresSession"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive*"
  name: "getDefaultMessageTimeToLive"
  nameWithType: "SubscriptionDescription.getDefaultMessageTimeToLive"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getDefaultMessageTimeToLive"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive*"
  name: "setDefaultMessageTimeToLive"
  nameWithType: "SubscriptionDescription.setDefaultMessageTimeToLive"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setDefaultMessageTimeToLive"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle*"
  name: "getAutoDeleteOnIdle"
  nameWithType: "SubscriptionDescription.getAutoDeleteOnIdle"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getAutoDeleteOnIdle"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle*"
  name: "setAutoDeleteOnIdle"
  nameWithType: "SubscriptionDescription.setAutoDeleteOnIdle"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setAutoDeleteOnIdle"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration*"
  name: "isEnableDeadLetteringOnMessageExpiration"
  nameWithType: "SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnMessageExpiration"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration*"
  name: "setEnableDeadLetteringOnMessageExpiration"
  nameWithType: "SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnMessageExpiration"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException*"
  name: "isEnableDeadLetteringOnFilterEvaluationException"
  nameWithType: "SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableDeadLetteringOnFilterEvaluationException"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException*"
  name: "setEnableDeadLetteringOnFilterEvaluationException"
  nameWithType: "SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableDeadLetteringOnFilterEvaluationException"
  package: "com.microsoft.azure.servicebus.management"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount*"
  name: "getMaxDeliveryCount"
  nameWithType: "SubscriptionDescription.getMaxDeliveryCount"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getMaxDeliveryCount"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount*"
  name: "setMaxDeliveryCount"
  nameWithType: "SubscriptionDescription.setMaxDeliveryCount"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setMaxDeliveryCount"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations*"
  name: "isEnableBatchedOperations"
  nameWithType: "SubscriptionDescription.isEnableBatchedOperations"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.isEnableBatchedOperations"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations*"
  name: "setEnableBatchedOperations"
  nameWithType: "SubscriptionDescription.setEnableBatchedOperations"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEnableBatchedOperations"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.EntityStatus"
  name: "EntityStatus"
  nameWithType: "EntityStatus"
  fullName: "com.microsoft.azure.servicebus.management.EntityStatus"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus*"
  name: "getEntityStatus"
  nameWithType: "SubscriptionDescription.getEntityStatus"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getEntityStatus"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus*"
  name: "setEntityStatus"
  nameWithType: "SubscriptionDescription.setEntityStatus"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setEntityStatus"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo*"
  name: "getForwardTo"
  nameWithType: "SubscriptionDescription.getForwardTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardTo"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo*"
  name: "setForwardTo"
  nameWithType: "SubscriptionDescription.setForwardTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardTo"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo*"
  name: "getForwardDeadLetteredMessagesTo"
  nameWithType: "SubscriptionDescription.getForwardDeadLetteredMessagesTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getForwardDeadLetteredMessagesTo"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo*"
  name: "setForwardDeadLetteredMessagesTo"
  nameWithType: "SubscriptionDescription.setForwardDeadLetteredMessagesTo"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setForwardDeadLetteredMessagesTo"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata*"
  name: "getUserMetadata"
  nameWithType: "SubscriptionDescription.getUserMetadata"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.getUserMetadata"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata*"
  name: "setUserMetadata"
  nameWithType: "SubscriptionDescription.setUserMetadata"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.setUserMetadata"
  package: "com.microsoft.azure.servicebus.management"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals*"
  name: "equals"
  nameWithType: "SubscriptionDescription.equals"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.equals"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode*"
  name: "hashCode"
  nameWithType: "SubscriptionDescription.hashCode"
  fullName: "com.microsoft.azure.servicebus.management.SubscriptionDescription.hashCode"
  package: "com.microsoft.azure.servicebus.management"
- uid: "com.microsoft.azure.servicebus.rules.RuleDescription"
  name: "RuleDescription"
  nameWithType: "RuleDescription"
  fullName: "com.microsoft.azure.servicebus.rules.RuleDescription"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
