### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.EdmType"
  id: "EdmType"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.EdmType.BINARY"
  - "com.microsoft.azure.storage.table.EdmType.BOOLEAN"
  - "com.microsoft.azure.storage.table.EdmType.BYTE"
  - "com.microsoft.azure.storage.table.EdmType.DATE_TIME"
  - "com.microsoft.azure.storage.table.EdmType.DATE_TIME_OFFSET"
  - "com.microsoft.azure.storage.table.EdmType.DECIMAL"
  - "com.microsoft.azure.storage.table.EdmType.DOUBLE"
  - "com.microsoft.azure.storage.table.EdmType.GUID"
  - "com.microsoft.azure.storage.table.EdmType.INT16"
  - "com.microsoft.azure.storage.table.EdmType.INT32"
  - "com.microsoft.azure.storage.table.EdmType.INT64"
  - "com.microsoft.azure.storage.table.EdmType.NULL"
  - "com.microsoft.azure.storage.table.EdmType.SBYTE"
  - "com.microsoft.azure.storage.table.EdmType.SINGLE"
  - "com.microsoft.azure.storage.table.EdmType.STRING"
  - "com.microsoft.azure.storage.table.EdmType.TIME"
  - "com.microsoft.azure.storage.table.EdmType.mustAnnotateType()"
  - "com.microsoft.azure.storage.table.EdmType.parse(java.lang.String)"
  - "com.microsoft.azure.storage.table.EdmType.toString()"
  - "com.microsoft.azure.storage.table.EdmType.valueOf(java.lang.String)"
  - "com.microsoft.azure.storage.table.EdmType.values()"
  langs:
  - "java"
  name: "EdmType"
  nameWithType: "EdmType"
  fullName: "com.microsoft.azure.storage.table.EdmType"
  type: "Enum"
  package: "com.microsoft.azure.storage.table"
  summary: "A enumeration used to represent the primitive types of the Entity Data Model (EDM) in the Open Data Protocol (OData). The EDM is the underlying abstract data model used by OData services. The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> enumeration includes a <xref uid=\"com.microsoft.azure.storage.table.EdmType.parse(java.lang.String)\" data-throw-if-not-resolved=\"false\">#parse(String)</xref> method to convert EDM data type names to the enumeration type, and overrides the <xref uid=\"com.microsoft.azure.storage.table.EdmType.toString()\" data-throw-if-not-resolved=\"false\">#toString()</xref> method to produce an EDM data type name.\n\nFor more information about OData, see the [Open Data Protocol][] website.\n\nFor an overview of the available EDM primitive data types and names, see the [Primitive Data Types][] section of the [OData Protocol Overview][].\n\nThe Abstract Type System used to define the primitive types supported by OData is defined in detail in [\\[MC-CSDL\\] (section 2.2.1)][MC-CSDL_ _section 2.2.1].\n\n\n[Open Data Protocol]: http://www.odata.org/\n[Primitive Data Types]: http://www.odata.org/developers/protocols/overview#AbstractTypeSystem\n[OData Protocol Overview]: http://www.odata.org/developers/protocols/overview\n[MC-CSDL_ _section 2.2.1]: http://msdn.microsoft.com/en-us/library/dd541474.aspx"
  syntax:
    content: "public enum EdmType extends Enum<EdmType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.EdmType.BINARY"
  id: "BINARY"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "BINARY"
  nameWithType: "EdmType.BINARY"
  fullName: "com.microsoft.azure.storage.table.EdmType.BINARY"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Binary** Represents fixed- or variable-length binary data"
  syntax:
    content: "public static final EdmType BINARY"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.BOOLEAN"
  id: "BOOLEAN"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "BOOLEAN"
  nameWithType: "EdmType.BOOLEAN"
  fullName: "com.microsoft.azure.storage.table.EdmType.BOOLEAN"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Boolean** Represents the mathematical concept of binary-valued logic"
  syntax:
    content: "public static final EdmType BOOLEAN"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.BYTE"
  id: "BYTE"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "BYTE"
  nameWithType: "EdmType.BYTE"
  fullName: "com.microsoft.azure.storage.table.EdmType.BYTE"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Byte** Represents a unsigned 8-bit integer value"
  syntax:
    content: "public static final EdmType BYTE"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.DATE_TIME"
  id: "DATE_TIME"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "DATE_TIME"
  nameWithType: "EdmType.DATE_TIME"
  fullName: "com.microsoft.azure.storage.table.EdmType.DATE_TIME"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.DateTime** Represents date and time with values ranging from 12:00:00 midnight, January 1, 1753 A.D. through 11:59:59 P.M, December 9999 A.D."
  syntax:
    content: "public static final EdmType DATE_TIME"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.DATE_TIME_OFFSET"
  id: "DATE_TIME_OFFSET"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "DATE_TIME_OFFSET"
  nameWithType: "EdmType.DATE_TIME_OFFSET"
  fullName: "com.microsoft.azure.storage.table.EdmType.DATE_TIME_OFFSET"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.DateTimeOffset** Represents date and time as an Offset in minutes from GMT, with values ranging from 12:00:00 midnight, January 1, 1753 A.D. through 11:59:59 P.M, December 9999 A.D"
  syntax:
    content: "public static final EdmType DATE_TIME_OFFSET"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.DECIMAL"
  id: "DECIMAL"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "DECIMAL"
  nameWithType: "EdmType.DECIMAL"
  fullName: "com.microsoft.azure.storage.table.EdmType.DECIMAL"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Decimal** Represents numeric values with fixed precision and scale. This type can describe a numeric value ranging from negative 10^255 + 1 to positive 10^255 -1"
  syntax:
    content: "public static final EdmType DECIMAL"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.DOUBLE"
  id: "DOUBLE"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "DOUBLE"
  nameWithType: "EdmType.DOUBLE"
  fullName: "com.microsoft.azure.storage.table.EdmType.DOUBLE"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Double** Represents a floating point number with 15 digits precision that can represent values with approximate range of +/- 2.23e -308 through +/- 1.79e +308"
  syntax:
    content: "public static final EdmType DOUBLE"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.EdmType()"
  id: "EdmType()"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "EdmType()"
  nameWithType: "EdmType.EdmType()"
  fullName: "com.microsoft.azure.storage.table.EdmType.EdmType()"
  overload: "com.microsoft.azure.storage.table.EdmType.EdmType*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "private EdmType()"
- uid: "com.microsoft.azure.storage.table.EdmType.GUID"
  id: "GUID"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "GUID"
  nameWithType: "EdmType.GUID"
  fullName: "com.microsoft.azure.storage.table.EdmType.GUID"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Guid** Represents a 16-byte (128-bit) unique identifier value"
  syntax:
    content: "public static final EdmType GUID"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.INT16"
  id: "INT16"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "INT16"
  nameWithType: "EdmType.INT16"
  fullName: "com.microsoft.azure.storage.table.EdmType.INT16"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Int16** Represents a signed 16-bit integer value"
  syntax:
    content: "public static final EdmType INT16"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.INT32"
  id: "INT32"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "INT32"
  nameWithType: "EdmType.INT32"
  fullName: "com.microsoft.azure.storage.table.EdmType.INT32"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Int32** Represents a signed 32-bit integer value"
  syntax:
    content: "public static final EdmType INT32"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.INT64"
  id: "INT64"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "INT64"
  nameWithType: "EdmType.INT64"
  fullName: "com.microsoft.azure.storage.table.EdmType.INT64"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Int64** Represents a signed 64-bit integer value"
  syntax:
    content: "public static final EdmType INT64"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.NULL"
  id: "NULL"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "NULL"
  nameWithType: "EdmType.NULL"
  fullName: "com.microsoft.azure.storage.table.EdmType.NULL"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Null** Represents the absence of a value"
  syntax:
    content: "public static final EdmType NULL"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.SBYTE"
  id: "SBYTE"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "SBYTE"
  nameWithType: "EdmType.SBYTE"
  fullName: "com.microsoft.azure.storage.table.EdmType.SBYTE"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.SByte** Represents a signed 8-bit integer value"
  syntax:
    content: "public static final EdmType SBYTE"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.SINGLE"
  id: "SINGLE"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "SINGLE"
  nameWithType: "EdmType.SINGLE"
  fullName: "com.microsoft.azure.storage.table.EdmType.SINGLE"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Single** Represents a floating point number with 7 digits precision that can represent values with approximate range of +/- 1.18e -38 through +/- 3.40e +38"
  syntax:
    content: "public static final EdmType SINGLE"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.STRING"
  id: "STRING"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "STRING"
  nameWithType: "EdmType.STRING"
  fullName: "com.microsoft.azure.storage.table.EdmType.STRING"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.String** Represents fixed- or variable-length character data"
  syntax:
    content: "public static final EdmType STRING"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.TIME"
  id: "TIME"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "TIME"
  nameWithType: "EdmType.TIME"
  fullName: "com.microsoft.azure.storage.table.EdmType.TIME"
  type: "Field"
  package: "com.microsoft.azure.storage.table"
  summary: "**Edm.Time** Represents the time of day with values ranging from 0:00:00.x to 23:59:59.y, where x and y depend upon the precision"
  syntax:
    content: "public static final EdmType TIME"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.mustAnnotateType()"
  id: "mustAnnotateType()"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "mustAnnotateType()"
  nameWithType: "EdmType.mustAnnotateType()"
  fullName: "com.microsoft.azure.storage.table.EdmType.mustAnnotateType()"
  overload: "com.microsoft.azure.storage.table.EdmType.mustAnnotateType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "protected final boolean mustAnnotateType()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.table.EdmType.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "parse(String value)"
  nameWithType: "EdmType.parse(String value)"
  fullName: "com.microsoft.azure.storage.table.EdmType.parse(String value)"
  overload: "com.microsoft.azure.storage.table.EdmType.parse*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Parses an EDM data type name and return the matching <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> enumeration value. A `null` or empty value parameter is matched as <xref uid=\"com.microsoft.azure.storage.table.EdmType.STRING\" data-throw-if-not-resolved=\"false\">EdmType#STRING</xref>. Note that only the subset of EDM data types supported in Microsoft Azure Table storage is parsed, consisting of <xref uid=\"com.microsoft.azure.storage.table.EdmType.BINARY\" data-throw-if-not-resolved=\"false\">#BINARY</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.BOOLEAN\" data-throw-if-not-resolved=\"false\">#BOOLEAN</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.BYTE\" data-throw-if-not-resolved=\"false\">#BYTE</xref> , <xref uid=\"com.microsoft.azure.storage.table.EdmType.DATE_TIME\" data-throw-if-not-resolved=\"false\">#DATE_TIME</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.DOUBLE\" data-throw-if-not-resolved=\"false\">#DOUBLE</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.GUID\" data-throw-if-not-resolved=\"false\">#GUID</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.INT32\" data-throw-if-not-resolved=\"false\">#INT32</xref>, <xref uid=\"com.microsoft.azure.storage.table.EdmType.INT64\" data-throw-if-not-resolved=\"false\">#INT64</xref>, and <xref uid=\"com.microsoft.azure.storage.table.EdmType.STRING\" data-throw-if-not-resolved=\"false\">#STRING</xref>. Any other type will cause an <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> to be thrown."
  syntax:
    content: "public static EdmType parse(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> containing the name of an EDM data type."
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> enumeration value matching the specified EDM data type."
- uid: "com.microsoft.azure.storage.table.EdmType.toString()"
  id: "toString()"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "EdmType.toString()"
  fullName: "com.microsoft.azure.storage.table.EdmType.toString()"
  overload: "com.microsoft.azure.storage.table.EdmType.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns the name of the EDM data type corresponding to the enumeration value."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> containing the name of the EDM data type."
- uid: "com.microsoft.azure.storage.table.EdmType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "EdmType.valueOf(String name)"
  fullName: "com.microsoft.azure.storage.table.EdmType.valueOf(String name)"
  overload: "com.microsoft.azure.storage.table.EdmType.valueOf*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "public static EdmType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
- uid: "com.microsoft.azure.storage.table.EdmType.values()"
  id: "values()"
  parent: "com.microsoft.azure.storage.table.EdmType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "EdmType.values()"
  fullName: "com.microsoft.azure.storage.table.EdmType.values()"
  overload: "com.microsoft.azure.storage.table.EdmType.values*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "public static EdmType[] values()"
    return:
      type: "com.microsoft.azure.storage.table.EdmType[]"
references:
- uid: "com.microsoft.azure.storage.table.EdmType.EdmType*"
  name: "EdmType"
  nameWithType: "EdmType.EdmType"
  fullName: "com.microsoft.azure.storage.table.EdmType.EdmType"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EdmType[]"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.EdmType"
    name: "EdmType"
    fullName: "com.microsoft.azure.storage.table.EdmType"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.storage.table.EdmType.values*"
  name: "values"
  nameWithType: "EdmType.values"
  fullName: "com.microsoft.azure.storage.table.EdmType.values"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.table.EdmType.valueOf*"
  name: "valueOf"
  nameWithType: "EdmType.valueOf"
  fullName: "com.microsoft.azure.storage.table.EdmType.valueOf"
  package: "com.microsoft.azure.storage.table"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.table.EdmType.mustAnnotateType*"
  name: "mustAnnotateType"
  nameWithType: "EdmType.mustAnnotateType"
  fullName: "com.microsoft.azure.storage.table.EdmType.mustAnnotateType"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EdmType.parse*"
  name: "parse"
  nameWithType: "EdmType.parse"
  fullName: "com.microsoft.azure.storage.table.EdmType.parse"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EdmType.toString*"
  name: "toString"
  nameWithType: "EdmType.toString"
  fullName: "com.microsoft.azure.storage.table.EdmType.toString"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Enum<com.microsoft.azure.storage.table.EdmType>"
  name: "Enum<EdmType>"
  nameWithType: "Enum<EdmType>"
  fullName: "java.lang.Enum<com.microsoft.azure.storage.table.EdmType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
