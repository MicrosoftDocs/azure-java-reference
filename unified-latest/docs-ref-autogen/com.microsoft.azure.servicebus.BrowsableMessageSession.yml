### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  id: "BrowsableMessageSession"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession(java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync(java.time.Duration)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int,java.time.Duration)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync(long)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync()"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount(int)"
  - "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync(byte[])"
  langs:
  - "java"
  name: "BrowsableMessageSession"
  nameWithType: "BrowsableMessageSession"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  summary: "A session object that can only be used to browse messages and state of a server side session. It cannot be used to receive messages from the service or to set state of the session."
  syntax:
    content: "final class BrowsableMessageSession extends MessageSession"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity"
  - "com.microsoft.azure.servicebus.InitializableEntity"
  - "com.microsoft.azure.servicebus.MessageReceiver"
  - "com.microsoft.azure.servicebus.MessageSession"
  inheritedMembers:
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
  - "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peek()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receive()"
  - "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
  - "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
  - "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
  - "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
  - "com.microsoft.azure.servicebus.MessageSession.getState()"
  - "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
  - "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
  - "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
  - "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
  - "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
  - "com.microsoft.azure.servicebus.MessageSession.setState(byte[])"
  - "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession(java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  id: "BrowsableMessageSession(java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "BrowsableMessageSession(String sessionId, MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  nameWithType: "BrowsableMessageSession.BrowsableMessageSession(String sessionId, MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession(String sessionId, MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " BrowsableMessageSession(String sessionId, MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
    parameters:
    - id: "sessionId"
      type: "java.lang.String"
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "BrowsableMessageSession.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync(java.util.UUID)"
  id: "completeAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "completeAsync(UUID lockToken)"
  nameWithType: "BrowsableMessageSession.completeAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "completeBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "completeBatchAsync(Collection<? extends IMessage> messages)"
  nameWithType: "BrowsableMessageSession.completeBatchAsync(Collection<? extends IMessage> messages)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync(Collection<? extends IMessage> messages)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeBatchAsync(Collection<? extends IMessage> messages)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "BrowsableMessageSession.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "BrowsableMessageSession.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc()"
  id: "getLockedUntilUtc()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "getLockedUntilUtc()"
  nameWithType: "BrowsableMessageSession.getLockedUntilUtc()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Instant getLockedUntilUtc()"
    return:
      type: "java.time.Instant"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount()"
  id: "getPrefetchCount()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "getPrefetchCount()"
  nameWithType: "BrowsableMessageSession.getPrefetchCount()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public int getPrefetchCount()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode()"
  id: "getReceiveMode()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "getReceiveMode()"
  nameWithType: "BrowsableMessageSession.getReceiveMode()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public ReceiveMode getReceiveMode()"
    return:
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId()"
  id: "getSessionId()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "getSessionId()"
  nameWithType: "BrowsableMessageSession.getSessionId()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public String getSessionId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession()"
  id: "isBrowsableSession()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "isBrowsableSession()"
  nameWithType: "BrowsableMessageSession.isBrowsableSession()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected boolean isBrowsableSession()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync()"
  id: "receiveAsync()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveAsync()"
  nameWithType: "BrowsableMessageSession.receiveAsync()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync(java.time.Duration)"
  id: "receiveAsync(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveAsync(Duration serverWaitTime)"
  nameWithType: "BrowsableMessageSession.receiveAsync(Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync(Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveAsync(Duration serverWaitTime)"
    parameters:
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int)"
  id: "receiveBatchAsync(int)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveBatchAsync(int maxMessageCount)"
  nameWithType: "BrowsableMessageSession.receiveBatchAsync(int maxMessageCount)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int maxMessageCount)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int,java.time.Duration)"
  id: "receiveBatchAsync(int,java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  nameWithType: "BrowsableMessageSession.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync(long)"
  id: "receiveDeferredMessageAsync(long)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveDeferredMessageAsync(long sequenceNumber)"
  nameWithType: "BrowsableMessageSession.receiveDeferredMessageAsync(long sequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync(long sequenceNumber)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveDeferredMessageAsync(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  id: "receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  nameWithType: "BrowsableMessageSession.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
    parameters:
    - id: "sequenceNumbers"
      type: "java.util.Collection<java.lang.Long>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  id: "renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "renewMessageLockAsync(IMessage message)"
  nameWithType: "BrowsableMessageSession.renewMessageLockAsync(IMessage message)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(IMessage message)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Instant> renewMessageLockAsync(IMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    return:
      type: "java.util.concurrent.CompletableFuture<java.time.Instant>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(java.util.UUID)"
  id: "renewMessageLockAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "renewMessageLockAsync(UUID lockToken)"
  nameWithType: "BrowsableMessageSession.renewMessageLockAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Instant> renewMessageLockAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.time.Instant>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  nameWithType: "BrowsableMessageSession.renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<Instant>> renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync()"
  id: "renewSessionLockAsync()"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "renewSessionLockAsync()"
  nameWithType: "BrowsableMessageSession.renewSessionLockAsync()"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync()"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> renewSessionLockAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount(int)"
  id: "setPrefetchCount(int)"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "setPrefetchCount(int prefetchCount)"
  nameWithType: "BrowsableMessageSession.setPrefetchCount(int prefetchCount)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount(int prefetchCount)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void setPrefetchCount(int prefetchCount)"
    parameters:
    - id: "prefetchCount"
      type: "int"
  exceptions:
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync(byte[])"
  id: "setStateAsync(byte[])"
  parent: "com.microsoft.azure.servicebus.BrowsableMessageSession"
  langs:
  - "java"
  name: "setStateAsync(byte[] sessionState)"
  nameWithType: "BrowsableMessageSession.setStateAsync(byte[] sessionState)"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync(byte[] sessionState)"
  overload: "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> setStateAsync(byte[] sessionState)"
    parameters:
    - id: "sessionState"
      type: "byte[]"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
  name: "MessagingFactory"
  nameWithType: "MessagingFactory"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession*"
  name: "BrowsableMessageSession"
  nameWithType: "BrowsableMessageSession.BrowsableMessageSession"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.BrowsableMessageSession"
  package: "com.microsoft.azure.servicebus"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession*"
  name: "isBrowsableSession"
  nameWithType: "BrowsableMessageSession.isBrowsableSession"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.isBrowsableSession"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId*"
  name: "getSessionId"
  nameWithType: "BrowsableMessageSession.getSessionId"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getSessionId"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc*"
  name: "getLockedUntilUtc"
  nameWithType: "BrowsableMessageSession.getLockedUntilUtc"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getLockedUntilUtc"
  package: "com.microsoft.azure.servicebus"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount*"
  name: "getPrefetchCount"
  nameWithType: "BrowsableMessageSession.getPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  name: "ServiceBusException"
  nameWithType: "ServiceBusException"
  fullName: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount*"
  name: "setPrefetchCount"
  nameWithType: "BrowsableMessageSession.setPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.setPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.concurrent.CompletableFuture<java.lang.Void>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync*"
  name: "setStateAsync"
  nameWithType: "BrowsableMessageSession.setStateAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.setStateAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync*"
  name: "renewSessionLockAsync"
  nameWithType: "BrowsableMessageSession.renewSessionLockAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewSessionLockAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode*"
  name: "getReceiveMode"
  nameWithType: "BrowsableMessageSession.getReceiveMode"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.getReceiveMode"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync*"
  name: "abandonAsync"
  nameWithType: "BrowsableMessageSession.abandonAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.abandonAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync*"
  name: "completeAsync"
  nameWithType: "BrowsableMessageSession.completeAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "? extends com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync*"
  name: "completeBatchAsync"
  nameWithType: "BrowsableMessageSession.completeBatchAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.completeBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync*"
  name: "deadLetterAsync"
  nameWithType: "BrowsableMessageSession.deadLetterAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.deadLetterAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync*"
  name: "deferAsync"
  nameWithType: "BrowsableMessageSession.deferAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.deferAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync*"
  name: "receiveAsync"
  nameWithType: "BrowsableMessageSession.receiveAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync*"
  name: "receiveDeferredMessageAsync"
  nameWithType: "BrowsableMessageSession.receiveDeferredMessageAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync*"
  name: "receiveBatchAsync"
  nameWithType: "BrowsableMessageSession.receiveBatchAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.Collection<java.lang.Long>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync*"
  name: "receiveDeferredMessageBatchAsync"
  nameWithType: "BrowsableMessageSession.receiveDeferredMessageBatchAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.receiveDeferredMessageBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.IMessage"
  name: "IMessage"
  nameWithType: "IMessage"
  fullName: "com.microsoft.azure.servicebus.IMessage"
- uid: "java.util.concurrent.CompletableFuture<java.time.Instant>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync*"
  name: "renewMessageLockAsync"
  nameWithType: "BrowsableMessageSession.renewMessageLockAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync*"
  name: "renewMessageLockBatchAsync"
  nameWithType: "BrowsableMessageSession.renewMessageLockBatchAsync"
  fullName: "com.microsoft.azure.servicebus.BrowsableMessageSession.renewMessageLockBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSession"
  name: "MessageSession"
  nameWithType: "MessageSession"
  fullName: "com.microsoft.azure.servicebus.MessageSession"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
  name: "MessageReceiver.deferAsync(UUID)"
  nameWithType: "MessageReceiver.deferAsync(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.deadLetter(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.deadLetter(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
  name: "MessageReceiver.receiveAsync(Duration)"
  nameWithType: "MessageReceiver.receiveAsync(Duration)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>)"
  nameWithType: "MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
  name: "MessageSession.getRequestedSessionId()"
  nameWithType: "MessageSession.getRequestedSessionId()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
  name: "MessageReceiver.receiveDeferredMessage(long)"
  nameWithType: "MessageReceiver.receiveDeferredMessage(long)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetter(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetter(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
  name: "MessageReceiver.receiveDeferredMessageAsync(long)"
  nameWithType: "MessageReceiver.receiveDeferredMessageAsync(long)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  name: "ClientEntity.getIsClosingOrClosed()"
  nameWithType: "ClientEntity.getIsClosingOrClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
  name: "MessageReceiver.peekAsync(long)"
  nameWithType: "MessageReceiver.peekAsync(long)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.abandonAsync(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.abandonAsync(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
  name: "MessageReceiver.receiveAsync()"
  nameWithType: "MessageReceiver.receiveAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
  name: "MessageReceiver.peek(long)"
  nameWithType: "MessageReceiver.peek(long)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
- uid: "com.microsoft.azure.servicebus.MessageSession.setState(byte[])"
  name: "MessageSession.setState(byte[])"
  nameWithType: "MessageSession.setState(byte[])"
  fullName: "com.microsoft.azure.servicebus.MessageSession.setState(byte[])"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
  name: "MessageReceiver.setPrefetchCount(int)"
  nameWithType: "MessageReceiver.setPrefetchCount(int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.defer(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.defer(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  name: "MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage>)"
  nameWithType: "MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.abandon(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.abandon(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.abandonAsync(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.abandonAsync(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.defer(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.defer(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.defer(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.defer(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receive()"
  name: "MessageReceiver.receive()"
  nameWithType: "MessageReceiver.receive()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receive()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
  name: "MessageReceiver.peekBatch(int)"
  nameWithType: "MessageReceiver.peekBatch(int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peek()"
  name: "MessageReceiver.peek()"
  nameWithType: "MessageReceiver.peek()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peek()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  name: "MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long>)"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
  name: "MessageReceiver.abandonAsync(UUID)"
  nameWithType: "MessageReceiver.abandonAsync(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.deadLetterAsync(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  name: "MessageReceiver.deadLetter(UUID,String,String)"
  nameWithType: "MessageReceiver.deadLetter(UUID,String,String)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
  name: "MessageReceiver.peekBatch(long,int)"
  nameWithType: "MessageReceiver.peekBatch(long,int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
  name: "MessageReceiver.renewMessageLock(UUID)"
  nameWithType: "MessageReceiver.renewMessageLock(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
  name: "MessageReceiver.receive(Duration)"
  nameWithType: "MessageReceiver.receive(Duration)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.deferAsync(UUID,Map<String,Object>)"
  nameWithType: "MessageReceiver.deferAsync(UUID,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
  name: "MessageReceiver.getInternalReceiver()"
  nameWithType: "MessageReceiver.getInternalReceiver()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
- uid: "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
  name: "MessageSession.getLockedUntilUtc()"
  nameWithType: "MessageSession.getLockedUntilUtc()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()"
- uid: "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
  name: "MessageSession.isSessionReceiver()"
  nameWithType: "MessageSession.isSessionReceiver()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
  name: "MessageReceiver.peekBatchAsync(int)"
  nameWithType: "MessageReceiver.peekBatchAsync(int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
  name: "MessageReceiver.receiveBatch(int)"
  nameWithType: "MessageReceiver.receiveBatch(int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deferAsync(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.deferAsync(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
  name: "MessageSession.getSessionId()"
  nameWithType: "MessageSession.getSessionId()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getSessionId()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.abandon(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.abandon(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.abandon(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.abandon(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])"
  name: "MessageSession.setStateAsync(byte[])"
  nameWithType: "MessageSession.setStateAsync(byte[])"
  fullName: "com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[])"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
  name: "MessageReceiver.receiveBatch(int,Duration)"
  nameWithType: "MessageReceiver.receiveBatch(int,Duration)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
  name: "MessageReceiver.peekAsync()"
  nameWithType: "MessageReceiver.peekAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetter(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetter(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
  name: "MessageReceiver.complete(UUID)"
  nameWithType: "MessageReceiver.complete(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
  name: "MessageReceiver.completeAsync(UUID)"
  nameWithType: "MessageReceiver.completeAsync(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
  name: "MessageReceiver.receiveDeferredMessageBatch(Collection<Long>)"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatch(Collection<Long>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  name: "ClientEntity.close()"
  nameWithType: "ClientEntity.close()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
  name: "MessageReceiver.renewMessageLockAsync(UUID)"
  nameWithType: "MessageReceiver.renewMessageLockAsync(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
  name: "MessageSession.renewSessionLockAsync()"
  nameWithType: "MessageSession.renewSessionLockAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()"
- uid: "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
  name: "MessageSession.renewSessionLock()"
  nameWithType: "MessageSession.renewSessionLock()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.renewSessionLock()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
  name: "MessageReceiver.abandon(UUID)"
  nameWithType: "MessageReceiver.abandon(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
  name: "MessageReceiver.getPrefetchCount()"
  nameWithType: "MessageReceiver.getPrefetchCount()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetterAsync(UUID,String,String,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,String,String,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  name: "MessageReceiver.renewMessageLock(IMessage)"
  nameWithType: "MessageReceiver.renewMessageLock(IMessage)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  name: "ClientEntity.setClosed()"
  nameWithType: "ClientEntity.setClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
  name: "MessageReceiver.getReceiveMode()"
  nameWithType: "MessageReceiver.getReceiveMode()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  name: "ClientEntity.setClosing()"
  nameWithType: "ClientEntity.setClosing()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  name: "ClientEntity.throwIfClosed(Throwable)"
  nameWithType: "ClientEntity.throwIfClosed(Throwable)"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- uid: "com.microsoft.azure.servicebus.MessageSession.getState()"
  name: "MessageSession.getState()"
  nameWithType: "MessageSession.getState()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getState()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  name: "ClientEntity.closeAsync()"
  nameWithType: "ClientEntity.closeAsync()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
  name: "MessageReceiver.onClose()"
  nameWithType: "MessageReceiver.onClose()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
  name: "MessageReceiver.getEntityPath()"
  nameWithType: "MessageReceiver.getEntityPath()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
  name: "MessageReceiver.receiveBatchAsync(int)"
  nameWithType: "MessageReceiver.receiveBatchAsync(int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetter(UUID,String,String,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  name: "ClientEntity.finalize()"
  nameWithType: "ClientEntity.finalize()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
  name: "MessageReceiver.defer(UUID)"
  nameWithType: "MessageReceiver.defer(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.completeAsync(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.completeAsync(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
  name: "MessageSession.getStateAsync()"
  nameWithType: "MessageSession.getStateAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.getStateAsync()"
- uid: "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
  name: "MessageSession.isBrowsableSession()"
  nameWithType: "MessageSession.isBrowsableSession()"
  fullName: "com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  name: "ClientEntity.getIsClosed()"
  nameWithType: "ClientEntity.getIsClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetter(UUID,String,String,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetter(UUID,String,String,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  name: "MessageReceiver.renewMessageLockAsync(IMessage)"
  nameWithType: "MessageReceiver.renewMessageLockAsync(IMessage)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetterAsync(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deadLetterAsync(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
  name: "MessageReceiver.initializeAsync()"
  nameWithType: "MessageReceiver.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
  name: "MessageReceiver.deadLetterAsync(UUID)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  name: "MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)"
  nameWithType: "MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  name: "MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,String,String,Map<String,Object>)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.deferAsync(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.deferAsync(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
  name: "MessageReceiver.deadLetter(UUID)"
  nameWithType: "MessageReceiver.deadLetter(UUID)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  name: "MessageReceiver.deadLetterAsync(UUID,String,String)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,String,String)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  name: "ClientEntity.getClientId()"
  nameWithType: "ClientEntity.getClientId()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
  name: "MessageReceiver.getMessagingFactory()"
  nameWithType: "MessageReceiver.getMessagingFactory()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
  name: "MessageReceiver.peekBatchAsync(long,int)"
  nameWithType: "MessageReceiver.peekBatchAsync(long,int)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.abandonAsync(UUID,Map<String,Object>,TransactionContext)"
  nameWithType: "MessageReceiver.abandonAsync(UUID,Map<String,Object>,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  name: "MessageReceiver.complete(UUID,TransactionContext)"
  nameWithType: "MessageReceiver.complete(UUID,TransactionContext)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
  name: "MessageReceiver.receiveBatchAsync(int,Duration)"
  nameWithType: "MessageReceiver.receiveBatchAsync(int,Duration)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "? extends com.microsoft.azure.servicebus.IMessage"
  name: "? extends IMessage"
  nameWithType: "? extends IMessage"
  fullName: "? extends com.microsoft.azure.servicebus.IMessage"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map"
  name: "MessageReceiver.deadLetter(UUID,Map"
  nameWithType: "MessageReceiver.deadLetter(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map"
- uid: "java.lang.String,java.lang.Object>)"
  name: "String,Object>)"
  nameWithType: "String,Object>)"
  fullName: "java.lang.String,java.lang.Object>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map"
  name: "MessageReceiver.deadLetter(UUID,String,String,Map"
  nameWithType: "MessageReceiver.deadLetter(UUID,String,String,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map"
- uid: "java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  name: "String,Object>,TransactionContext)"
  nameWithType: "String,Object>,TransactionContext)"
  fullName: "java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map"
  name: "MessageReceiver.abandonAsync(UUID,Map"
  nameWithType: "MessageReceiver.abandonAsync(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map"
  name: "MessageReceiver.defer(UUID,Map"
  nameWithType: "MessageReceiver.defer(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection"
  name: "MessageReceiver.renewMessageLockBatch(Collection"
  nameWithType: "MessageReceiver.renewMessageLockBatch(Collection"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection"
- uid: "? extends com.microsoft.azure.servicebus.IMessage>)"
  name: "? extends IMessage>)"
  nameWithType: "? extends IMessage>)"
  fullName: "? extends com.microsoft.azure.servicebus.IMessage>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map"
  name: "MessageReceiver.abandon(UUID,Map"
  nameWithType: "MessageReceiver.abandon(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection"
  name: "MessageReceiver.receiveDeferredMessageBatchAsync(Collection"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatchAsync(Collection"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection"
- uid: "java.lang.Long>)"
  name: "Long>)"
  nameWithType: "Long>)"
  fullName: "java.lang.Long>)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map"
  name: "MessageReceiver.deadLetterAsync(UUID,Map"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map"
  name: "MessageReceiver.deferAsync(UUID,Map"
  nameWithType: "MessageReceiver.deferAsync(UUID,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection"
  name: "MessageReceiver.receiveDeferredMessageBatch(Collection"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatch(Collection"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map"
  name: "MessageReceiver.deadLetterAsync(UUID,String,String,Map"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID,String,String,Map"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection"
  name: "MessageReceiver.renewMessageLockBatchAsync(Collection"
  nameWithType: "MessageReceiver.renewMessageLockBatchAsync(Collection"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection"
