### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.RetryPolicy"
  id: "RetryPolicy"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_BACKOFF"
  - "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_RETRY_COUNT"
  - "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MAX_BACKOFF"
  - "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MIN_BACKOFF"
  - "com.microsoft.azure.storage.RetryPolicy.RetryPolicy()"
  - "com.microsoft.azure.storage.RetryPolicy.RetryPolicy(int,int)"
  - "com.microsoft.azure.storage.RetryPolicy.deltaBackoffIntervalInMs"
  - "com.microsoft.azure.storage.RetryPolicy.evaluate(com.microsoft.azure.storage.RetryContext,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound(com.microsoft.azure.storage.RetryContext)"
  - "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo(com.microsoft.azure.storage.RetryContext,boolean,long)"
  - "com.microsoft.azure.storage.RetryPolicy.lastPrimaryAttempt"
  - "com.microsoft.azure.storage.RetryPolicy.lastSecondaryAttempt"
  - "com.microsoft.azure.storage.RetryPolicy.maximumAttempts"
  langs:
  - "java"
  name: "RetryPolicy"
  nameWithType: "RetryPolicy"
  fullName: "com.microsoft.azure.storage.RetryPolicy"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Abstract class that represents a retry policy."
  syntax:
    content: "public abstract class RetryPolicy implements RetryPolicyFactory"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.azure.storage.RetryPolicyFactory"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_BACKOFF"
  id: "DEFAULT_CLIENT_BACKOFF"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "DEFAULT_CLIENT_BACKOFF"
  nameWithType: "RetryPolicy.DEFAULT_CLIENT_BACKOFF"
  fullName: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_BACKOFF"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the default client backoff interval, in milliseconds."
  syntax:
    content: "public static final int DEFAULT_CLIENT_BACKOFF"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_RETRY_COUNT"
  id: "DEFAULT_CLIENT_RETRY_COUNT"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "DEFAULT_CLIENT_RETRY_COUNT"
  nameWithType: "RetryPolicy.DEFAULT_CLIENT_RETRY_COUNT"
  fullName: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_CLIENT_RETRY_COUNT"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the default client retry count."
  syntax:
    content: "public static final int DEFAULT_CLIENT_RETRY_COUNT"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MAX_BACKOFF"
  id: "DEFAULT_MAX_BACKOFF"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "DEFAULT_MAX_BACKOFF"
  nameWithType: "RetryPolicy.DEFAULT_MAX_BACKOFF"
  fullName: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MAX_BACKOFF"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the default maximum backoff interval, in milliseconds."
  syntax:
    content: "public static final int DEFAULT_MAX_BACKOFF"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MIN_BACKOFF"
  id: "DEFAULT_MIN_BACKOFF"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "DEFAULT_MIN_BACKOFF"
  nameWithType: "RetryPolicy.DEFAULT_MIN_BACKOFF"
  fullName: "com.microsoft.azure.storage.RetryPolicy.DEFAULT_MIN_BACKOFF"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the default minimum backoff interval, in milliseconds."
  syntax:
    content: "public static final int DEFAULT_MIN_BACKOFF"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy()"
  id: "RetryPolicy()"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "RetryPolicy()"
  nameWithType: "RetryPolicy.RetryPolicy()"
  fullName: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy()"
  overload: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `RetryPolicy` class."
  syntax:
    content: "public RetryPolicy()"
- uid: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy(int,int)"
  id: "RetryPolicy(int,int)"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "RetryPolicy(int deltaBackoff, int maxAttempts)"
  nameWithType: "RetryPolicy.RetryPolicy(int deltaBackoff, int maxAttempts)"
  fullName: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy(int deltaBackoff, int maxAttempts)"
  overload: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `RetryPolicy` class using the specified delta backoff and maximum retry attempts."
  syntax:
    content: "public RetryPolicy(int deltaBackoff, int maxAttempts)"
    parameters:
    - id: "deltaBackoff"
      type: "int"
      description: "The backoff interval, in milliseconds, between retries."
    - id: "maxAttempts"
      type: "int"
      description: "The maximum number of retry attempts."
- uid: "com.microsoft.azure.storage.RetryPolicy.deltaBackoffIntervalInMs"
  id: "deltaBackoffIntervalInMs"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "deltaBackoffIntervalInMs"
  nameWithType: "RetryPolicy.deltaBackoffIntervalInMs"
  fullName: "com.microsoft.azure.storage.RetryPolicy.deltaBackoffIntervalInMs"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the realized backoff interval, in milliseconds."
  syntax:
    content: "protected int deltaBackoffIntervalInMs"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluate(com.microsoft.azure.storage.RetryContext,com.microsoft.azure.storage.OperationContext)"
  id: "evaluate(com.microsoft.azure.storage.RetryContext,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "evaluate(RetryContext retryContext, OperationContext operationContext)"
  nameWithType: "RetryPolicy.evaluate(RetryContext retryContext, OperationContext operationContext)"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluate(RetryContext retryContext, OperationContext operationContext)"
  overload: "com.microsoft.azure.storage.RetryPolicy.evaluate*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Determines whether the operation should be retried and specifies the interval until the next retry."
  syntax:
    content: "public abstract RetryInfo evaluate(RetryContext retryContext, OperationContext operationContext)"
    parameters:
    - id: "retryContext"
      type: "com.microsoft.azure.storage.RetryContext"
      description: "A <xref uid=\"com.microsoft.azure.storage.RetryContext\" data-throw-if-not-resolved=\"false\">RetryContext</xref> object that indicates the number of retries, last request's results, whether\n            the next retry should happen in the primary or secondary location, and specifies the location mode."
    - id: "operationContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation."
    return:
      type: "com.microsoft.azure.storage.RetryInfo"
      description: "A <xref uid=\"com.microsoft.azure.storage.RetryInfo\" data-throw-if-not-resolved=\"false\">RetryInfo</xref> object that indicates whether the next retry will happen in the primary or secondary\n         location, and specifies the location mode. If <code>null</code>, the operation will not be retried."
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound(com.microsoft.azure.storage.RetryContext)"
  id: "evaluateLastAttemptAndSecondaryNotFound(com.microsoft.azure.storage.RetryContext)"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "evaluateLastAttemptAndSecondaryNotFound(RetryContext retryContext)"
  nameWithType: "RetryPolicy.evaluateLastAttemptAndSecondaryNotFound(RetryContext retryContext)"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound(RetryContext retryContext)"
  overload: "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Determines the time of the last attempt to a storage location and returns a `boolean` that specifies if a request that was sent to the secondary location failed with 404."
  syntax:
    content: "protected boolean evaluateLastAttemptAndSecondaryNotFound(RetryContext retryContext)"
    parameters:
    - id: "retryContext"
      type: "com.microsoft.azure.storage.RetryContext"
      description: "A <xref uid=\"com.microsoft.azure.storage.RetryContext\" data-throw-if-not-resolved=\"false\">RetryContext</xref> object that indicates the number of retries, last request's results, whether\n            the next retry should happen in the primary or secondary location, and specifies the location mode."
    return:
      type: "boolean"
      description: "<code>true</code> if a request sent to the secondary location fails with 404 (Not Found).\n         <code>false</code> otherwise."
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo(com.microsoft.azure.storage.RetryContext,boolean,long)"
  id: "evaluateRetryInfo(com.microsoft.azure.storage.RetryContext,boolean,long)"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "evaluateRetryInfo(RetryContext retryContext, boolean secondaryNotFound, long retryInterval)"
  nameWithType: "RetryPolicy.evaluateRetryInfo(RetryContext retryContext, boolean secondaryNotFound, long retryInterval)"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo(RetryContext retryContext, boolean secondaryNotFound, long retryInterval)"
  overload: "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Determines the <xref uid=\"com.microsoft.azure.storage.RetryInfo\" data-throw-if-not-resolved=\"false\">RetryInfo</xref> object that indicates whether the next retry will happen in the primary or secondary location, and specifies the location mode."
  syntax:
    content: "protected RetryInfo evaluateRetryInfo(RetryContext retryContext, boolean secondaryNotFound, long retryInterval)"
    parameters:
    - id: "retryContext"
      type: "com.microsoft.azure.storage.RetryContext"
      description: "A <xref uid=\"com.microsoft.azure.storage.RetryContext\" data-throw-if-not-resolved=\"false\">RetryContext</xref> object that indicates the number of retries, last request's results, whether\n            the next retry should happen in the primary or secondary location, and specifies the location mode."
    - id: "secondaryNotFound"
      type: "boolean"
      description: "A <code>boolean</code> representing whether a request sent to the secondary location failed with 404\n            (Not Found)"
    - id: "retryInterval"
      type: "long"
      description: "Backoff Interval."
    return:
      type: "com.microsoft.azure.storage.RetryInfo"
      description: "A reference to the <xref uid=\"com.microsoft.azure.storage.RetryInfo\" data-throw-if-not-resolved=\"false\">RetryInfo</xref> object that indicates whether the next retry will happen in the\n         primary or secondary location, and specifies the location mode."
- uid: "com.microsoft.azure.storage.RetryPolicy.lastPrimaryAttempt"
  id: "lastPrimaryAttempt"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "lastPrimaryAttempt"
  nameWithType: "RetryPolicy.lastPrimaryAttempt"
  fullName: "com.microsoft.azure.storage.RetryPolicy.lastPrimaryAttempt"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the time of the last request attempt to the primary location."
  syntax:
    content: "protected Date lastPrimaryAttempt"
    return:
      type: "java.util.Date"
- uid: "com.microsoft.azure.storage.RetryPolicy.lastSecondaryAttempt"
  id: "lastSecondaryAttempt"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "lastSecondaryAttempt"
  nameWithType: "RetryPolicy.lastSecondaryAttempt"
  fullName: "com.microsoft.azure.storage.RetryPolicy.lastSecondaryAttempt"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the time of the last request attempt to the secondary location."
  syntax:
    content: "protected Date lastSecondaryAttempt"
    return:
      type: "java.util.Date"
- uid: "com.microsoft.azure.storage.RetryPolicy.maximumAttempts"
  id: "maximumAttempts"
  parent: "com.microsoft.azure.storage.RetryPolicy"
  langs:
  - "java"
  name: "maximumAttempts"
  nameWithType: "RetryPolicy.maximumAttempts"
  fullName: "com.microsoft.azure.storage.RetryPolicy.maximumAttempts"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the maximum retries that the retry policy should attempt."
  syntax:
    content: "protected int maximumAttempts"
    return:
      type: "int"
references:
- uid: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy*"
  name: "RetryPolicy"
  nameWithType: "RetryPolicy.RetryPolicy"
  fullName: "com.microsoft.azure.storage.RetryPolicy.RetryPolicy"
  package: "com.microsoft.azure.storage"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.RetryContext"
  name: "RetryContext"
  nameWithType: "RetryContext"
  fullName: "com.microsoft.azure.storage.RetryContext"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.RetryInfo"
  name: "RetryInfo"
  nameWithType: "RetryInfo"
  fullName: "com.microsoft.azure.storage.RetryInfo"
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluate*"
  name: "evaluate"
  nameWithType: "RetryPolicy.evaluate"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluate"
  package: "com.microsoft.azure.storage"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound*"
  name: "evaluateLastAttemptAndSecondaryNotFound"
  nameWithType: "RetryPolicy.evaluateLastAttemptAndSecondaryNotFound"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluateLastAttemptAndSecondaryNotFound"
  package: "com.microsoft.azure.storage"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo*"
  name: "evaluateRetryInfo"
  nameWithType: "RetryPolicy.evaluateRetryInfo"
  fullName: "com.microsoft.azure.storage.RetryPolicy.evaluateRetryInfo"
  package: "com.microsoft.azure.storage"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.RetryPolicyFactory"
  name: "RetryPolicyFactory"
  nameWithType: "RetryPolicyFactory"
  fullName: "com.microsoft.azure.storage.RetryPolicyFactory"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
