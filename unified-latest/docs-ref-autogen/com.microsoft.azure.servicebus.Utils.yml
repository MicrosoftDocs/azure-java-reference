### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.Utils"
  id: "Utils"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.Utils.<T>completeFuture(java.util.concurrent.CompletableFuture<T>)"
  - "com.microsoft.azure.servicebus.Utils.Utils()"
  - "com.microsoft.azure.servicebus.Utils.assertNonNull(java.lang.String,java.lang.Object)"
  - "com.microsoft.azure.servicebus.Utils.fromBinay(byte[])"
  - "com.microsoft.azure.servicebus.Utils.fromSequence(java.util.List<java.lang.Object>)"
  - "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  - "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  langs:
  - "java"
  name: "Utils"
  nameWithType: "Utils"
  fullName: "com.microsoft.azure.servicebus.Utils"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public final class Utils"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.Utils.<T>completeFuture(java.util.concurrent.CompletableFuture<T>)"
  id: "<T>completeFuture(java.util.concurrent.CompletableFuture<T>)"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "<T>completeFuture(CompletableFuture<T> future)"
  nameWithType: "Utils.<T>completeFuture(CompletableFuture<T> future)"
  fullName: "com.microsoft.azure.servicebus.Utils.<T>completeFuture(CompletableFuture<T> future)"
  overload: "com.microsoft.azure.servicebus.Utils.completeFuture*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public static T <T>completeFuture(CompletableFuture<T> future)"
    parameters:
    - id: "future"
      type: "java.util.concurrent.CompletableFuture<T>"
    return:
      type: "T"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.Utils.Utils()"
  id: "Utils()"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "Utils()"
  nameWithType: "Utils.Utils()"
  fullName: "com.microsoft.azure.servicebus.Utils.Utils()"
  overload: "com.microsoft.azure.servicebus.Utils.Utils*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Utils()"
- uid: "com.microsoft.azure.servicebus.Utils.assertNonNull(java.lang.String,java.lang.Object)"
  id: "assertNonNull(java.lang.String,java.lang.Object)"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "assertNonNull(String argumentName, Object argument)"
  nameWithType: "Utils.assertNonNull(String argumentName, Object argument)"
  fullName: "com.microsoft.azure.servicebus.Utils.assertNonNull(String argumentName, Object argument)"
  overload: "com.microsoft.azure.servicebus.Utils.assertNonNull*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "static void assertNonNull(String argumentName, Object argument)"
    parameters:
    - id: "argumentName"
      type: "java.lang.String"
    - id: "argument"
      type: "java.lang.Object"
- uid: "com.microsoft.azure.servicebus.Utils.fromBinay(byte[])"
  id: "fromBinay(byte[])"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "fromBinay(byte[] binary)"
  nameWithType: "Utils.fromBinay(byte[] binary)"
  fullName: "com.microsoft.azure.servicebus.Utils.fromBinay(byte[] binary)"
  overload: "com.microsoft.azure.servicebus.Utils.fromBinay*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "static MessageBody fromBinay(byte[] binary)"
    parameters:
    - id: "binary"
      type: "byte[]"
    return:
      type: "com.microsoft.azure.servicebus.MessageBody"
- uid: "com.microsoft.azure.servicebus.Utils.fromSequence(java.util.List<java.lang.Object>)"
  id: "fromSequence(java.util.List<java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "fromSequence(List<Object> sequence)"
  nameWithType: "Utils.fromSequence(List<Object> sequence)"
  fullName: "com.microsoft.azure.servicebus.Utils.fromSequence(List<Object> sequence)"
  overload: "com.microsoft.azure.servicebus.Utils.fromSequence*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "static MessageBody fromSequence(List<Object> sequence)"
    parameters:
    - id: "sequence"
      type: "java.util.List<java.lang.Object>"
    return:
      type: "com.microsoft.azure.servicebus.MessageBody"
- uid: "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  id: "getDataFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "getDataFromMessageBody(MessageBody messageBody)"
  nameWithType: "Utils.getDataFromMessageBody(MessageBody messageBody)"
  fullName: "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody(MessageBody messageBody)"
  overload: "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "static byte[] getDataFromMessageBody(MessageBody messageBody)"
    parameters:
    - id: "messageBody"
      type: "com.microsoft.azure.servicebus.MessageBody"
    return:
      type: "byte[]"
- uid: "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  id: "getSequenceFromMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  parent: "com.microsoft.azure.servicebus.Utils"
  langs:
  - "java"
  name: "getSequenceFromMessageBody(MessageBody messageBody)"
  nameWithType: "Utils.getSequenceFromMessageBody(MessageBody messageBody)"
  fullName: "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody(MessageBody messageBody)"
  overload: "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "static List<Object> getSequenceFromMessageBody(MessageBody messageBody)"
    parameters:
    - id: "messageBody"
      type: "com.microsoft.azure.servicebus.MessageBody"
    return:
      type: "java.util.List<java.lang.Object>"
references:
- uid: "com.microsoft.azure.servicebus.Utils.Utils*"
  name: "Utils"
  nameWithType: "Utils.Utils"
  fullName: "com.microsoft.azure.servicebus.Utils.Utils"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  name: "ServiceBusException"
  nameWithType: "ServiceBusException"
  fullName: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "java.util.concurrent.CompletableFuture<T>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.microsoft.azure.servicebus.Utils.completeFuture*"
  name: "<T>completeFuture"
  nameWithType: "Utils.<T>completeFuture"
  fullName: "com.microsoft.azure.servicebus.Utils.<T>completeFuture"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.servicebus.Utils.assertNonNull*"
  name: "assertNonNull"
  nameWithType: "Utils.assertNonNull"
  fullName: "com.microsoft.azure.servicebus.Utils.assertNonNull"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.List<java.lang.Object>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageBody"
  name: "MessageBody"
  nameWithType: "MessageBody"
  fullName: "com.microsoft.azure.servicebus.MessageBody"
- uid: "com.microsoft.azure.servicebus.Utils.fromSequence*"
  name: "fromSequence"
  nameWithType: "Utils.fromSequence"
  fullName: "com.microsoft.azure.servicebus.Utils.fromSequence"
  package: "com.microsoft.azure.servicebus"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.servicebus.Utils.fromBinay*"
  name: "fromBinay"
  nameWithType: "Utils.fromBinay"
  fullName: "com.microsoft.azure.servicebus.Utils.fromBinay"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody*"
  name: "getDataFromMessageBody"
  nameWithType: "Utils.getDataFromMessageBody"
  fullName: "com.microsoft.azure.servicebus.Utils.getDataFromMessageBody"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody*"
  name: "getSequenceFromMessageBody"
  nameWithType: "Utils.getSequenceFromMessageBody"
  fullName: "com.microsoft.azure.servicebus.Utils.getSequenceFromMessageBody"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
