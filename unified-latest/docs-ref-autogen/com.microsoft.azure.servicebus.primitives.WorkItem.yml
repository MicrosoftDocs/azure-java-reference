### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem"
  id: "WorkItem"
  parent: "com.microsoft.azure.servicebus.primitives"
  children:
  - "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem(java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem(java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
  langs:
  - "java"
  name: "WorkItem<T>"
  nameWithType: "WorkItem<T>"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>"
  type: "Class"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " class WorkItem<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem(java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  id: "WorkItem(java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "WorkItem(CompletableFuture<T> completableFuture, TimeoutTracker tracker)"
  nameWithType: "WorkItem<T>.WorkItem(CompletableFuture<T> completableFuture, TimeoutTracker tracker)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.WorkItem(CompletableFuture<T> completableFuture, TimeoutTracker tracker)"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " WorkItem(CompletableFuture<T> completableFuture, TimeoutTracker tracker)"
    parameters:
    - id: "completableFuture"
      type: "java.util.concurrent.CompletableFuture<T>"
    - id: "tracker"
      type: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem(java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  id: "WorkItem(java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "WorkItem(CompletableFuture<T> completableFuture, Duration timeout)"
  nameWithType: "WorkItem<T>.WorkItem(CompletableFuture<T> completableFuture, Duration timeout)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.WorkItem(CompletableFuture<T> completableFuture, Duration timeout)"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " WorkItem(CompletableFuture<T> completableFuture, Duration timeout)"
    parameters:
    - id: "completableFuture"
      type: "java.util.concurrent.CompletableFuture<T>"
    - id: "timeout"
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
  id: "cancelTimeoutTask(boolean)"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "cancelTimeoutTask(boolean mayInterruptIfRunning)"
  nameWithType: "WorkItem<T>.cancelTimeoutTask(boolean mayInterruptIfRunning)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.cancelTimeoutTask(boolean mayInterruptIfRunning)"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public boolean cancelTimeoutTask(boolean mayInterruptIfRunning)"
    parameters:
    - id: "mayInterruptIfRunning"
      type: "boolean"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
  id: "getLastKnownException()"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "getLastKnownException()"
  nameWithType: "WorkItem<T>.getLastKnownException()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getLastKnownException()"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public Exception getLastKnownException()"
    return:
      type: "java.lang.Exception"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
  id: "getTimeoutTask()"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "getTimeoutTask()"
  nameWithType: "WorkItem<T>.getTimeoutTask()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getTimeoutTask()"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public ScheduledFuture<?> getTimeoutTask()"
    return:
      type: "java.util.concurrent.ScheduledFuture<?>"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
  id: "getTimeoutTracker()"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "getTimeoutTracker()"
  nameWithType: "WorkItem<T>.getTimeoutTracker()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getTimeoutTracker()"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public TimeoutTracker getTimeoutTracker()"
    return:
      type: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
  id: "getWork()"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "getWork()"
  nameWithType: "WorkItem<T>.getWork()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getWork()"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.getWork*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public CompletableFuture<T> getWork()"
    return:
      type: "java.util.concurrent.CompletableFuture<T>"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
  id: "setLastKnownException(java.lang.Exception)"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "setLastKnownException(Exception exception)"
  nameWithType: "WorkItem<T>.setLastKnownException(Exception exception)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.setLastKnownException(Exception exception)"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public void setLastKnownException(Exception exception)"
    parameters:
    - id: "exception"
      type: "java.lang.Exception"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
  id: "setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
  parent: "com.microsoft.azure.servicebus.primitives.WorkItem"
  langs:
  - "java"
  name: "setTimeoutTask(ScheduledFuture<?> timeoutTask)"
  nameWithType: "WorkItem<T>.setTimeoutTask(ScheduledFuture<?> timeoutTask)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.setTimeoutTask(ScheduledFuture<?> timeoutTask)"
  overload: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public void setTimeoutTask(ScheduledFuture<?> timeoutTask)"
    parameters:
    - id: "timeoutTask"
      type: "java.util.concurrent.ScheduledFuture<?>"
references:
- uid: "java.util.concurrent.CompletableFuture<T>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.WorkItem*"
  name: "WorkItem"
  nameWithType: "WorkItem<T>.WorkItem"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.WorkItem"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
  name: "TimeoutTracker"
  nameWithType: "TimeoutTracker"
  fullName: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker*"
  name: "getTimeoutTracker"
  nameWithType: "WorkItem<T>.getTimeoutTracker"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getTimeoutTracker"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getWork*"
  name: "getWork"
  nameWithType: "WorkItem<T>.getWork"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getWork"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "java.util.concurrent.ScheduledFuture<?>"
  spec.java:
  - uid: "java.util.concurrent.ScheduledFuture"
    name: "ScheduledFuture"
    fullName: "java.util.concurrent.ScheduledFuture"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask*"
  name: "getTimeoutTask"
  nameWithType: "WorkItem<T>.getTimeoutTask"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getTimeoutTask"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask*"
  name: "setTimeoutTask"
  nameWithType: "WorkItem<T>.setTimeoutTask"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.setTimeoutTask"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask*"
  name: "cancelTimeoutTask"
  nameWithType: "WorkItem<T>.cancelTimeoutTask"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.cancelTimeoutTask"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException*"
  name: "getLastKnownException"
  nameWithType: "WorkItem<T>.getLastKnownException"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.getLastKnownException"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException*"
  name: "setLastKnownException"
  nameWithType: "WorkItem<T>.setLastKnownException"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>.setLastKnownException"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "java.util.concurrent.ScheduledFuture"
  name: "ScheduledFuture"
  nameWithType: "ScheduledFuture"
  fullName: "java.util.concurrent.ScheduledFuture"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
