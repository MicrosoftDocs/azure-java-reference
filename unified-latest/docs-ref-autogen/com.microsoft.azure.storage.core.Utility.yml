### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.Utility"
  id: "Utility"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.Utility.GMT_ZONE"
  - "com.microsoft.azure.storage.core.Utility.LOCALE_US"
  - "com.microsoft.azure.storage.core.Utility.UTC_ZONE"
  - "com.microsoft.azure.storage.core.Utility.analyzeStream(java.io.InputStream,long,long,boolean,boolean)"
  - "com.microsoft.azure.storage.core.Utility.assertContinuationType(com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.ResultContinuationType)"
  - "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual(java.lang.String,long,long)"
  - "com.microsoft.azure.storage.core.Utility.assertInBounds(java.lang.String,long,long,long)"
  - "com.microsoft.azure.storage.core.Utility.assertNotNull(java.lang.String,java.lang.Object)"
  - "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.binaryAppend(byte[],byte[])"
  - "com.microsoft.azure.storage.core.Utility.checkNullaryCtor(java.lang.Class<?>)"
  - "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter(java.io.StringWriter)"
  - "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri(java.net.URI)"
  - "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold(java.io.InputStream,java.io.ByteArrayOutputStream,javax.crypto.Cipher,long,long)"
  - "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences(byte[],byte[])"
  - "com.microsoft.azure.storage.core.Utility.findPattern(byte[],byte[],int)"
  - "com.microsoft.azure.storage.core.Utility.formatETag(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException(java.lang.Exception)"
  - "com.microsoft.azure.storage.core.Utility.getGMTTime()"
  - "com.microsoft.azure.storage.core.Utility.getGMTTime(java.util.Date)"
  - "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time(java.util.Date)"
  - "com.microsoft.azure.storage.core.Utility.getJsonGenerator(java.io.OutputStream)"
  - "com.microsoft.azure.storage.core.Utility.getJsonGenerator(java.io.StringWriter)"
  - "com.microsoft.azure.storage.core.Utility.getJsonParser(java.io.InputStream)"
  - "com.microsoft.azure.storage.core.Utility.getJsonParser(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.getListingLocationMode(com.microsoft.azure.storage.ResultContinuation)"
  - "com.microsoft.azure.storage.core.Utility.getRemainingTimeout(java.lang.Long,java.lang.Integer)"
  - "com.microsoft.azure.storage.core.Utility.getSAXParser()"
  - "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue(java.net.HttpURLConnection,java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty(java.util.Date)"
  - "com.microsoft.azure.storage.core.Utility.initIOException(java.lang.Exception)"
  - "com.microsoft.azure.storage.core.Utility.isNullOrEmpty(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.logHttpError(com.microsoft.azure.storage.StorageException,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.Utility.logHttpRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.Utility.logHttpResponse(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.Utility.parseAccountString(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.parseDate(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.parseDate(java.lang.String,boolean)"
  - "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.safeDecode(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.safeEncode(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.safeRelativize(java.net.URI,java.net.URI)"
  - "com.microsoft.azure.storage.core.Utility.splitOnPattern(byte[],byte[])"
  - "com.microsoft.azure.storage.core.Utility.stringJoin(java.lang.CharSequence,java.lang.Iterable<java.lang.String>)"
  - "com.microsoft.azure.storage.core.Utility.stringJoin(java.lang.CharSequence,java.lang.String...)"
  - "com.microsoft.azure.storage.core.Utility.trimEnd(java.lang.String,char)"
  - "com.microsoft.azure.storage.core.Utility.trimStart(java.lang.String)"
  - "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(java.lang.Long)"
  - "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(java.lang.Long,long)"
  - "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean)"
  - "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean,com.microsoft.azure.storage.core.StorageRequest<?,?,java.lang.Integer>,com.microsoft.azure.storage.core.StreamMd5AndLength)"
  langs:
  - "java"
  name: "Utility"
  nameWithType: "Utility"
  fullName: "com.microsoft.azure.storage.core.Utility"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. A class which provides utility methods."
  syntax:
    content: "public final class Utility"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.Utility.GMT_ZONE"
  id: "GMT_ZONE"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "GMT_ZONE"
  nameWithType: "Utility.GMT_ZONE"
  fullName: "com.microsoft.azure.storage.core.Utility.GMT_ZONE"
  type: "Field"
  package: "com.microsoft.azure.storage.core"
  summary: "Stores a reference to the GMT time zone."
  syntax:
    content: "public static final TimeZone GMT_ZONE"
    return:
      type: "java.util.TimeZone"
- uid: "com.microsoft.azure.storage.core.Utility.LOCALE_US"
  id: "LOCALE_US"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "LOCALE_US"
  nameWithType: "Utility.LOCALE_US"
  fullName: "com.microsoft.azure.storage.core.Utility.LOCALE_US"
  type: "Field"
  package: "com.microsoft.azure.storage.core"
  summary: "Stores a reference to the US locale."
  syntax:
    content: "public static final Locale LOCALE_US"
    return:
      type: "java.util.Locale"
- uid: "com.microsoft.azure.storage.core.Utility.UTC_ZONE"
  id: "UTC_ZONE"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "UTC_ZONE"
  nameWithType: "Utility.UTC_ZONE"
  fullName: "com.microsoft.azure.storage.core.Utility.UTC_ZONE"
  type: "Field"
  package: "com.microsoft.azure.storage.core"
  summary: "Stores a reference to the UTC time zone."
  syntax:
    content: "public static final TimeZone UTC_ZONE"
    return:
      type: "java.util.TimeZone"
- uid: "com.microsoft.azure.storage.core.Utility.Utility()"
  id: "Utility()"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "Utility()"
  nameWithType: "Utility.Utility()"
  fullName: "com.microsoft.azure.storage.core.Utility.Utility()"
  overload: "com.microsoft.azure.storage.core.Utility.Utility*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Private Default Constructor."
  syntax:
    content: "private Utility()"
- uid: "com.microsoft.azure.storage.core.Utility.analyzeStream(java.io.InputStream,long,long,boolean,boolean)"
  id: "analyzeStream(java.io.InputStream,long,long,boolean,boolean)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "analyzeStream(InputStream sourceStream, long writeLength, long abandonLength, boolean rewindSourceStream, boolean calculateMD5)"
  nameWithType: "Utility.analyzeStream(InputStream sourceStream, long writeLength, long abandonLength, boolean rewindSourceStream, boolean calculateMD5)"
  fullName: "com.microsoft.azure.storage.core.Utility.analyzeStream(InputStream sourceStream, long writeLength, long abandonLength, boolean rewindSourceStream, boolean calculateMD5)"
  overload: "com.microsoft.azure.storage.core.Utility.analyzeStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Determines the size of an input stream, and optionally calculates the MD5 hash for the stream."
  syntax:
    content: "public static StreamMd5AndLength analyzeStream(InputStream sourceStream, long writeLength, long abandonLength, boolean rewindSourceStream, boolean calculateMD5)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "A <code>InputStream</code> object that represents the stream to measure."
    - id: "writeLength"
      type: "long"
      description: "The number of bytes to read from the stream."
    - id: "abandonLength"
      type: "long"
      description: "The number of bytes to read before the analysis is abandoned. Set this value to <code>-1</code> to\n            force the entire stream to be read. This parameter is provided to support upload thresholds."
    - id: "rewindSourceStream"
      type: "boolean"
      description: "<code>true</code> if the stream should be rewound after it is read; otherwise, <code>false</code>."
    - id: "calculateMD5"
      type: "boolean"
      description: "<code>true</code> if an MD5 hash will be calculated; otherwise, <code>false</code>."
    return:
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "A <xref uid=\"com.microsoft.azure.storage.core.StreamMd5AndLength\" data-throw-if-not-resolved=\"false\">StreamMd5AndLength</xref> object that contains the stream length, and optionally the MD5 hash."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.core.Utility.assertContinuationType(com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.ResultContinuationType)"
  id: "assertContinuationType(com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.ResultContinuationType)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "assertContinuationType(ResultContinuation continuationToken, ResultContinuationType continuationType)"
  nameWithType: "Utility.assertContinuationType(ResultContinuation continuationToken, ResultContinuationType continuationType)"
  fullName: "com.microsoft.azure.storage.core.Utility.assertContinuationType(ResultContinuation continuationToken, ResultContinuationType continuationType)"
  overload: "com.microsoft.azure.storage.core.Utility.assertContinuationType*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Asserts a continuation token is of the specified type."
  syntax:
    content: "public static void assertContinuationType(ResultContinuation continuationToken, ResultContinuationType continuationType)"
    parameters:
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object that represents the continuation token whose type is being\n            examined."
    - id: "continuationType"
      type: "com.microsoft.azure.storage.ResultContinuationType"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuationType\" data-throw-if-not-resolved=\"false\">ResultContinuationType</xref> value that represents the continuation token type being asserted with\n            the specified continuation token."
- uid: "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual(java.lang.String,long,long)"
  id: "assertGreaterThanOrEqual(java.lang.String,long,long)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "assertGreaterThanOrEqual(String param, long value, long min)"
  nameWithType: "Utility.assertGreaterThanOrEqual(String param, long value, long min)"
  fullName: "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual(String param, long value, long min)"
  overload: "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Asserts that the specified value is greater than or equal to the min value."
  syntax:
    content: "public static void assertGreaterThanOrEqual(String param, long value, long min)"
    parameters:
    - id: "param"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the parameter, which becomes the exception message\n            text if the <code>value</code> parameter is out of bounds."
    - id: "value"
      type: "long"
      description: "The value of the specified parameter."
    - id: "min"
      type: "long"
      description: "The minimum value for the specified parameter."
- uid: "com.microsoft.azure.storage.core.Utility.assertInBounds(java.lang.String,long,long,long)"
  id: "assertInBounds(java.lang.String,long,long,long)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "assertInBounds(String param, long value, long min, long max)"
  nameWithType: "Utility.assertInBounds(String param, long value, long min, long max)"
  fullName: "com.microsoft.azure.storage.core.Utility.assertInBounds(String param, long value, long min, long max)"
  overload: "com.microsoft.azure.storage.core.Utility.assertInBounds*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Asserts that the specified integer is in the valid range."
  syntax:
    content: "public static void assertInBounds(String param, long value, long min, long max)"
    parameters:
    - id: "param"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the parameter, which becomes the exception message\n            text if the <code>value</code> parameter is out of bounds."
    - id: "value"
      type: "long"
      description: "The value of the specified parameter."
    - id: "min"
      type: "long"
      description: "The minimum value for the specified parameter."
    - id: "max"
      type: "long"
      description: "The maximum value for the specified parameter."
- uid: "com.microsoft.azure.storage.core.Utility.assertNotNull(java.lang.String,java.lang.Object)"
  id: "assertNotNull(java.lang.String,java.lang.Object)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "assertNotNull(String param, Object value)"
  nameWithType: "Utility.assertNotNull(String param, Object value)"
  fullName: "com.microsoft.azure.storage.core.Utility.assertNotNull(String param, Object value)"
  overload: "com.microsoft.azure.storage.core.Utility.assertNotNull*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Asserts that a value is not `null`."
  syntax:
    content: "public static void assertNotNull(String param, Object value)"
    parameters:
    - id: "param"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the parameter, which becomes the exception message\n            text if the <code>value</code> parameter is <code>null</code>."
    - id: "value"
      type: "java.lang.Object"
      description: "An <code>Object</code> object that represents the value of the specified parameter. This is the value\n            being asserted as not <code>null</code>."
- uid: "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty(java.lang.String,java.lang.String)"
  id: "assertNotNullOrEmpty(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "assertNotNullOrEmpty(String param, String value)"
  nameWithType: "Utility.assertNotNullOrEmpty(String param, String value)"
  fullName: "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty(String param, String value)"
  overload: "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Asserts that the specified string is not `null` or empty."
  syntax:
    content: "public static void assertNotNullOrEmpty(String param, String value)"
    parameters:
    - id: "param"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the parameter, which becomes the exception message\n            text if the <code>value</code> parameter is <code>null</code> or an empty string."
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the value of the specified parameter. This is the value being\n            asserted as not <code>null</code> and not an empty string."
- uid: "com.microsoft.azure.storage.core.Utility.binaryAppend(byte[],byte[])"
  id: "binaryAppend(byte[],byte[])"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "binaryAppend(byte[] arr1, byte[] arr2)"
  nameWithType: "Utility.binaryAppend(byte[] arr1, byte[] arr2)"
  fullName: "com.microsoft.azure.storage.core.Utility.binaryAppend(byte[] arr1, byte[] arr2)"
  overload: "com.microsoft.azure.storage.core.Utility.binaryAppend*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Appends 2 byte arrays."
  syntax:
    content: "public static byte[] binaryAppend(byte[] arr1, byte[] arr2)"
    parameters:
    - id: "arr1"
      type: "byte[]"
      description: "First array."
    - id: "arr2"
      type: "byte[]"
      description: "Second array."
    return:
      type: "byte[]"
      description: "The result byte array."
- uid: "com.microsoft.azure.storage.core.Utility.checkNullaryCtor(java.lang.Class<?>)"
  id: "checkNullaryCtor(java.lang.Class<?>)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "checkNullaryCtor(Class<?> clazzType)"
  nameWithType: "Utility.checkNullaryCtor(Class<?> clazzType)"
  fullName: "com.microsoft.azure.storage.core.Utility.checkNullaryCtor(Class<?> clazzType)"
  overload: "com.microsoft.azure.storage.core.Utility.checkNullaryCtor*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public static void checkNullaryCtor(Class<?> clazzType)"
    parameters:
    - id: "clazzType"
      type: "java.lang.Class<?>"
- uid: "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter(java.io.StringWriter)"
  id: "createXMLStreamWriter(java.io.StringWriter)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "createXMLStreamWriter(StringWriter outWriter)"
  nameWithType: "Utility.createXMLStreamWriter(StringWriter outWriter)"
  fullName: "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter(StringWriter outWriter)"
  overload: "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a `XMLStreamWriter` with the specified `StringWriter`."
  syntax:
    content: "public static XMLStreamWriter createXMLStreamWriter(StringWriter outWriter)"
    parameters:
    - id: "outWriter"
      type: "java.io.StringWriter"
      description: "The <code>StringWriter</code> to use to create the <code>XMLStreamWriter</code> instance."
    return:
      type: "javax.xml.stream.XMLStreamWriter"
      description: "A <code>XMLStreamWriter</code> instance"
  exceptions:
  - type: "javax.xml.stream.XMLStreamException"
- uid: "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri(java.net.URI)"
  id: "determinePathStyleFromUri(java.net.URI)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "determinePathStyleFromUri(URI baseURI)"
  nameWithType: "Utility.determinePathStyleFromUri(URI baseURI)"
  fullName: "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri(URI baseURI)"
  overload: "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value that indicates whether a specified URI is a path-style URI."
  syntax:
    content: "public static boolean determinePathStyleFromUri(URI baseURI)"
    parameters:
    - id: "baseURI"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> value that represents the URI being checked."
    return:
      type: "boolean"
      description: "<code>true</code> if the specified URI is path-style; otherwise, <code>false</code>."
- uid: "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold(java.io.InputStream,java.io.ByteArrayOutputStream,javax.crypto.Cipher,long,long)"
  id: "encryptStreamIfUnderThreshold(java.io.InputStream,java.io.ByteArrayOutputStream,javax.crypto.Cipher,long,long)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "encryptStreamIfUnderThreshold(InputStream sourceStream, ByteArrayOutputStream targetStream, Cipher cipher, long writeLength, long abandonLength)"
  nameWithType: "Utility.encryptStreamIfUnderThreshold(InputStream sourceStream, ByteArrayOutputStream targetStream, Cipher cipher, long writeLength, long abandonLength)"
  fullName: "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold(InputStream sourceStream, ByteArrayOutputStream targetStream, Cipher cipher, long writeLength, long abandonLength)"
  overload: "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Encrypts an input stream up to a given length. Exits early if the encrypted data is longer than the abandon length."
  syntax:
    content: "public static long encryptStreamIfUnderThreshold(InputStream sourceStream, ByteArrayOutputStream targetStream, Cipher cipher, long writeLength, long abandonLength)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "A <code>InputStream</code> object that represents the stream to measure."
    - id: "targetStream"
      type: "java.io.ByteArrayOutputStream"
      description: "A <code>ByteArrayOutputStream</code> object that represents the stream to write the encrypted data."
    - id: "cipher"
      type: "javax.crypto.Cipher"
      description: "The <code>Cipher</code> to use to encrypt the data."
    - id: "writeLength"
      type: "long"
      description: "The number of bytes to read and encrypt from the sourceStream."
    - id: "abandonLength"
      type: "long"
      description: "The number of bytes to read before the analysis is abandoned. Set this value to <code>-1</code> to\n            force the entire stream to be read. This parameter is provided to support upload thresholds."
    return:
      type: "long"
      description: "The size of the encrypted stream, or -1 if the encrypted stream would be over the abandonLength."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences(byte[],byte[])"
  id: "findAllPatternOccurences(byte[],byte[])"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "findAllPatternOccurences(byte[] array, byte[] pattern)"
  nameWithType: "Utility.findAllPatternOccurences(byte[] array, byte[] pattern)"
  fullName: "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences(byte[] array, byte[] pattern)"
  overload: "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Scans a byte array for all occurrences of a pattern, with no overlap of occurrence spans."
  syntax:
    content: "public static List<Integer> findAllPatternOccurences(byte[] array, byte[] pattern)"
    parameters:
    - id: "array"
      type: "byte[]"
      description: "The array to search."
    - id: "pattern"
      type: "byte[]"
      description: "The pattern to search for."
    return:
      type: "java.util.List<java.lang.Integer>"
      description: "A list of starting indices of all occurrences of the pattern, in ascending order."
- uid: "com.microsoft.azure.storage.core.Utility.findPattern(byte[],byte[],int)"
  id: "findPattern(byte[],byte[],int)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "findPattern(byte[] array, byte[] pattern, int scanOffset)"
  nameWithType: "Utility.findPattern(byte[] array, byte[] pattern, int scanOffset)"
  fullName: "com.microsoft.azure.storage.core.Utility.findPattern(byte[] array, byte[] pattern, int scanOffset)"
  overload: "com.microsoft.azure.storage.core.Utility.findPattern*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Scans a byte array for the first occurrence of a pattern, starting at the offset provided."
  syntax:
    content: "public static int findPattern(byte[] array, byte[] pattern, int scanOffset)"
    parameters:
    - id: "array"
      type: "byte[]"
      description: "The array to search."
    - id: "pattern"
      type: "byte[]"
      description: "The pattern to search for."
    - id: "scanOffset"
      type: "int"
      description: "Where to begin the search."
    return:
      type: "int"
      description: "The starting index of the found pattern. -1 if not found."
- uid: "com.microsoft.azure.storage.core.Utility.formatETag(java.lang.String)"
  id: "formatETag(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "formatETag(String etag)"
  nameWithType: "Utility.formatETag(String etag)"
  fullName: "com.microsoft.azure.storage.core.Utility.formatETag(String etag)"
  overload: "com.microsoft.azure.storage.core.Utility.formatETag*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reads character data for the Etag element from an XML stream reader."
  syntax:
    content: "public static String formatETag(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the character data for the Etag element."
- uid: "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException(java.lang.Exception)"
  id: "generateNewUnexpectedStorageException(java.lang.Exception)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "generateNewUnexpectedStorageException(Exception cause)"
  nameWithType: "Utility.generateNewUnexpectedStorageException(Exception cause)"
  fullName: "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException(Exception cause)"
  overload: "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns an unexpected storage exception."
  syntax:
    content: "public static StorageException generateNewUnexpectedStorageException(Exception cause)"
    parameters:
    - id: "cause"
      type: "java.lang.Exception"
      description: "An <code>Exception</code> object that represents the initial exception that caused the unexpected\n            error."
    return:
      type: "com.microsoft.azure.storage.StorageException"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageException\" data-throw-if-not-resolved=\"false\">StorageException</xref> object that represents the unexpected storage exception being thrown."
- uid: "com.microsoft.azure.storage.core.Utility.getGMTTime()"
  id: "getGMTTime()"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getGMTTime()"
  nameWithType: "Utility.getGMTTime()"
  fullName: "com.microsoft.azure.storage.core.Utility.getGMTTime()"
  overload: "com.microsoft.azure.storage.core.Utility.getGMTTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns the current GMT date/time String using the RFC1123 pattern."
  syntax:
    content: "public static String getGMTTime()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the current GMT date/time using the RFC1123 pattern."
- uid: "com.microsoft.azure.storage.core.Utility.getGMTTime(java.util.Date)"
  id: "getGMTTime(java.util.Date)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getGMTTime(Date date)"
  nameWithType: "Utility.getGMTTime(Date date)"
  fullName: "com.microsoft.azure.storage.core.Utility.getGMTTime(Date date)"
  overload: "com.microsoft.azure.storage.core.Utility.getGMTTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns the GTM date/time String for the specified value using the RFC1123 pattern."
  syntax:
    content: "public static String getGMTTime(Date date)"
    parameters:
    - id: "date"
      type: "java.util.Date"
      description: "A <code>Date</code> object that represents the date to convert to GMT date/time in the RFC1123\n            pattern."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the GMT date/time for the specified value using the RFC1123\n         pattern."
- uid: "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time(java.util.Date)"
  id: "getJavaISO8601Time(java.util.Date)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getJavaISO8601Time(Date date)"
  nameWithType: "Utility.getJavaISO8601Time(Date date)"
  fullName: "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time(Date date)"
  overload: "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns the UTC date/time String for the specified value using Java's version of the ISO8601 pattern, which is limited to millisecond precision."
  syntax:
    content: "public static String getJavaISO8601Time(Date date)"
    parameters:
    - id: "date"
      type: "java.util.Date"
      description: "A <code>Date</code> object that represents the date to convert to UTC date/time in Java's version\n            of the ISO8601 pattern."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the UTC date/time for the specified value using Java's version\n            of the ISO8601 pattern."
- uid: "com.microsoft.azure.storage.core.Utility.getJsonGenerator(java.io.OutputStream)"
  id: "getJsonGenerator(java.io.OutputStream)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getJsonGenerator(OutputStream outStream)"
  nameWithType: "Utility.getJsonGenerator(OutputStream outStream)"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonGenerator(OutputStream outStream)"
  overload: "com.microsoft.azure.storage.core.Utility.getJsonGenerator*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a `JsonGenerator` with the specified `OutputStream`."
  syntax:
    content: "public static JsonGenerator getJsonGenerator(OutputStream outStream)"
    parameters:
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "The <code>OutputStream</code> to use to create the <code>JsonGenerator</code> instance."
    return:
      type: "com.fasterxml.jackson.core.JsonGenerator"
      description: "A <code>JsonGenerator</code> instance"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.getJsonGenerator(java.io.StringWriter)"
  id: "getJsonGenerator(java.io.StringWriter)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getJsonGenerator(StringWriter strWriter)"
  nameWithType: "Utility.getJsonGenerator(StringWriter strWriter)"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonGenerator(StringWriter strWriter)"
  overload: "com.microsoft.azure.storage.core.Utility.getJsonGenerator*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a `JsonGenerator` with the specified `StringWriter`."
  syntax:
    content: "public static JsonGenerator getJsonGenerator(StringWriter strWriter)"
    parameters:
    - id: "strWriter"
      type: "java.io.StringWriter"
      description: "The <code>StringWriter</code> to use to create the <code>JsonGenerator</code> instance."
    return:
      type: "com.fasterxml.jackson.core.JsonGenerator"
      description: "A <code>JsonGenerator</code> instance"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.getJsonParser(java.io.InputStream)"
  id: "getJsonParser(java.io.InputStream)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getJsonParser(InputStream inStream)"
  nameWithType: "Utility.getJsonParser(InputStream inStream)"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonParser(InputStream inStream)"
  overload: "com.microsoft.azure.storage.core.Utility.getJsonParser*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a `JsonParser` with the specified `InputStream`. This JsonParser will allow non-numeric numbers."
  syntax:
    content: "public static JsonParser getJsonParser(InputStream inStream)"
    parameters:
    - id: "inStream"
      type: "java.io.InputStream"
      description: "The <code>InputStream</code> to use to create the <code>JsonGenerator</code> instance."
    return:
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "A <code>JsonGenerator</code> instance."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.getJsonParser(java.lang.String)"
  id: "getJsonParser(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getJsonParser(String jsonString)"
  nameWithType: "Utility.getJsonParser(String jsonString)"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonParser(String jsonString)"
  overload: "com.microsoft.azure.storage.core.Utility.getJsonParser*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a `JsonParser` with the specified `String`. This JsonParser will allow non-numeric numbers."
  syntax:
    content: "public static JsonParser getJsonParser(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "The <code>String</code> to use to create the <code>JsonGenerator</code> instance."
    return:
      type: "com.fasterxml.jackson.core.JsonParser"
      description: "A <code>JsonGenerator</code> instance."
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.getListingLocationMode(com.microsoft.azure.storage.ResultContinuation)"
  id: "getListingLocationMode(com.microsoft.azure.storage.ResultContinuation)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getListingLocationMode(ResultContinuation token)"
  nameWithType: "Utility.getListingLocationMode(ResultContinuation token)"
  fullName: "com.microsoft.azure.storage.core.Utility.getListingLocationMode(ResultContinuation token)"
  overload: "com.microsoft.azure.storage.core.Utility.getListingLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Determines which location can the listing command target by looking at the continuation token."
  syntax:
    content: "public static RequestLocationMode getListingLocationMode(ResultContinuation token)"
    parameters:
    - id: "token"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "Continuation token"
    return:
      type: "com.microsoft.azure.storage.core.RequestLocationMode"
      description: "Location mode"
- uid: "com.microsoft.azure.storage.core.Utility.getRemainingTimeout(java.lang.Long,java.lang.Integer)"
  id: "getRemainingTimeout(java.lang.Long,java.lang.Integer)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getRemainingTimeout(Long operationExpiryTimeInMs, Integer timeoutIntervalInMs)"
  nameWithType: "Utility.getRemainingTimeout(Long operationExpiryTimeInMs, Integer timeoutIntervalInMs)"
  fullName: "com.microsoft.azure.storage.core.Utility.getRemainingTimeout(Long operationExpiryTimeInMs, Integer timeoutIntervalInMs)"
  overload: "com.microsoft.azure.storage.core.Utility.getRemainingTimeout*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value representing the remaining time before the operation expires."
  syntax:
    content: "public static int getRemainingTimeout(Long operationExpiryTimeInMs, Integer timeoutIntervalInMs)"
    parameters:
    - id: "operationExpiryTimeInMs"
      type: "java.lang.Long"
      description: "the time the request expires"
    - id: "timeoutIntervalInMs"
      type: "java.lang.Integer"
      description: "the server side timeout interval"
    return:
      type: "int"
      description: "the remaining time before the operation expires"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "wraps a TimeoutException if there is no more time remaining"
- uid: "com.microsoft.azure.storage.core.Utility.getSAXParser()"
  id: "getSAXParser()"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getSAXParser()"
  nameWithType: "Utility.getSAXParser()"
  fullName: "com.microsoft.azure.storage.core.Utility.getSAXParser()"
  overload: "com.microsoft.azure.storage.core.Utility.getSAXParser*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a namespace aware `SAXParser`."
  syntax:
    content: "public static SAXParser getSAXParser()"
    return:
      type: "javax.xml.parsers.SAXParser"
      description: "A <code>SAXParser</code> instance which is namespace aware"
  exceptions:
  - type: "javax.xml.parsers.ParserConfigurationException"
  - type: "org.xml.sax.SAXException"
- uid: "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue(java.net.HttpURLConnection,java.lang.String)"
  id: "getStandardHeaderValue(java.net.HttpURLConnection,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getStandardHeaderValue(HttpURLConnection conn, String headerName)"
  nameWithType: "Utility.getStandardHeaderValue(HttpURLConnection conn, String headerName)"
  fullName: "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue(HttpURLConnection conn, String headerName)"
  overload: "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns the standard header value from the specified connection request, or an empty string if no header value has been specified for the request."
  syntax:
    content: "public static String getStandardHeaderValue(HttpURLConnection conn, String headerName)"
    parameters:
    - id: "conn"
      type: "java.net.HttpURLConnection"
      description: "An <code>HttpURLConnection</code> object that represents the request."
    - id: "headerName"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the header being requested."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the header value, or <code>null</code> if there is no corresponding\n         header value for <code>headerName</code>."
- uid: "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty(java.util.Date)"
  id: "getUTCTimeOrEmpty(java.util.Date)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "getUTCTimeOrEmpty(Date value)"
  nameWithType: "Utility.getUTCTimeOrEmpty(Date value)"
  fullName: "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty(Date value)"
  overload: "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns the UTC date/time for the specified value using the ISO8601 pattern."
  syntax:
    content: "public static String getUTCTimeOrEmpty(Date value)"
    parameters:
    - id: "value"
      type: "java.util.Date"
      description: "A <code>Date</code> object that represents the date to convert to UTC date/time in the ISO8601\n            pattern. If this value is <code>null</code>, this method returns an empty string."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the UTC date/time for the specified value using the ISO8601\n         pattern, or an empty string if <code>value</code> is <code>null</code>."
- uid: "com.microsoft.azure.storage.core.Utility.initIOException(java.lang.Exception)"
  id: "initIOException(java.lang.Exception)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "initIOException(Exception ex)"
  nameWithType: "Utility.initIOException(Exception ex)"
  fullName: "com.microsoft.azure.storage.core.Utility.initIOException(Exception ex)"
  overload: "com.microsoft.azure.storage.core.Utility.initIOException*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Creates an instance of the `IOException` class using the specified exception."
  syntax:
    content: "public static IOException initIOException(Exception ex)"
    parameters:
    - id: "ex"
      type: "java.lang.Exception"
      description: "An <code>Exception</code> object that represents the exception used to create the IO exception."
    return:
      type: "java.io.IOException"
      description: "A <code>java.io.IOException</code> object that represents the created IO exception."
- uid: "com.microsoft.azure.storage.core.Utility.isNullOrEmpty(java.lang.String)"
  id: "isNullOrEmpty(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "isNullOrEmpty(String value)"
  nameWithType: "Utility.isNullOrEmpty(String value)"
  fullName: "com.microsoft.azure.storage.core.Utility.isNullOrEmpty(String value)"
  overload: "com.microsoft.azure.storage.core.Utility.isNullOrEmpty*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value that indicates whether the specified string is `null` or empty."
  syntax:
    content: "public static boolean isNullOrEmpty(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> being examined for <code>null</code> or empty."
    return:
      type: "boolean"
      description: "<code>true</code> if the specified value is <code>null</code> or empty; otherwise, <code>false</code>"
- uid: "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace(java.lang.String)"
  id: "isNullOrEmptyOrWhitespace(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "isNullOrEmptyOrWhitespace(String value)"
  nameWithType: "Utility.isNullOrEmptyOrWhitespace(String value)"
  fullName: "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace(String value)"
  overload: "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value that indicates whether the specified string is `null`, empty, or whitespace."
  syntax:
    content: "public static boolean isNullOrEmptyOrWhitespace(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> being examined for <code>null</code>, empty, or whitespace."
    return:
      type: "boolean"
      description: "<code>true</code> if the specified value is <code>null</code>, empty, or whitespace; otherwise,\n         <code>false</code>"
- uid: "com.microsoft.azure.storage.core.Utility.logHttpError(com.microsoft.azure.storage.StorageException,com.microsoft.azure.storage.OperationContext)"
  id: "logHttpError(com.microsoft.azure.storage.StorageException,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "logHttpError(StorageException ex, OperationContext opContext)"
  nameWithType: "Utility.logHttpError(StorageException ex, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpError(StorageException ex, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.core.Utility.logHttpError*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Serializes the parsed StorageException. If an exception is encountered, returns empty string."
  syntax:
    content: "public static void logHttpError(StorageException ex, OperationContext opContext)"
    parameters:
    - id: "ex"
      type: "com.microsoft.azure.storage.StorageException"
      description: "The StorageException to serialize."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "The operation context which provides the logger."
- uid: "com.microsoft.azure.storage.core.Utility.logHttpRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  id: "logHttpRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "logHttpRequest(HttpURLConnection conn, OperationContext opContext)"
  nameWithType: "Utility.logHttpRequest(HttpURLConnection conn, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpRequest(HttpURLConnection conn, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.core.Utility.logHttpRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Logs the HttpURLConnection request. If an exception is encountered, logs nothing."
  syntax:
    content: "public static void logHttpRequest(HttpURLConnection conn, OperationContext opContext)"
    parameters:
    - id: "conn"
      type: "java.net.HttpURLConnection"
      description: "The HttpURLConnection to serialize."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "The operation context which provides the logger."
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.logHttpResponse(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  id: "logHttpResponse(java.net.HttpURLConnection,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "logHttpResponse(HttpURLConnection conn, OperationContext opContext)"
  nameWithType: "Utility.logHttpResponse(HttpURLConnection conn, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpResponse(HttpURLConnection conn, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.core.Utility.logHttpResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Logs the HttpURLConnection response. If an exception is encountered, logs nothing."
  syntax:
    content: "public static void logHttpResponse(HttpURLConnection conn, OperationContext opContext)"
    parameters:
    - id: "conn"
      type: "java.net.HttpURLConnection"
      description: "The HttpURLConnection to serialize."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "The operation context which provides the logger."
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.Utility.parseAccountString(java.lang.String)"
  id: "parseAccountString(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "parseAccountString(String parseString)"
  nameWithType: "Utility.parseAccountString(String parseString)"
  fullName: "com.microsoft.azure.storage.core.Utility.parseAccountString(String parseString)"
  overload: "com.microsoft.azure.storage.core.Utility.parseAccountString*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Parses a connection string and returns its values as a hash map of key/value pairs."
  syntax:
    content: "public static HashMap<String,String> parseAccountString(String parseString)"
    parameters:
    - id: "parseString"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the connection string to parse."
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the hash map of the key / value pairs parsed from\n         the connection string."
- uid: "com.microsoft.azure.storage.core.Utility.parseDate(java.lang.String)"
  id: "parseDate(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "parseDate(String dateString)"
  nameWithType: "Utility.parseDate(String dateString)"
  fullName: "com.microsoft.azure.storage.core.Utility.parseDate(String dateString)"
  overload: "com.microsoft.azure.storage.core.Utility.parseDate*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Given a String representing a date in a form of the ISO8601 pattern, generates a Date representing it with up to millisecond precision."
  syntax:
    content: "public static Date parseDate(String dateString)"
    parameters:
    - id: "dateString"
      type: "java.lang.String"
      description: "the <code>String</code> to be interpreted as a <code>Date</code>"
    return:
      type: "java.util.Date"
      description: "the corresponding <code>Date</code> object"
- uid: "com.microsoft.azure.storage.core.Utility.parseDate(java.lang.String,boolean)"
  id: "parseDate(java.lang.String,boolean)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "parseDate(String dateString, boolean dateBackwardCompatibility)"
  nameWithType: "Utility.parseDate(String dateString, boolean dateBackwardCompatibility)"
  fullName: "com.microsoft.azure.storage.core.Utility.parseDate(String dateString, boolean dateBackwardCompatibility)"
  overload: "com.microsoft.azure.storage.core.Utility.parseDate*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Given a String representing a date in a form of the ISO8601 pattern, generates a Date representing it with up to millisecond precision. Use <xref uid=\"com.microsoft.azure.storage.core.Utility.parseDate(java.lang.String)\" data-throw-if-not-resolved=\"false\">#parseDate(String)</xref> instead unless `dateBackwardCompatibility` is needed.\n\nSee [here][] for more details.\n\n\n[here]: http://go.microsoft.com/fwlink/?LinkId=523753"
  syntax:
    content: "public static Date parseDate(String dateString, boolean dateBackwardCompatibility)"
    parameters:
    - id: "dateString"
      type: "java.lang.String"
      description: "the <code>String</code> to be interpreted as a <code>Date</code>"
    - id: "dateBackwardCompatibility"
      type: "boolean"
      description: "<code>true</code> to correct Date values that may have been written\n              using versions of this library prior to 2.0.0; otherwise, <code>false</code>"
    return:
      type: "java.util.Date"
      description: "the corresponding <code>Date</code> object"
- uid: "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT(java.lang.String)"
  id: "parseRFC1123DateFromStringInGMT(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "parseRFC1123DateFromStringInGMT(String value)"
  nameWithType: "Utility.parseRFC1123DateFromStringInGMT(String value)"
  fullName: "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT(String value)"
  overload: "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a GMT date for the specified string in the RFC1123 pattern."
  syntax:
    content: "public static Date parseRFC1123DateFromStringInGMT(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the string to parse."
    return:
      type: "java.util.Date"
      description: "A <code>Date</code> object that represents the GMT date in the RFC1123 pattern."
  exceptions:
  - type: "java.text.ParseException"
    description: "If the specified string is invalid."
- uid: "com.microsoft.azure.storage.core.Utility.safeDecode(java.lang.String)"
  id: "safeDecode(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "safeDecode(String stringToDecode)"
  nameWithType: "Utility.safeDecode(String stringToDecode)"
  fullName: "com.microsoft.azure.storage.core.Utility.safeDecode(String stringToDecode)"
  overload: "com.microsoft.azure.storage.core.Utility.safeDecode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Performs safe decoding of the specified string, taking care to preserve each `+` character, rather than replacing it with a space character."
  syntax:
    content: "public static String safeDecode(String stringToDecode)"
    parameters:
    - id: "stringToDecode"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the string to decode."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the decoded string."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.core.Utility.safeEncode(java.lang.String)"
  id: "safeEncode(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "safeEncode(String stringToEncode)"
  nameWithType: "Utility.safeEncode(String stringToEncode)"
  fullName: "com.microsoft.azure.storage.core.Utility.safeEncode(String stringToEncode)"
  overload: "com.microsoft.azure.storage.core.Utility.safeEncode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Performs safe encoding of the specified string, taking care to insert `%20` for each space character, instead of inserting the `+` character."
  syntax:
    content: "public static String safeEncode(String stringToEncode)"
    parameters:
    - id: "stringToEncode"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the string to encode."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the encoded string."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.core.Utility.safeRelativize(java.net.URI,java.net.URI)"
  id: "safeRelativize(java.net.URI,java.net.URI)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "safeRelativize(URI baseURI, URI toUri)"
  nameWithType: "Utility.safeRelativize(URI baseURI, URI toUri)"
  fullName: "com.microsoft.azure.storage.core.Utility.safeRelativize(URI baseURI, URI toUri)"
  overload: "com.microsoft.azure.storage.core.Utility.safeRelativize*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Determines the relative difference between the two specified URIs."
  syntax:
    content: "public static String safeRelativize(URI baseURI, URI toUri)"
    parameters:
    - id: "baseURI"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the base URI for which <code>toUri</code> will be\n            made relative."
    - id: "toUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the URI to make relative to <code>baseURI</code>."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that either represents the relative URI of <code>toUri</code> to\n         <code>baseURI</code>, or the URI of <code>toUri</code> itself, depending on whether the hostname and\n         scheme are identical for <code>toUri</code> and <code>baseURI</code>. If the hostname and scheme of\n         <code>baseURI</code> and <code>toUri</code> are identical, this method returns an unencoded relative URI\n         such that if appended to <code>baseURI</code>, it will yield <code>toUri</code>. If the hostname or\n         scheme of <code>baseURI</code> and <code>toUri</code> are not identical, this method returns an unencoded\n         full URI specified by <code>toUri</code>."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If <code>baseURI</code> or <code>toUri</code> is invalid."
- uid: "com.microsoft.azure.storage.core.Utility.splitOnPattern(byte[],byte[])"
  id: "splitOnPattern(byte[],byte[])"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "splitOnPattern(byte[] array, byte[] pattern)"
  nameWithType: "Utility.splitOnPattern(byte[] array, byte[] pattern)"
  fullName: "com.microsoft.azure.storage.core.Utility.splitOnPattern(byte[] array, byte[] pattern)"
  overload: "com.microsoft.azure.storage.core.Utility.splitOnPattern*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public static List<byte[]> splitOnPattern(byte[] array, byte[] pattern)"
    parameters:
    - id: "array"
      type: "byte[]"
    - id: "pattern"
      type: "byte[]"
    return:
      type: "java.util.List<byte[]>"
- uid: "com.microsoft.azure.storage.core.Utility.stringJoin(java.lang.CharSequence,java.lang.Iterable<java.lang.String>)"
  id: "stringJoin(java.lang.CharSequence,java.lang.Iterable<java.lang.String>)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "stringJoin(CharSequence delimiter, Iterable<String> strings)"
  nameWithType: "Utility.stringJoin(CharSequence delimiter, Iterable<String> strings)"
  fullName: "com.microsoft.azure.storage.core.Utility.stringJoin(CharSequence delimiter, Iterable<String> strings)"
  overload: "com.microsoft.azure.storage.core.Utility.stringJoin*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Equivalent of String.join() in Java 8."
  syntax:
    content: "public static String stringJoin(CharSequence delimiter, Iterable<String> strings)"
    parameters:
    - id: "delimiter"
      type: "java.lang.CharSequence"
      description: "Characters to join strings with."
    - id: "strings"
      type: "java.lang.Iterable<java.lang.String>"
      description: "Strings to join."
    return:
      type: "java.lang.String"
      description: "The joined string."
- uid: "com.microsoft.azure.storage.core.Utility.stringJoin(java.lang.CharSequence,java.lang.String...)"
  id: "stringJoin(java.lang.CharSequence,java.lang.String...)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "stringJoin(CharSequence delimiter, String[] strings)"
  nameWithType: "Utility.stringJoin(CharSequence delimiter, String[] strings)"
  fullName: "com.microsoft.azure.storage.core.Utility.stringJoin(CharSequence delimiter, String[] strings)"
  overload: "com.microsoft.azure.storage.core.Utility.stringJoin*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Equivalent of String.join() in Java 8."
  syntax:
    content: "public static String stringJoin(CharSequence delimiter, String[] strings)"
    parameters:
    - id: "delimiter"
      type: "java.lang.CharSequence"
      description: "Characters to join strings with."
    - id: "strings"
      type: "java.lang.String[]"
      description: "Strings to join."
    return:
      type: "java.lang.String"
      description: "The joined string."
- uid: "com.microsoft.azure.storage.core.Utility.trimEnd(java.lang.String,char)"
  id: "trimEnd(java.lang.String,char)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "trimEnd(String value, char trimChar)"
  nameWithType: "Utility.trimEnd(String value, char trimChar)"
  fullName: "com.microsoft.azure.storage.core.Utility.trimEnd(String value, char trimChar)"
  overload: "com.microsoft.azure.storage.core.Utility.trimEnd*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Trims the specified character from the end of a string."
  syntax:
    content: "protected static String trimEnd(String value, char trimChar)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the string to trim."
    - id: "trimChar"
      type: "char"
      description: "The character to trim from the end of the string."
    return:
      type: "java.lang.String"
      description: "The string with the specified character trimmed from the end."
- uid: "com.microsoft.azure.storage.core.Utility.trimStart(java.lang.String)"
  id: "trimStart(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "trimStart(String value)"
  nameWithType: "Utility.trimStart(String value)"
  fullName: "com.microsoft.azure.storage.core.Utility.trimStart(String value)"
  overload: "com.microsoft.azure.storage.core.Utility.trimStart*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Trims whitespace from the beginning of a string."
  syntax:
    content: "public static String trimStart(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the string to trim."
    return:
      type: "java.lang.String"
      description: "The string with whitespace trimmed from the beginning."
- uid: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(java.lang.Long)"
  id: "validateMaxExecutionTimeout(java.lang.Long)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "validateMaxExecutionTimeout(Long operationExpiryTimeInMs)"
  nameWithType: "Utility.validateMaxExecutionTimeout(Long operationExpiryTimeInMs)"
  fullName: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(Long operationExpiryTimeInMs)"
  overload: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value representing whether the maximum execution time would be surpassed."
  syntax:
    content: "public static boolean validateMaxExecutionTimeout(Long operationExpiryTimeInMs)"
    parameters:
    - id: "operationExpiryTimeInMs"
      type: "java.lang.Long"
      description: "the time the request expires"
    return:
      type: "boolean"
      description: "<code>true</code> if the maximum execution time would be surpassed; otherwise, <code>false</code>."
- uid: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(java.lang.Long,long)"
  id: "validateMaxExecutionTimeout(java.lang.Long,long)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "validateMaxExecutionTimeout(Long operationExpiryTimeInMs, long additionalInterval)"
  nameWithType: "Utility.validateMaxExecutionTimeout(Long operationExpiryTimeInMs, long additionalInterval)"
  fullName: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout(Long operationExpiryTimeInMs, long additionalInterval)"
  overload: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns a value representing whether the maximum execution time would be surpassed."
  syntax:
    content: "public static boolean validateMaxExecutionTimeout(Long operationExpiryTimeInMs, long additionalInterval)"
    parameters:
    - id: "operationExpiryTimeInMs"
      type: "java.lang.Long"
      description: "the time the request expires"
    - id: "additionalInterval"
      type: "long"
      description: "any additional time required from now"
    return:
      type: "boolean"
      description: "<code>true</code> if the maximum execution time would be surpassed; otherwise, <code>false</code>."
- uid: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions)"
  id: "writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options)"
  nameWithType: "Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options)"
  fullName: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options)"
  overload: "com.microsoft.azure.storage.core.Utility.writeToOutputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reads data from an input stream and writes it to an output stream, calculates the length of the data written, and optionally calculates the MD5 hash for the data."
  syntax:
    content: "public static StreamMd5AndLength writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> object that represents the input stream to use as the source."
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code>OutputStream</code> object that represents the output stream to use as the destination."
    - id: "writeLength"
      type: "long"
      description: "The number of bytes to read from the stream."
    - id: "rewindSourceStream"
      type: "boolean"
      description: "<code>true</code> if the input stream should be rewound <strong>before</strong> it is read; otherwise,\n            <code>false</code>"
    - id: "calculateMD5"
      type: "boolean"
      description: "<code>true</code> if an MD5 hash will be calculated; otherwise, <code>false</code>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.RequestOptions\" data-throw-if-not-resolved=\"false\">RequestOptions</xref> object that specifies any additional options for the request. Namely, the\n            maximum execution time."
    return:
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "A <xref uid=\"com.microsoft.azure.storage.core.StreamMd5AndLength\" data-throw-if-not-resolved=\"false\">StreamMd5AndLength</xref> object that contains the output stream length, and optionally the MD5 hash."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean)"
  id: "writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush)"
  nameWithType: "Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush)"
  fullName: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush)"
  overload: "com.microsoft.azure.storage.core.Utility.writeToOutputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reads data from an input stream and writes it to an output stream, calculates the length of the data written, and optionally calculates the MD5 hash for the data."
  syntax:
    content: "public static StreamMd5AndLength writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> object that represents the input stream to use as the source."
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code>OutputStream</code> object that represents the output stream to use as the destination."
    - id: "writeLength"
      type: "long"
      description: "The number of bytes to read from the stream."
    - id: "rewindSourceStream"
      type: "boolean"
      description: "<code>true</code> if the input stream should be rewound <strong>before</strong> it is read; otherwise,\n            <code>false</code>"
    - id: "calculateMD5"
      type: "boolean"
      description: "<code>true</code> if an MD5 hash will be calculated; otherwise, <code>false</code>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.RequestOptions\" data-throw-if-not-resolved=\"false\">RequestOptions</xref> object that specifies any additional options for the request. Namely, the\n            maximum execution time."
    - id: "shouldFlush"
      type: "java.lang.Boolean"
    return:
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "A <xref uid=\"com.microsoft.azure.storage.core.StreamMd5AndLength\" data-throw-if-not-resolved=\"false\">StreamMd5AndLength</xref> object that contains the output stream length, and optionally the MD5 hash."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean,com.microsoft.azure.storage.core.StorageRequest<?,?,java.lang.Integer>,com.microsoft.azure.storage.core.StreamMd5AndLength)"
  id: "writeToOutputStream(java.io.InputStream,java.io.OutputStream,long,boolean,boolean,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.RequestOptions,java.lang.Boolean,com.microsoft.azure.storage.core.StorageRequest<?,?,java.lang.Integer>,com.microsoft.azure.storage.core.StreamMd5AndLength)"
  parent: "com.microsoft.azure.storage.core.Utility"
  langs:
  - "java"
  name: "writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush, StorageRequest<?,?,Integer> request, StreamMd5AndLength descriptor)"
  nameWithType: "Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush, StorageRequest<?,?,Integer> request, StreamMd5AndLength descriptor)"
  fullName: "com.microsoft.azure.storage.core.Utility.writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush, StorageRequest<?,?,Integer> request, StreamMd5AndLength descriptor)"
  overload: "com.microsoft.azure.storage.core.Utility.writeToOutputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Reads data from an input stream and writes it to an output stream, calculates the length of the data written, and optionally calculates the MD5 hash for the data."
  syntax:
    content: "public static StreamMd5AndLength writeToOutputStream(InputStream sourceStream, OutputStream outStream, long writeLength, boolean rewindSourceStream, boolean calculateMD5, OperationContext opContext, RequestOptions options, Boolean shouldFlush, StorageRequest<?,?,Integer> request, StreamMd5AndLength descriptor)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> object that represents the input stream to use as the source."
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code>OutputStream</code> object that represents the output stream to use as the destination."
    - id: "writeLength"
      type: "long"
      description: "The number of bytes to read from the stream."
    - id: "rewindSourceStream"
      type: "boolean"
      description: "<code>true</code> if the input stream should be rewound <strong>before</strong> it is read; otherwise,\n            <code>false</code>"
    - id: "calculateMD5"
      type: "boolean"
      description: "<code>true</code> if an MD5 hash will be calculated; otherwise, <code>false</code>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.RequestOptions\" data-throw-if-not-resolved=\"false\">RequestOptions</xref> object that specifies any additional options for the request. Namely, the\n            maximum execution time."
    - id: "shouldFlush"
      type: "java.lang.Boolean"
    - id: "request"
      type: "com.microsoft.azure.storage.core.StorageRequest<?,?,java.lang.Integer>"
      description: "Used by download resume to set currentRequestByteCount on the request. Otherwise, null is always used."
    - id: "descriptor"
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "A <xref uid=\"com.microsoft.azure.storage.core.StreamMd5AndLength\" data-throw-if-not-resolved=\"false\">StreamMd5AndLength</xref> object to append to in the case of recovery action or null if this is not called\n                from a recovery. This value needs to be passed for recovery in case part of the body has already been read,\n                the recovery will attempt to download the remaining bytes but will do MD5 validation on the originally\n                requested range size."
    return:
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "A <xref uid=\"com.microsoft.azure.storage.core.StreamMd5AndLength\" data-throw-if-not-resolved=\"false\">StreamMd5AndLength</xref> object that contains the output stream length, and optionally the MD5 hash."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurs."
references:
- uid: "com.microsoft.azure.storage.core.Utility.Utility*"
  name: "Utility"
  nameWithType: "Utility.Utility"
  fullName: "com.microsoft.azure.storage.core.Utility.Utility"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.core.StreamMd5AndLength"
  name: "StreamMd5AndLength"
  nameWithType: "StreamMd5AndLength"
  fullName: "com.microsoft.azure.storage.core.StreamMd5AndLength"
- uid: "com.microsoft.azure.storage.core.Utility.analyzeStream*"
  name: "analyzeStream"
  nameWithType: "Utility.analyzeStream"
  fullName: "com.microsoft.azure.storage.core.Utility.analyzeStream"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.ByteArrayOutputStream"
  spec.java:
  - uid: "java.io.ByteArrayOutputStream"
    name: "ByteArrayOutputStream"
    fullName: "java.io.ByteArrayOutputStream"
- uid: "javax.crypto.Cipher"
  spec.java:
  - uid: "javax.crypto.Cipher"
    name: "Cipher"
    fullName: "javax.crypto.Cipher"
- uid: "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold*"
  name: "encryptStreamIfUnderThreshold"
  nameWithType: "Utility.encryptStreamIfUnderThreshold"
  fullName: "com.microsoft.azure.storage.core.Utility.encryptStreamIfUnderThreshold"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.ResultContinuation"
  name: "ResultContinuation"
  nameWithType: "ResultContinuation"
  fullName: "com.microsoft.azure.storage.ResultContinuation"
- uid: "com.microsoft.azure.storage.ResultContinuationType"
  name: "ResultContinuationType"
  nameWithType: "ResultContinuationType"
  fullName: "com.microsoft.azure.storage.ResultContinuationType"
- uid: "com.microsoft.azure.storage.core.Utility.assertContinuationType*"
  name: "assertContinuationType"
  nameWithType: "Utility.assertContinuationType"
  fullName: "com.microsoft.azure.storage.core.Utility.assertContinuationType"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.storage.core.Utility.assertNotNull*"
  name: "assertNotNull"
  nameWithType: "Utility.assertNotNull"
  fullName: "com.microsoft.azure.storage.core.Utility.assertNotNull"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty*"
  name: "assertNotNullOrEmpty"
  nameWithType: "Utility.assertNotNullOrEmpty"
  fullName: "com.microsoft.azure.storage.core.Utility.assertNotNullOrEmpty"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.assertInBounds*"
  name: "assertInBounds"
  nameWithType: "Utility.assertInBounds"
  fullName: "com.microsoft.azure.storage.core.Utility.assertInBounds"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual*"
  name: "assertGreaterThanOrEqual"
  nameWithType: "Utility.assertGreaterThanOrEqual"
  fullName: "com.microsoft.azure.storage.core.Utility.assertGreaterThanOrEqual"
  package: "com.microsoft.azure.storage.core"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.storage.core.Utility.binaryAppend*"
  name: "binaryAppend"
  nameWithType: "Utility.binaryAppend"
  fullName: "com.microsoft.azure.storage.core.Utility.binaryAppend"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout*"
  name: "validateMaxExecutionTimeout"
  nameWithType: "Utility.validateMaxExecutionTimeout"
  fullName: "com.microsoft.azure.storage.core.Utility.validateMaxExecutionTimeout"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.core.Utility.getRemainingTimeout*"
  name: "getRemainingTimeout"
  nameWithType: "Utility.getRemainingTimeout"
  fullName: "com.microsoft.azure.storage.core.Utility.getRemainingTimeout"
  package: "com.microsoft.azure.storage.core"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri*"
  name: "determinePathStyleFromUri"
  nameWithType: "Utility.determinePathStyleFromUri"
  fullName: "com.microsoft.azure.storage.core.Utility.determinePathStyleFromUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.formatETag*"
  name: "formatETag"
  nameWithType: "Utility.formatETag"
  fullName: "com.microsoft.azure.storage.core.Utility.formatETag"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException*"
  name: "generateNewUnexpectedStorageException"
  nameWithType: "Utility.generateNewUnexpectedStorageException"
  fullName: "com.microsoft.azure.storage.core.Utility.generateNewUnexpectedStorageException"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.getGMTTime*"
  name: "getGMTTime"
  nameWithType: "Utility.getGMTTime"
  fullName: "com.microsoft.azure.storage.core.Utility.getGMTTime"
  package: "com.microsoft.azure.storage.core"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time*"
  name: "getJavaISO8601Time"
  nameWithType: "Utility.getJavaISO8601Time"
  fullName: "com.microsoft.azure.storage.core.Utility.getJavaISO8601Time"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.StringWriter"
  spec.java:
  - uid: "java.io.StringWriter"
    name: "StringWriter"
    fullName: "java.io.StringWriter"
- uid: "com.fasterxml.jackson.core.JsonGenerator"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonGenerator"
    name: "JsonGenerator"
    fullName: "com.fasterxml.jackson.core.JsonGenerator"
- uid: "com.microsoft.azure.storage.core.Utility.getJsonGenerator*"
  name: "getJsonGenerator"
  nameWithType: "Utility.getJsonGenerator"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonGenerator"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.OutputStream"
  spec.java:
  - uid: "java.io.OutputStream"
    name: "OutputStream"
    fullName: "java.io.OutputStream"
- uid: "com.fasterxml.jackson.core.JsonParseException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParseException"
    name: "JsonParseException"
    fullName: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.fasterxml.jackson.core.JsonParser"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParser"
    name: "JsonParser"
    fullName: "com.fasterxml.jackson.core.JsonParser"
- uid: "com.microsoft.azure.storage.core.Utility.getJsonParser*"
  name: "getJsonParser"
  nameWithType: "Utility.getJsonParser"
  fullName: "com.microsoft.azure.storage.core.Utility.getJsonParser"
  package: "com.microsoft.azure.storage.core"
- uid: "javax.xml.parsers.ParserConfigurationException"
  spec.java:
  - uid: "javax.xml.parsers.ParserConfigurationException"
    name: "ParserConfigurationException"
    fullName: "javax.xml.parsers.ParserConfigurationException"
- uid: "org.xml.sax.SAXException"
  spec.java:
  - uid: "org.xml.sax.SAXException"
    name: "SAXException"
    fullName: "org.xml.sax.SAXException"
- uid: "javax.xml.parsers.SAXParser"
  spec.java:
  - uid: "javax.xml.parsers.SAXParser"
    name: "SAXParser"
    fullName: "javax.xml.parsers.SAXParser"
- uid: "com.microsoft.azure.storage.core.Utility.getSAXParser*"
  name: "getSAXParser"
  nameWithType: "Utility.getSAXParser"
  fullName: "com.microsoft.azure.storage.core.Utility.getSAXParser"
  package: "com.microsoft.azure.storage.core"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue*"
  name: "getStandardHeaderValue"
  nameWithType: "Utility.getStandardHeaderValue"
  fullName: "com.microsoft.azure.storage.core.Utility.getStandardHeaderValue"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty*"
  name: "getUTCTimeOrEmpty"
  nameWithType: "Utility.getUTCTimeOrEmpty"
  fullName: "com.microsoft.azure.storage.core.Utility.getUTCTimeOrEmpty"
  package: "com.microsoft.azure.storage.core"
- uid: "javax.xml.stream.XMLStreamException"
  spec.java:
  - uid: "javax.xml.stream.XMLStreamException"
    name: "XMLStreamException"
    fullName: "javax.xml.stream.XMLStreamException"
- uid: "javax.xml.stream.XMLStreamWriter"
  spec.java:
  - uid: "javax.xml.stream.XMLStreamWriter"
    name: "XMLStreamWriter"
    fullName: "javax.xml.stream.XMLStreamWriter"
- uid: "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter*"
  name: "createXMLStreamWriter"
  nameWithType: "Utility.createXMLStreamWriter"
  fullName: "com.microsoft.azure.storage.core.Utility.createXMLStreamWriter"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.initIOException*"
  name: "initIOException"
  nameWithType: "Utility.initIOException"
  fullName: "com.microsoft.azure.storage.core.Utility.initIOException"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.isNullOrEmpty*"
  name: "isNullOrEmpty"
  nameWithType: "Utility.isNullOrEmpty"
  fullName: "com.microsoft.azure.storage.core.Utility.isNullOrEmpty"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace*"
  name: "isNullOrEmptyOrWhitespace"
  nameWithType: "Utility.isNullOrEmptyOrWhitespace"
  fullName: "com.microsoft.azure.storage.core.Utility.isNullOrEmptyOrWhitespace"
  package: "com.microsoft.azure.storage.core"
- uid: "java.util.HashMap<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.core.Utility.parseAccountString*"
  name: "parseAccountString"
  nameWithType: "Utility.parseAccountString"
  fullName: "com.microsoft.azure.storage.core.Utility.parseAccountString"
  package: "com.microsoft.azure.storage.core"
- uid: "java.text.ParseException"
  spec.java:
  - uid: "java.text.ParseException"
    name: "ParseException"
    fullName: "java.text.ParseException"
- uid: "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT*"
  name: "parseRFC1123DateFromStringInGMT"
  nameWithType: "Utility.parseRFC1123DateFromStringInGMT"
  fullName: "com.microsoft.azure.storage.core.Utility.parseRFC1123DateFromStringInGMT"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.safeDecode*"
  name: "safeDecode"
  nameWithType: "Utility.safeDecode"
  fullName: "com.microsoft.azure.storage.core.Utility.safeDecode"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.safeEncode*"
  name: "safeEncode"
  nameWithType: "Utility.safeEncode"
  fullName: "com.microsoft.azure.storage.core.Utility.safeEncode"
  package: "com.microsoft.azure.storage.core"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.Utility.safeRelativize*"
  name: "safeRelativize"
  nameWithType: "Utility.safeRelativize"
  fullName: "com.microsoft.azure.storage.core.Utility.safeRelativize"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.core.Utility.logHttpError*"
  name: "logHttpError"
  nameWithType: "Utility.logHttpError"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpError"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.logHttpRequest*"
  name: "logHttpRequest"
  nameWithType: "Utility.logHttpRequest"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.logHttpResponse*"
  name: "logHttpResponse"
  nameWithType: "Utility.logHttpResponse"
  fullName: "com.microsoft.azure.storage.core.Utility.logHttpResponse"
  package: "com.microsoft.azure.storage.core"
- uid: "char"
  spec.java:
  - uid: "char"
    name: "char"
    fullName: "char"
- uid: "com.microsoft.azure.storage.core.Utility.trimEnd*"
  name: "trimEnd"
  nameWithType: "Utility.trimEnd"
  fullName: "com.microsoft.azure.storage.core.Utility.trimEnd"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.trimStart*"
  name: "trimStart"
  nameWithType: "Utility.trimStart"
  fullName: "com.microsoft.azure.storage.core.Utility.trimStart"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
- uid: "com.microsoft.azure.storage.core.Utility.writeToOutputStream*"
  name: "writeToOutputStream"
  nameWithType: "Utility.writeToOutputStream"
  fullName: "com.microsoft.azure.storage.core.Utility.writeToOutputStream"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.storage.core.StorageRequest<?,?,java.lang.Integer>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ","
    fullName: ","
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ","
    fullName: ","
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.core.Utility.checkNullaryCtor*"
  name: "checkNullaryCtor"
  nameWithType: "Utility.checkNullaryCtor"
  fullName: "com.microsoft.azure.storage.core.Utility.checkNullaryCtor"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.parseDate*"
  name: "parseDate"
  nameWithType: "Utility.parseDate"
  fullName: "com.microsoft.azure.storage.core.Utility.parseDate"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.RequestLocationMode"
  name: "RequestLocationMode"
  nameWithType: "RequestLocationMode"
  fullName: "com.microsoft.azure.storage.core.RequestLocationMode"
- uid: "com.microsoft.azure.storage.core.Utility.getListingLocationMode*"
  name: "getListingLocationMode"
  nameWithType: "Utility.getListingLocationMode"
  fullName: "com.microsoft.azure.storage.core.Utility.getListingLocationMode"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.CharSequence"
  spec.java:
  - uid: "java.lang.CharSequence"
    name: "CharSequence"
    fullName: "java.lang.CharSequence"
- uid: "java.lang.String[]"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.storage.core.Utility.stringJoin*"
  name: "stringJoin"
  nameWithType: "Utility.stringJoin"
  fullName: "com.microsoft.azure.storage.core.Utility.stringJoin"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Iterable<java.lang.String>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.util.List<byte[]>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.core.Utility.splitOnPattern*"
  name: "splitOnPattern"
  nameWithType: "Utility.splitOnPattern"
  fullName: "com.microsoft.azure.storage.core.Utility.splitOnPattern"
  package: "com.microsoft.azure.storage.core"
- uid: "java.util.List<java.lang.Integer>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences*"
  name: "findAllPatternOccurences"
  nameWithType: "Utility.findAllPatternOccurences"
  fullName: "com.microsoft.azure.storage.core.Utility.findAllPatternOccurences"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.Utility.findPattern*"
  name: "findPattern"
  nameWithType: "Utility.findPattern"
  fullName: "com.microsoft.azure.storage.core.Utility.findPattern"
  package: "com.microsoft.azure.storage.core"
- uid: "java.util.TimeZone"
  spec.java:
  - uid: "java.util.TimeZone"
    name: "TimeZone"
    fullName: "java.util.TimeZone"
- uid: "java.util.Locale"
  spec.java:
  - uid: "java.util.Locale"
    name: "Locale"
    fullName: "java.util.Locale"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.microsoft.azure.storage.core.StorageRequest"
  name: "StorageRequest"
  nameWithType: "StorageRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest"
- uid: "?,?,java.lang.Integer"
  name: "?,?,Integer"
  nameWithType: "?,?,Integer"
  fullName: "?,?,java.lang.Integer"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
