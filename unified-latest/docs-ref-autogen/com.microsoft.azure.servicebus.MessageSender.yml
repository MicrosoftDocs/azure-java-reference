### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.MessageSender"
  id: "MessageSender"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.MessageSender.MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  - "com.microsoft.azure.servicebus.MessageSender.MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  - "com.microsoft.azure.servicebus.MessageSender.MessageSender(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings)"
  - "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage(long)"
  - "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync(long)"
  - "com.microsoft.azure.servicebus.MessageSender.getEntityPath()"
  - "com.microsoft.azure.servicebus.MessageSender.getInternalSender()"
  - "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory()"
  - "com.microsoft.azure.servicebus.MessageSender.initializeAsync()"
  - "com.microsoft.azure.servicebus.MessageSender.onClose()"
  - "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  - "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  - "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageSender.send(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageSender.send(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageSender.sendAsync(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageSender.sendAsync(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageSender.sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageSender.sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  langs:
  - "java"
  name: "MessageSender"
  nameWithType: "MessageSender"
  fullName: "com.microsoft.azure.servicebus.MessageSender"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "final class MessageSender extends InitializableEntity implements IMessageSender"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity"
  - "com.microsoft.azure.servicebus.InitializableEntity"
  implements:
  - "com.microsoft.azure.servicebus.IMessageSender"
  inheritedMembers:
  - "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender()"
  id: "MessageSender()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "MessageSender()"
  nameWithType: "MessageSender.MessageSender()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender()"
  overload: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "private MessageSender()"
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  id: "MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "MessageSender(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  nameWithType: "MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
  overload: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageSender(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType)"
    parameters:
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  id: "MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType)"
  nameWithType: "MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType)"
  overload: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType)"
    parameters:
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "transferDestinationPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,boolean)"
  id: "MessageSender(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,boolean)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType, boolean ownsMessagingFactory)"
  nameWithType: "MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType, boolean ownsMessagingFactory)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType, boolean ownsMessagingFactory)"
  overload: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "private MessageSender(MessagingFactory messagingFactory, String entityPath, String transferDestinationPath, MessagingEntityType entityType, boolean ownsMessagingFactory)"
    parameters:
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "transferDestinationPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "ownsMessagingFactory"
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings)"
  id: "MessageSender(java.net.URI,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "MessageSender(URI namespaceEndpointURI, String entityPath, String transferDestinationPath, MessagingEntityType entityType, ClientSettings clientSettings)"
  nameWithType: "MessageSender.MessageSender(URI namespaceEndpointURI, String entityPath, String transferDestinationPath, MessagingEntityType entityType, ClientSettings clientSettings)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender(URI namespaceEndpointURI, String entityPath, String transferDestinationPath, MessagingEntityType entityType, ClientSettings clientSettings)"
  overload: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageSender(URI namespaceEndpointURI, String entityPath, String transferDestinationPath, MessagingEntityType entityType, ClientSettings clientSettings)"
    parameters:
    - id: "namespaceEndpointURI"
      type: "java.net.URI"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "transferDestinationPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "clientSettings"
      type: "com.microsoft.azure.servicebus.ClientSettings"
- uid: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage(long)"
  id: "cancelScheduledMessage(long)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "cancelScheduledMessage(long sequenceNumber)"
  nameWithType: "MessageSender.cancelScheduledMessage(long sequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage(long sequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void cancelScheduledMessage(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync(long)"
  id: "cancelScheduledMessageAsync(long)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "cancelScheduledMessageAsync(long sequenceNumber)"
  nameWithType: "MessageSender.cancelScheduledMessageAsync(long sequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync(long sequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.getEntityPath()"
  id: "getEntityPath()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "getEntityPath()"
  nameWithType: "MessageSender.getEntityPath()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getEntityPath()"
  overload: "com.microsoft.azure.servicebus.MessageSender.getEntityPath*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public String getEntityPath()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.MessageSender.getInternalSender()"
  id: "getInternalSender()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "getInternalSender()"
  nameWithType: "MessageSender.getInternalSender()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getInternalSender()"
  overload: "com.microsoft.azure.servicebus.MessageSender.getInternalSender*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " CoreMessageSender getInternalSender()"
    return:
      type: "com.microsoft.azure.servicebus.primitives.CoreMessageSender"
- uid: "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory()"
  id: "getMessagingFactory()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "getMessagingFactory()"
  nameWithType: "MessageSender.getMessagingFactory()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory()"
  overload: "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessagingFactory getMessagingFactory()"
    return:
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "com.microsoft.azure.servicebus.MessageSender.initializeAsync()"
  id: "initializeAsync()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "initializeAsync()"
  nameWithType: "MessageSender.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.initializeAsync()"
  overload: "com.microsoft.azure.servicebus.MessageSender.initializeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "synchronized CompletableFuture<Void> initializeAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.onClose()"
  id: "onClose()"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "onClose()"
  nameWithType: "MessageSender.onClose()"
  fullName: "com.microsoft.azure.servicebus.MessageSender.onClose()"
  overload: "com.microsoft.azure.servicebus.MessageSender.onClose*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected CompletableFuture<Void> onClose()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  id: "scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  nameWithType: "MessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
  overload: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "scheduledEnqueueTimeUtc"
      type: "java.time.Instant"
    return:
      type: "long"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  id: "scheduleMessage(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  nameWithType: "MessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "scheduledEnqueueTimeUtc"
      type: "java.time.Instant"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "long"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  id: "scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)"
  nameWithType: "MessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)"
  overload: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "scheduledEnqueueTimeUtc"
      type: "java.time.Instant"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Long>"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  id: "scheduleMessageAsync(com.microsoft.azure.servicebus.IMessage,java.time.Instant,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  nameWithType: "MessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc, TransactionContext transaction)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "scheduledEnqueueTimeUtc"
      type: "java.time.Instant"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Long>"
- uid: "com.microsoft.azure.servicebus.MessageSender.send(com.microsoft.azure.servicebus.IMessage)"
  id: "send(com.microsoft.azure.servicebus.IMessage)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "send(IMessage message)"
  nameWithType: "MessageSender.send(IMessage message)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.send(IMessage message)"
  overload: "com.microsoft.azure.servicebus.MessageSender.send*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void send(IMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.send(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  id: "send(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "send(IMessage message, TransactionContext transaction)"
  nameWithType: "MessageSender.send(IMessage message, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.send(IMessage message, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.send*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void send(IMessage message, TransactionContext transaction)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendAsync(com.microsoft.azure.servicebus.IMessage)"
  id: "sendAsync(com.microsoft.azure.servicebus.IMessage)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendAsync(IMessage message)"
  nameWithType: "MessageSender.sendAsync(IMessage message)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendAsync(IMessage message)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> sendAsync(IMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendAsync(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  id: "sendAsync(com.microsoft.azure.servicebus.IMessage,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendAsync(IMessage message, TransactionContext transaction)"
  nameWithType: "MessageSender.sendAsync(IMessage message, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendAsync(IMessage message, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> sendAsync(IMessage message, TransactionContext transaction)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendBatch(Collection<? extends IMessage> message)"
  nameWithType: "MessageSender.sendBatch(Collection<? extends IMessage> message)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatch(Collection<? extends IMessage> message)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void sendBatch(Collection<? extends IMessage> message)"
    parameters:
    - id: "message"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "sendBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendBatch(Collection<? extends IMessage> message, TransactionContext transaction)"
  nameWithType: "MessageSender.sendBatch(Collection<? extends IMessage> message, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatch(Collection<? extends IMessage> message, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void sendBatch(Collection<? extends IMessage> message, TransactionContext transaction)"
    parameters:
    - id: "message"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendBatchAsync(Collection<? extends IMessage> messages)"
  nameWithType: "MessageSender.sendBatchAsync(Collection<? extends IMessage> messages)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(Collection<? extends IMessage> messages)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "sendBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageSender"
  langs:
  - "java"
  name: "sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)"
  nameWithType: "MessageSender.sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
references:
- uid: "com.microsoft.azure.servicebus.MessageSender.MessageSender*"
  name: "MessageSender"
  nameWithType: "MessageSender.MessageSender"
  fullName: "com.microsoft.azure.servicebus.MessageSender.MessageSender"
  package: "com.microsoft.azure.servicebus"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "com.microsoft.azure.servicebus.ClientSettings"
  name: "ClientSettings"
  nameWithType: "ClientSettings"
  fullName: "com.microsoft.azure.servicebus.ClientSettings"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
  name: "MessagingFactory"
  nameWithType: "MessagingFactory"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.util.concurrent.CompletableFuture<java.lang.Void>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageSender.initializeAsync*"
  name: "initializeAsync"
  nameWithType: "MessageSender.initializeAsync"
  fullName: "com.microsoft.azure.servicebus.MessageSender.initializeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.primitives.CoreMessageSender"
  name: "CoreMessageSender"
  nameWithType: "CoreMessageSender"
  fullName: "com.microsoft.azure.servicebus.primitives.CoreMessageSender"
- uid: "com.microsoft.azure.servicebus.MessageSender.getInternalSender*"
  name: "getInternalSender"
  nameWithType: "MessageSender.getInternalSender"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getInternalSender"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  name: "ServiceBusException"
  nameWithType: "ServiceBusException"
  fullName: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.IMessage"
  name: "IMessage"
  nameWithType: "IMessage"
  fullName: "com.microsoft.azure.servicebus.IMessage"
- uid: "com.microsoft.azure.servicebus.MessageSender.send*"
  name: "send"
  nameWithType: "MessageSender.send"
  fullName: "com.microsoft.azure.servicebus.MessageSender.send"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.TransactionContext"
  name: "TransactionContext"
  nameWithType: "TransactionContext"
  fullName: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "? extends com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatch*"
  name: "sendBatch"
  nameWithType: "MessageSender.sendBatch"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatch"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendAsync*"
  name: "sendAsync"
  nameWithType: "MessageSender.sendAsync"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync*"
  name: "sendBatchAsync"
  nameWithType: "MessageSender.sendBatchAsync"
  fullName: "com.microsoft.azure.servicebus.MessageSender.sendBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.onClose*"
  name: "onClose"
  nameWithType: "MessageSender.onClose"
  fullName: "com.microsoft.azure.servicebus.MessageSender.onClose"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.getEntityPath*"
  name: "getEntityPath"
  nameWithType: "MessageSender.getEntityPath"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getEntityPath"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "java.util.concurrent.CompletableFuture<java.lang.Long>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync*"
  name: "scheduleMessageAsync"
  nameWithType: "MessageSender.scheduleMessageAsync"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessageAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync*"
  name: "cancelScheduledMessageAsync"
  nameWithType: "MessageSender.cancelScheduledMessageAsync"
  fullName: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessageAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage*"
  name: "scheduleMessage"
  nameWithType: "MessageSender.scheduleMessage"
  fullName: "com.microsoft.azure.servicebus.MessageSender.scheduleMessage"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage*"
  name: "cancelScheduledMessage"
  nameWithType: "MessageSender.cancelScheduledMessage"
  fullName: "com.microsoft.azure.servicebus.MessageSender.cancelScheduledMessage"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory*"
  name: "getMessagingFactory"
  nameWithType: "MessageSender.getMessagingFactory"
  fullName: "com.microsoft.azure.servicebus.MessageSender.getMessagingFactory"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.InitializableEntity"
  name: "InitializableEntity"
  nameWithType: "InitializableEntity"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity"
- uid: "com.microsoft.azure.servicebus.IMessageSender"
  name: "IMessageSender"
  nameWithType: "IMessageSender"
  fullName: "com.microsoft.azure.servicebus.IMessageSender"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  name: "ClientEntity.setClosed()"
  nameWithType: "ClientEntity.setClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  name: "ClientEntity.finalize()"
  nameWithType: "ClientEntity.finalize()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  name: "ClientEntity.setClosing()"
  nameWithType: "ClientEntity.setClosing()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  name: "ClientEntity.throwIfClosed(Throwable)"
  nameWithType: "ClientEntity.throwIfClosed(Throwable)"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  name: "ClientEntity.close()"
  nameWithType: "ClientEntity.close()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  name: "ClientEntity.closeAsync()"
  nameWithType: "ClientEntity.closeAsync()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- uid: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  name: "InitializableEntity.initializeAsync()"
  nameWithType: "InitializableEntity.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  name: "ClientEntity.onClose()"
  nameWithType: "ClientEntity.onClose()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  name: "ClientEntity.getIsClosed()"
  nameWithType: "ClientEntity.getIsClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  name: "ClientEntity.getIsClosingOrClosed()"
  nameWithType: "ClientEntity.getIsClosingOrClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  name: "ClientEntity.getClientId()"
  nameWithType: "ClientEntity.getClientId()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "? extends com.microsoft.azure.servicebus.IMessage"
  name: "? extends IMessage"
  nameWithType: "? extends IMessage"
  fullName: "? extends com.microsoft.azure.servicebus.IMessage"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
