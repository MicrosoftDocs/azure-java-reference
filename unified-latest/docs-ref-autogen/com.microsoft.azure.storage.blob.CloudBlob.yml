### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.CloudBlob"
  id: "CloudBlob"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  - "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.BlobType,com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.BlobType,java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.CloudBlob)"
  - "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
  - "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient"
  - "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.delete()"
  - "com.microsoft.azure.storage.blob.CloudBlob.delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleted"
  - "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream)"
  - "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.exists()"
  - "com.microsoft.azure.storage.blob.CloudBlob.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getName()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.metadata"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.parent"
  - "com.microsoft.azure.storage.blob.CloudBlob.properties"
  - "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.snapshotID"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes"
  - "com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes"
  - "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
  - "com.microsoft.azure.storage.blob.CloudBlob.undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long)"
  - "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudBlob"
  nameWithType: "CloudBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents a Microsoft Azure blob. This is the base class for the <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> and <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> classes."
  syntax:
    content: "public abstract class CloudBlob implements ListBlobItem"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.azure.storage.blob.ListBlobItem"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  id: "<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "<T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R> request, BlobRequestOptions options, boolean upload)"
  nameWithType: "CloudBlob.<T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R> request, BlobRequestOptions options, boolean upload)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R> request, BlobRequestOptions options, boolean upload)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If the request options contain a CPK, validate the associated response headers."
  syntax:
    content: "protected static void <T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R> request, BlobRequestOptions options, boolean upload)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>"
      description: "The storage request to check the response of."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "The blob options used on the request."
    - id: "upload"
      type: "boolean"
      description: "Whether this was an upload or if we're just retrieving data."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "Throws if CPK was used in the request and the response failed validation."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.BlobType,com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlob(com.microsoft.azure.storage.blob.BlobType,com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "CloudBlob(BlobType type, StorageUri uri, String snapshotID, StorageCredentials credentials)"
  nameWithType: "CloudBlob.CloudBlob(BlobType type, StorageUri uri, String snapshotID, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(BlobType type, StorageUri uri, String snapshotID, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlob` class using the specified URI, snapshot ID, and cloud blob client."
  syntax:
    content: "protected CloudBlob(BlobType type, StorageUri uri, String snapshotID, StorageCredentials credentials)"
    parameters:
    - id: "type"
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobType\" data-throw-if-not-resolved=\"false\">BlobType</xref> value which represents the type of the blob."
    - id: "uri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the URI to the blob, beginning with the container name."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.BlobType,java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  id: "CloudBlob(com.microsoft.azure.storage.blob.BlobType,java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "CloudBlob(BlobType type, String blobName, String snapshotID, CloudBlobContainer container)"
  nameWithType: "CloudBlob.CloudBlob(BlobType type, String blobName, String snapshotID, CloudBlobContainer container)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(BlobType type, String blobName, String snapshotID, CloudBlobContainer container)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlob` class using the specified type, name, snapshot ID, and container."
  syntax:
    content: "protected CloudBlob(BlobType type, String blobName, String snapshotID, CloudBlobContainer container)"
    parameters:
    - id: "type"
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobType\" data-throw-if-not-resolved=\"false\">BlobType</xref> value which represents the type of the blob."
    - id: "blobName"
      type: "java.lang.String"
      description: "Name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "container"
      type: "com.microsoft.azure.storage.blob.CloudBlobContainer"
      description: "The reference to the parent container."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(com.microsoft.azure.storage.blob.CloudBlob)"
  id: "CloudBlob(com.microsoft.azure.storage.blob.CloudBlob)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "CloudBlob(CloudBlob otherBlob)"
  nameWithType: "CloudBlob.CloudBlob(CloudBlob otherBlob)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob(CloudBlob otherBlob)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlob` class by copying values from another blob."
  syntax:
    content: "protected CloudBlob(CloudBlob otherBlob)"
    parameters:
    - id: "otherBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <code>CloudBlob</code> object that represents the blob to copy."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String)"
  id: "abortCopy(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "abortCopy(String copyId)"
  nameWithType: "CloudBlob.abortCopy(String copyId)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(String copyId)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Aborts an ongoing blob copy operation."
  syntax:
    content: "public final void abortCopy(String copyId)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "A <code>String</code> object that identifying the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "abortCopy(String copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.abortCopy(String copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(String copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Aborts an ongoing blob copy operation."
  syntax:
    content: "public final void abortCopy(String copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "A <code>String</code> object that identifying the copy operation."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
  id: "acquireLease()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "acquireLease()"
  nameWithType: "CloudBlob.acquireLease()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new infinite lease on the blob."
  syntax:
    content: "public final String acquireLease()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String)"
  id: "acquireLease(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  nameWithType: "CloudBlob.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new lease on the blob with the specified lease time and proposed lease ID."
  syntax:
    content: "public final String acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId)"
    parameters:
    - id: "leaseTimeInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds.\n            If null, an infinite lease will be acquired. If not null, the value must be greater than\n            zero."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Acquires a new lease on the blob with the specified lease time, proposed lease ID, request options, and operation context."
  syntax:
    content: "public final String acquireLease(Integer leaseTimeInSeconds, String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "leaseTimeInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the span of time for which to acquire the lease, in seconds.\n            If null, an infinite lease will be acquired. If not null, the value must be greater than\n            zero."
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
  id: "assertCorrectBlobType()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "assertCorrectBlobType()"
  nameWithType: "CloudBlob.assertCorrectBlobType()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Asserts that the blob has the correct blob type specified in the blob attributes."
  syntax:
    content: "protected final void assertCorrectBlobType()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an incorrect blob type is used."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
  id: "assertNoWriteOperationForSnapshot()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "assertNoWriteOperationForSnapshot()"
  nameWithType: "CloudBlob.assertNoWriteOperationForSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Asserts that write operation is not done for snapshot."
  syntax:
    content: "protected void assertNoWriteOperationForSnapshot()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient"
  id: "blobServiceClient"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "blobServiceClient"
  nameWithType: "CloudBlob.blobServiceClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.blobServiceClient"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the blob client."
  syntax:
    content: "protected CloudBlobClient blobServiceClient"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobClient"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer)"
  id: "breakLease(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "breakLease(Integer breakPeriodInSeconds)"
  nameWithType: "CloudBlob.breakLease(Integer breakPeriodInSeconds)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(Integer breakPeriodInSeconds)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.breakLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Breaks the lease and ensures that another client cannot acquire a new lease until the current lease period has expired."
  syntax:
    content: "public final long breakLease(Integer breakPeriodInSeconds)"
    parameters:
    - id: "breakPeriodInSeconds"
      type: "java.lang.Integer"
      description: "Specifies the time to wait, in seconds, until the current lease is broken.\n            If null, the break period is the remainder of the current lease, or zero for infinite leases."
    return:
      type: "long"
      description: "An <code>long</code> which specifies the time, in seconds, remaining in the lease period."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.breakLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Breaks the existing lease, using the specified request options and operation context, and ensures that another client cannot acquire a new lease until the current lease period has expired."
  syntax:
    content: "public final long breakLease(Integer breakPeriodInSeconds, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "breakPeriodInSeconds"
      type: "java.lang.Integer"
      description: "An <code>Integer</code> which specifies the time to wait, in seconds, until the current lease is\n            broken.\n            If null, the break period is the remainder of the current lease, or zero for infinite leases."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "long"
      description: "An <code>long</code> which represents the time, in seconds, remaining in the lease period."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  id: "changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  nameWithType: "CloudBlob.changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(String proposedLeaseId, AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.changeLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Changes the existing lease ID to the proposed lease ID."
  syntax:
    content: "public final String changeLease(String proposedLeaseId, AccessCondition accessCondition)"
    parameters:
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the new lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.changeLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Changes the existing lease ID to the proposed lease Id with the specified access conditions, request options, and operation context."
  syntax:
    content: "public final String changeLease(String proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "proposedLeaseId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the proposed lease ID for the new lease,\n            or null if no lease ID is proposed."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The lease ID is\n            required to be set with an access condition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. The context\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the new lease ID."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
  id: "createSnapshot()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "createSnapshot()"
  nameWithType: "CloudBlob.createSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates a snapshot of the blob."
  syntax:
    content: "public final CloudBlob createSnapshot()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <code>CloudBlob</code> object that represents the snapshot of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "createSnapshot(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.createSnapshot(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates a snapshot of the blob using the specified request options and operation context."
  syntax:
    content: "public final CloudBlob createSnapshot(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <code>CloudBlob</code> object that represents the snapshot of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates a snapshot of the blob using the specified request options and operation context."
  syntax:
    content: "public final CloudBlob createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A collection of name-value pairs defining the metadata of the snapshot, or null."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlob"
      description: "A <code>CloudBlob</code> object that represents the snapshot of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.delete()"
  id: "delete()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CloudBlob.delete()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.delete()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the blob. If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection."
  syntax:
    content: "public final void delete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "delete(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.delete(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.delete(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the blob using the specified snapshot and request options, and operation context. If a delete retention policy is enabled on the service, the blob will be retained for a specified period of time, before being removed permanently by garbage collection.\n\nA blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY</xref> or <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the `deleteSnapshotsOption` parameter to specify how the snapshots should be handled when the blob is deleted."
  syntax:
    content: "public final void delete(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "deleteSnapshotsOption"
      type: "com.microsoft.azure.storage.blob.DeleteSnapshotsOption"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the blob\n            and its snapshots."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
  id: "deleteIfExists()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "deleteIfExists()"
  nameWithType: "CloudBlob.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the blob if it exists.\n\nA blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY</xref> or <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the `deleteSnapshotsOption` parameter to specify how the snapshots should be handled when the blob is deleted."
  syntax:
    content: "public final boolean deleteIfExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the blob was deleted; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "deleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.deleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Deletes the blob if it exists, using the specified snapshot and request options, and operation context.\n\nA blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY</xref> or <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the `deleteSnapshotsOption` parameter to specify how the snapshots should be handled when the blob is deleted."
  syntax:
    content: "public final boolean deleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "deleteSnapshotsOption"
      type: "com.microsoft.azure.storage.blob.DeleteSnapshotsOption"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.DeleteSnapshotsOption\" data-throw-if-not-resolved=\"false\">DeleteSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the blob\n            and its snapshots."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the blob existed and was deleted; otherwise, <code>false</code>"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  id: "deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "deleteImpl(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options)"
  nameWithType: "CloudBlob.deleteImpl(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: " StorageRequest<CloudBlobClient,CloudBlob,Void> deleteImpl(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options)"
    parameters:
    - id: "deleteSnapshotsOption"
      type: "com.microsoft.azure.storage.blob.DeleteSnapshotsOption"
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
    return:
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.Void>"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleted"
  id: "deleted"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "deleted"
  nameWithType: "CloudBlob.deleted"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleted"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Indicates whether the blob is being retained by the service after being deleted."
  syntax:
    content: " boolean deleted"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream)"
  id: "download(java.io.OutputStream)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "download(OutputStream outStream)"
  nameWithType: "CloudBlob.download(OutputStream outStream)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.download(OutputStream outStream)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.download*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the contents of a blob to a stream."
  syntax:
    content: "public final void download(OutputStream outStream)"
    parameters:
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code><xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\">OutputStream</xref></code> object that represents the target stream."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "download(OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.download(OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.download(OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.download*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the contents of a blob to a stream using the specified request options and operation context."
  syntax:
    content: "public final void download(OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code>OutputStream</code> object that represents the target stream."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
  id: "downloadAccountInfo()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadAccountInfo()"
  nameWithType: "CloudBlob.downloadAccountInfo()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets information related to the storage account in which this blob resides."
  syntax:
    content: "public AccountInformation downloadAccountInfo()"
    return:
      type: "com.microsoft.azure.storage.AccountInformation"
      description: "A <xref uid=\"com.microsoft.azure.storage.AccountInformation\" data-throw-if-not-resolved=\"false\">AccountInformation</xref> object for the given storage account."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets information related to the storage account in which this blob resides."
  syntax:
    content: "public AccountInformation downloadAccountInfo(BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.AccountInformation"
      description: "A <xref uid=\"com.microsoft.azure.storage.AccountInformation\" data-throw-if-not-resolved=\"false\">AccountInformation</xref> object for the given storage account."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  id: "downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadAccountInformationImpl(RequestOptions options)"
  nameWithType: "CloudBlob.downloadAccountInformationImpl(RequestOptions options)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(RequestOptions options)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "protected StorageRequest<ServiceClient,CloudBlob,AccountInformation> downloadAccountInformationImpl(RequestOptions options)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
    return:
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlob,com.microsoft.azure.storage.AccountInformation>"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
  id: "downloadAttributes()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadAttributes()"
  nameWithType: "CloudBlob.downloadAttributes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Populates a blob's properties and metadata.\n\nThis method populates the blob's system properties and user-defined metadata. Before reading or modifying a blob's properties or metadata, call this method or its overload to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void downloadAttributes()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Populates a blob's properties and metadata using the specified request options and operation context.\n\nThis method populates the blob's system properties and user-defined metadata. Before reading or modifying a blob's properties or metadata, call this method or its overload to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void downloadAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream)"
  id: "downloadRange(long,java.lang.Long,java.io.OutputStream)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadRange(long offset, Long length, OutputStream outStream)"
  nameWithType: "CloudBlob.downloadRange(long offset, Long length, OutputStream outStream)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long offset, Long length, OutputStream outStream)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the contents of a blob to a stream."
  syntax:
    content: "public final void downloadRange(long offset, Long length, OutputStream outStream)"
    parameters:
    - id: "offset"
      type: "long"
      description: "A <code>long</code> which represents the offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to read or <code>null</code>."
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code><xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\">OutputStream</xref></code> object that represents the target stream."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadRange(long offset, Long length, OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadRange(long offset, Long length, OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long offset, Long length, OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the contents of a blob to a stream using the specified request options and operation context."
  syntax:
    content: "public final void downloadRange(long offset, Long length, OutputStream outStream, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "offset"
      type: "long"
      description: "A <code>long</code> which represents the offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to read or <code>null</code>."
    - id: "outStream"
      type: "java.io.OutputStream"
      description: "An <code><xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\">OutputStream</xref></code> object that represents the target stream."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadRangeInternal(long blobOffset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadRangeInternal(long blobOffset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long blobOffset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a range of bytes from the blob to the given byte buffer."
  syntax:
    content: "protected final int downloadRangeInternal(long blobOffset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blobOffset"
      type: "long"
      description: "A <code>long</code> which represents the offset within the blob to begin downloading."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to read."
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the buffer to write to."
    - id: "bufferOffset"
      type: "int"
      description: "An <code>int</code> which represents the offset in the byte buffer to begin writing."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object used to track the execution of the operation."
    return:
      type: "int"
      description: "The total number of bytes read into the buffer."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "an exception representing any error which occurred during the operation."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
  id: "downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset)"
  nameWithType: "CloudBlob.downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a range of bytes from the blob to the given byte buffer."
  syntax:
    content: "public final int downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset)"
    parameters:
    - id: "offset"
      type: "long"
      description: "A <code>long</code> which represents the byte offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to read or null."
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded."
    - id: "bufferOffset"
      type: "int"
      description: "An <code>int</code> which represents the byte offset to use as the starting point for the target."
    return:
      type: "int"
      description: "The total number of bytes read into the buffer."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a range of bytes from the blob to the given byte buffer, using the specified request options and operation context."
  syntax:
    content: "public final int downloadRangeToByteArray(long offset, Long length, byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "offset"
      type: "long"
      description: "A <code>long</code> which represents the byte offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to read or <code>null</code>."
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded."
    - id: "bufferOffset"
      type: "int"
      description: "An <code>int</code> which represents the byte offset to use as the starting point for the target."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "int"
      description: "The total number of bytes read into the buffer."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int)"
  id: "downloadToByteArray(byte[],int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadToByteArray(byte[] buffer, int bufferOffset)"
  nameWithType: "CloudBlob.downloadToByteArray(byte[] buffer, int bufferOffset)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[] buffer, int bufferOffset)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a range of bytes from the blob to the given byte buffer."
  syntax:
    content: "public final int downloadToByteArray(byte[] buffer, int bufferOffset)"
    parameters:
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded."
    - id: "bufferOffset"
      type: "int"
      description: "An <code>int</code> which represents the byte offset to use as the starting point for the target."
    return:
      type: "int"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadToByteArray(byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadToByteArray(byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a range of bytes from the blob to the given byte buffer, using the specified request options and operation context."
  syntax:
    content: "public final int downloadToByteArray(byte[] buffer, int bufferOffset, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the buffer to which the blob bytes are downloaded."
    - id: "bufferOffset"
      type: "int"
      description: "A <code>long</code> which represents the byte offset to use as the starting point for the target."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "int"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String)"
  id: "downloadToFile(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadToFile(String path)"
  nameWithType: "CloudBlob.downloadToFile(String path)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(String path)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a blob, storing the contents in a file."
  syntax:
    content: "public void downloadToFile(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the path to the file that will be created with the contents of\n            the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "downloadToFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.downloadToFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a blob, storing the contents in a file."
  syntax:
    content: "public void downloadToFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the path to the file that will be created with the contents of\n            the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.exists()"
  id: "exists()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "exists()"
  nameWithType: "CloudBlob.exists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.exists()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Checks to see if the blob exists."
  syntax:
    content: "public final boolean exists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the blob exists, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Checks to see if the blob exists, using the specified request options and operation context."
  syntax:
    content: "public final boolean exists(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the blob exists, other wise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access\n            signature."
    - id: "headers"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobHeaders"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.SharedAccessBlobHeaders\" data-throw-if-not-resolved=\"false\">SharedAccessBlobHeaders</xref></code> object that represents the optional header values to\n            set for a blob accessed with this shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the container-level access policy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the shared access signature."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If the credentials are invalid or the blob is a snapshot."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If the credentials are invalid or the blob is a snapshot."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.SharedAccessPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessPolicy</xref></code> object that represents the access policy for the shared\n            access signature."
    - id: "headers"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobHeaders"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.SharedAccessBlobHeaders\" data-throw-if-not-resolved=\"false\">SharedAccessBlobHeaders</xref></code> object that represents the optional header values to\n            set for a blob accessed with this shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the container-level access policy."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the shared access signature."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If the credentials are invalid or the blob is a snapshot."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If the credentials are invalid or the blob is a snapshot."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature for the blob using the specified group policy identifier and operation context. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessBlobPolicy policy, String groupPolicyIdentifier)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "A <code>SharedAccessPolicy</code> object that represents the access policy for the shared access\n            signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the container-level access policy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the shared access signature."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If the credentials are invalid or the blob is a snapshot."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If the credentials are invalid or the blob is a snapshot."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
  id: "generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)"
  nameWithType: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature based on a user delegation key for the blob using the specified group policy identifier and operation context. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy)"
    parameters:
    - id: "delegationKey"
      type: "com.microsoft.azure.storage.UserDelegationKey"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.UserDelegationKey\" data-throw-if-not-resolved=\"false\">UserDelegationKey</xref></code> representing the key used to sign this signature."
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.SharedAccessPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessPolicy</xref></code> object that represents the access policy for the shared\n            access signature."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the shared access signature."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns a shared access signature based on a user delegation key for the blob using the specified group policy identifier and operation context. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateUserDelegationSharedAccessSignature(UserDelegationKey delegationKey, SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "delegationKey"
      type: "com.microsoft.azure.storage.UserDelegationKey"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.UserDelegationKey\" data-throw-if-not-resolved=\"false\">UserDelegationKey</xref></code> representing the key used to sign this signature."
    - id: "policy"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.SharedAccessPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessPolicy</xref></code> object that represents the access policy for the shared\n            access signature."
    - id: "headers"
      type: "com.microsoft.azure.storage.blob.SharedAccessBlobHeaders"
      description: "A <code><xref uid=\"com.microsoft.azure.storage.blob.SharedAccessBlobHeaders\" data-throw-if-not-resolved=\"false\">SharedAccessBlobHeaders</xref></code> object that represents the optional header values to\n            set for a blob accessed with this shared access signature."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the shared access signature."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean)"
  id: "getCanonicalName(boolean)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getCanonicalName(boolean ignoreSnapshotTime)"
  nameWithType: "CloudBlob.getCanonicalName(boolean ignoreSnapshotTime)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean ignoreSnapshotTime)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the canonical name of the blob in the format of */<service-name>/<account-name>/<container-name>/<blob-name>*.\n\nThis format is used for Shared Access operations."
  syntax:
    content: " String getCanonicalName(boolean ignoreSnapshotTime)"
    parameters:
    - id: "ignoreSnapshotTime"
      type: "boolean"
      description: "<code>true</code> if the snapshot time is ignored; otherwise, <code>false</code>."
    return:
      type: "java.lang.String"
      description: "The canonical name in the format of <i>/&lt;service-name&gt;/&lt;account-name&gt;\n         /&lt;container-name&gt;/&lt;blob-name&gt;</i>."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
  id: "getContainer()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getContainer()"
  nameWithType: "CloudBlob.getContainer()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getContainer*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the blob's container."
  syntax:
    content: "public final CloudBlobContainer getContainer()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobContainer"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> object that represents the container of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
  id: "getCopyState()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getCopyState()"
  nameWithType: "CloudBlob.getCopyState()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the blob's copy state."
  syntax:
    content: "public CopyState getCopyState()"
    return:
      type: "com.microsoft.azure.storage.blob.CopyState"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CopyState\" data-throw-if-not-resolved=\"false\">CopyState</xref> object that represents the copy state of the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
  id: "getMetadata()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "CloudBlob.getMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the metadata for the blob."
  syntax:
    content: "public final HashMap<String,String> getMetadata()"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata for the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getName()"
  id: "getName()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CloudBlob.getName()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getName()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getName*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the name of the blob."
  syntax:
    content: "public final String getName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
  id: "getParent()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getParent()"
  nameWithType: "CloudBlob.getParent()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getParent*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the blob item's parent."
  syntax:
    content: "public final CloudBlobDirectory getParent()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobDirectory\" data-throw-if-not-resolved=\"false\">CloudBlobDirectory</xref> object that represents the parent directory for the blob."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  id: "getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getParentNameFromURI(StorageUri resourceAddress, String delimiter, CloudBlobContainer container)"
  nameWithType: "CloudBlob.getParentNameFromURI(StorageUri resourceAddress, String delimiter, CloudBlobContainer container)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(StorageUri resourceAddress, String delimiter, CloudBlobContainer container)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Retrieves the parent name for a blob URI."
  syntax:
    content: "protected static String getParentNameFromURI(StorageUri resourceAddress, String delimiter, CloudBlobContainer container)"
    parameters:
    - id: "resourceAddress"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the resource URI."
    - id: "delimiter"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the directory delimiter to use."
    - id: "container"
      type: "com.microsoft.azure.storage.blob.CloudBlobContainer"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> object which represents the blob container."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the parent address for a blob URI."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
  id: "getProperties()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CloudBlob.getProperties()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the blob's properties."
  syntax:
    content: "public final BlobProperties getProperties()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobProperties\" data-throw-if-not-resolved=\"false\">BlobProperties</xref> object that represents the properties of the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
  id: "getQualifiedStorageUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getQualifiedStorageUri()"
  nameWithType: "CloudBlob.getQualifiedStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the snapshot and/or shared access signature qualified URI for this blob."
  syntax:
    content: "public final StorageUri getQualifiedStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the snapshot or shared access signature."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
  id: "getQualifiedUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getQualifiedUri()"
  nameWithType: "CloudBlob.getQualifiedUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the snapshot or shared access signature qualified URI for this blob."
  syntax:
    content: "public final URI getQualifiedUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the snapshot or shared access signature."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
  id: "getServiceClient()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getServiceClient()"
  nameWithType: "CloudBlob.getServiceClient()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the Blob service client associated with the blob."
  syntax:
    content: "public final CloudBlobClient getServiceClient()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object that represents the client."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
  id: "getSnapshotID()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getSnapshotID()"
  nameWithType: "CloudBlob.getSnapshotID()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the Blob Snapshot ID."
  syntax:
    content: "public final String getSnapshotID()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the Blob Snapshot ID."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
  id: "getSnapshotQualifiedStorageUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getSnapshotQualifiedStorageUri()"
  nameWithType: "CloudBlob.getSnapshotQualifiedStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot."
  syntax:
    content: "public final StorageUri getSnapshotQualifiedStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object containing the blob's URIs for both the primary and secondary locations, \n         including snapshot query information if the blob is a snapshot."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
  id: "getSnapshotQualifiedUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getSnapshotQualifiedUri()"
  nameWithType: "CloudBlob.getSnapshotQualifiedUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the absolute URI to the blob, including query string information if the blob is a snapshot."
  syntax:
    content: "public final URI getSnapshotQualifiedUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object specifying the absolute URI to the blob,\n         including snapshot query information if the blob is a snapshot."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "CloudBlob.getStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the list of URIs for all locations."
  syntax:
    content: "public final StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> that represents the list of URIs for all locations.."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
  id: "getStreamMinimumReadSizeInBytes()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getStreamMinimumReadSizeInBytes()"
  nameWithType: "CloudBlob.getStreamMinimumReadSizeInBytes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.blob.BlobInputStream\" data-throw-if-not-resolved=\"false\">BlobInputStream</xref>."
  syntax:
    content: "public final int getStreamMinimumReadSizeInBytes()"
    return:
      type: "int"
      description: "A <code>int</code> which represents the minimum read size, in bytes, when using a <xref uid=\"com.microsoft.azure.storage.blob.BlobInputStream\" data-throw-if-not-resolved=\"false\">BlobInputStream</xref>\n         object."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
  id: "getStreamWriteSizeInBytes()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getStreamWriteSizeInBytes()"
  nameWithType: "CloudBlob.getStreamWriteSizeInBytes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> (block and page blobs)."
  syntax:
    content: "public final int getStreamWriteSizeInBytes()"
    return:
      type: "int"
      description: "A <code>int</code> which represents the number of bytes to buffer or the size of a block, in bytes."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
  id: "getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getTransformedAddress(OperationContext opContext)"
  nameWithType: "CloudBlob.getTransformedAddress(OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the transformed URI for the resource if the given credentials require transformation."
  syntax:
    content: "protected final StorageUri getTransformedAddress(OperationContext opContext)"
    parameters:
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the transformed URI."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If the URI is not absolute."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If the URI is not absolute."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
  id: "getUri()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "getUri()"
  nameWithType: "CloudBlob.getUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the URI for this blob."
  syntax:
    content: "public final URI getUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the URI for the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
  id: "isSnapshot()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "isSnapshot()"
  nameWithType: "CloudBlob.isSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Indicates whether this blob is a snapshot."
  syntax:
    content: "public final boolean isSnapshot()"
    return:
      type: "boolean"
      description: "<code>true</code> if the blob is a snapshot, otherwise <code>false</code>."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.metadata"
  id: "metadata"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "metadata"
  nameWithType: "CloudBlob.metadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.metadata"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the metadata for the blob."
  syntax:
    content: " HashMap<String,String> metadata"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
  id: "openInputStream()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "openInputStream()"
  nameWithType: "CloudBlob.openInputStream()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Opens a blob input stream to download the blob.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)\" data-throw-if-not-resolved=\"false\">#setStreamMinimumReadSizeInBytes(int)</xref> to configure the read size."
  syntax:
    content: "public final BlobInputStream openInputStream()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "openInputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.openInputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Opens a blob input stream to download the blob using the specified request options and operation context.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)\" data-throw-if-not-resolved=\"false\">#setStreamMinimumReadSizeInBytes(int)</xref> to configure the read size."
  syntax:
    content: "public final BlobInputStream openInputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.BlobInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "openInputStream(long offset, Long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.openInputStream(long offset, Long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long offset, Long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Opens a blob input stream to download the blob using the specified request options and operation context.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)\" data-throw-if-not-resolved=\"false\">#setStreamMinimumReadSizeInBytes(int)</xref> to configure the read size."
  syntax:
    content: "public final BlobInputStream openInputStream(long offset, Long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "offset"
      type: "long"
      description: "A <code>long</code> which represents the offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">Long</xref> which represents the number of bytes to read or <code>null</code>."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.BlobInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.parent"
  id: "parent"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "parent"
  nameWithType: "CloudBlob.parent"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.parent"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the blob's directory."
  syntax:
    content: "protected CloudBlobDirectory parent"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.properties"
  id: "properties"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "properties"
  nameWithType: "CloudBlob.properties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.properties"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the properties of the blob."
  syntax:
    content: " BlobProperties properties"
    return:
      type: "com.microsoft.azure.storage.blob.BlobProperties"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  id: "releaseLease(com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "releaseLease(AccessCondition accessCondition)"
  nameWithType: "CloudBlob.releaseLease(AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Releases the lease on the blob."
  syntax:
    content: "public final void releaseLease(AccessCondition accessCondition)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The LeaseID is\n            required to be set on the AccessCondition."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Releases the lease on the blob using the specified request options and operation context."
  syntax:
    content: "public final void releaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob.The LeaseID is\n            required to be set on the AccessCondition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition)"
  id: "renewLease(com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "renewLease(AccessCondition accessCondition)"
  nameWithType: "CloudBlob.renewLease(AccessCondition accessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(AccessCondition accessCondition)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.renewLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Renews an existing lease."
  syntax:
    content: "public final void renewLease(AccessCondition accessCondition)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The LeaseID is\n            required to be set on the AccessCondition."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.renewLease*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Renews an existing lease using the specified request options and operation context."
  syntax:
    content: "public final void renewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob. The LeaseID is\n            required to be set on the AccessCondition."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
  id: "setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setContainer(CloudBlobContainer container)"
  nameWithType: "CloudBlob.setContainer(CloudBlobContainer container)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setContainer(CloudBlobContainer container)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setContainer*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the container for the blob."
  syntax:
    content: "protected final void setContainer(CloudBlobContainer container)"
    parameters:
    - id: "container"
      type: "com.microsoft.azure.storage.blob.CloudBlobContainer"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer\" data-throw-if-not-resolved=\"false\">CloudBlobContainer</xref> object that represents the container being assigned to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setMetadata(HashMap<String,String> metadata)"
  nameWithType: "CloudBlob.setMetadata(HashMap<String,String> metadata)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(HashMap<String,String> metadata)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the metadata for the blob."
  syntax:
    content: "public final void setMetadata(HashMap<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that contains the metadata being assigned to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  id: "setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setProperties(BlobProperties properties)"
  nameWithType: "CloudBlob.setProperties(BlobProperties properties)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setProperties(BlobProperties properties)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the properties for the blob."
  syntax:
    content: "protected final void setProperties(BlobProperties properties)"
    parameters:
    - id: "properties"
      type: "com.microsoft.azure.storage.blob.BlobProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobProperties\" data-throw-if-not-resolved=\"false\">BlobProperties</xref> object that represents the properties being assigned to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(java.lang.String)"
  id: "setSnapshotID(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setSnapshotID(String snapshotID)"
  nameWithType: "CloudBlob.setSnapshotID(String snapshotID)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(String snapshotID)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the blob snapshot ID."
  syntax:
    content: "protected final void setSnapshotID(String snapshotID)"
    parameters:
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot ID being assigned to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  id: "setStorageUri(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setStorageUri(StorageUri storageUri)"
  nameWithType: "CloudBlob.setStorageUri(StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the list of URIs for all locations."
  syntax:
    content: "protected void setStorageUri(StorageUri storageUri)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> that represents the list of URIs for all locations."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  id: "setStreamMinimumReadSizeInBytes(int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setStreamMinimumReadSizeInBytes(int minimumReadSize)"
  nameWithType: "CloudBlob.setStreamMinimumReadSizeInBytes(int minimumReadSize)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int minimumReadSize)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.blob.BlobInputStream\" data-throw-if-not-resolved=\"false\">BlobInputStream</xref>."
  syntax:
    content: "public void setStreamMinimumReadSizeInBytes(int minimumReadSize)"
    parameters:
    - id: "minimumReadSize"
      type: "int"
      description: "An <code>int</code> that represents the minimum block size, in bytes, for reading from a blob while\n            using a <xref uid=\"com.microsoft.azure.storage.blob.BlobInputStream\" data-throw-if-not-resolved=\"false\">BlobInputStream</xref> object. Must be greater than or equal to 16 KB."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)"
  id: "setStreamWriteSizeInBytes(int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  nameWithType: "CloudBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> (block and page blobs)."
  syntax:
    content: "public abstract void setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
    parameters:
    - id: "streamWriteSizeInBytes"
      type: "int"
      description: "An <code>int</code> that represents the number of bytes to buffer or the size of a block, in bytes."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.snapshotID"
  id: "snapshotID"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "snapshotID"
  nameWithType: "CloudBlob.snapshotID"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.snapshotID"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the snapshot ID."
  syntax:
    content: " String snapshotID"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI)"
  id: "startCopy(java.net.URI)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopy(URI source)"
  nameWithType: "CloudBlob.startCopy(URI source)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(URI source)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a URI's contents, properties, and metadata to a new blob."
  syntax:
    content: "public final String startCopy(URI source)"
    parameters:
    - id: "source"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> The source URI. URIs for resources outside of Azure\n            may only be copied into block blobs."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopy(URI source, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.startCopy(URI source, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(URI source, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified access conditions, lease ID, request options, and operation context."
  syntax:
    content: "public final String startCopy(URI source, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "source"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> The source URI.  URIs for resources outside of Azure\n            may only be copied into block blobs."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated\n            service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation.\n            This object is used to track requests to the storage service, and to provide additional\n            runtime information about the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, access conditions, lease ID, request options, and operation context.\n\nNote: Setting the premiumPageBlobTier is only supported for premium accounts."
  syntax:
    content: "protected final String startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "source"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> The source URI.  URIs for resources outside of Azure\n            may only be copied into block blobs."
    - id: "contentMd5"
      type: "java.lang.String"
      description: "An optional hash value used to ensure transactional integrity for the operation. May be\n            <code>null</code> or empty."
    - id: "syncCopy"
      type: "boolean"
      description: "A <code>boolean</code> which indicates if the copy should be done synchronously on the service."
    - id: "blobTierString"
      type: "java.lang.String"
      description: "A String which represents the tier of the blob."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated\n            service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation.\n            This object is used to track requests to the storage service, and to provide additional\n            runtime information about the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, rehydrate priority, access conditions, lease ID, request options, and operation context.\n\nNote: Setting the premiumPageBlobTier is only supported for premium accounts."
  syntax:
    content: "protected final String startCopy(URI source, String contentMd5, boolean syncCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "source"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> The source URI.  URIs for resources outside of Azure\n            may only be copied into block blobs."
    - id: "contentMd5"
      type: "java.lang.String"
      description: "An optional hash value used to ensure transactional integrity for the operation. May be\n            <code>null</code> or empty."
    - id: "syncCopy"
      type: "boolean"
      description: "A <code>boolean</code> which indicates if the copy should be done synchronously on the service."
    - id: "blobTierString"
      type: "java.lang.String"
      description: "A <code>String</code> object which represents the tier of the blob."
    - id: "rehydratePriority"
      type: "com.microsoft.azure.storage.blob.RehydratePriority"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.RehydratePriority\" data-throw-if-not-resolved=\"false\">RehydratePriority</xref> object which represents the rehydrate priority."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated\n            service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation.\n            This object is used to track requests to the storage service, and to provide additional\n            runtime information about the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopy(URI source, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.startCopy(URI source, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(URI source, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a URI's contents, properties, and metadata to a new blob, using the specified premium page blob tier, access conditions, lease ID, request options, and operation context.\n\nNote: Setting the premiumPageBlobTier is only supported for premium accounts."
  syntax:
    content: "protected final String startCopy(URI source, String blobTierString, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "source"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> The source URI.  URIs for resources outside of Azure\n            may only be copied into block blobs."
    - id: "blobTierString"
      type: "java.lang.String"
      description: "A String which represents the tier of the blob."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated\n            service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation.\n            This object is used to track requests to the storage service, and to provide additional\n            runtime information about the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  id: "startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "startCopyImpl(URI source, String contentMd5, boolean syncCopy, boolean incrementalCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options)"
  nameWithType: "CloudBlob.startCopyImpl(URI source, String contentMd5, boolean syncCopy, boolean incrementalCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(URI source, String contentMd5, boolean syncCopy, boolean incrementalCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "protected StorageRequest<CloudBlobClient,CloudBlob,String> startCopyImpl(URI source, String contentMd5, boolean syncCopy, boolean incrementalCopy, String blobTierString, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options)"
    parameters:
    - id: "source"
      type: "java.net.URI"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "syncCopy"
      type: "boolean"
    - id: "incrementalCopy"
      type: "boolean"
    - id: "blobTierString"
      type: "java.lang.String"
    - id: "rehydratePriority"
      type: "com.microsoft.azure.storage.blob.RehydratePriority"
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
    return:
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.String>"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes"
  id: "streamMinimumReadSizeInBytes"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "streamMinimumReadSizeInBytes"
  nameWithType: "CloudBlob.streamMinimumReadSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.streamMinimumReadSizeInBytes"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the minimum read size when using a <xref uid=\"com.microsoft.azure.storage.blob.BlobInputStream\" data-throw-if-not-resolved=\"false\">BlobInputStream</xref>."
  syntax:
    content: "protected int streamMinimumReadSizeInBytes"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes"
  id: "streamWriteSizeInBytes"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "streamWriteSizeInBytes"
  nameWithType: "CloudBlob.streamWriteSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.streamWriteSizeInBytes"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> (block and page blobs)."
  syntax:
    content: "protected int streamWriteSizeInBytes"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
  id: "undelete()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "undelete()"
  nameWithType: "CloudBlob.undelete()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.undelete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Un-deletes a blob and all its snapshots that have been soft-deleted."
  syntax:
    content: "public final void undelete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "undelete(BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.undelete(BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.undelete(BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.undelete*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Un-deletes a blob that has been soft-deleted, using the specified request options, and operation context.\n\nThe un-delete Blob operation restores the contents and metadata of soft deleted blob and all its snapshots. Attempting to undelete a blob or snapshot that is not soft deleted will succeed without any changes."
  syntax:
    content: "public final void undelete(BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
  id: "updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "updateEtagAndLastModifiedFromResponse(HttpURLConnection request)"
  nameWithType: "CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "protected void updateEtagAndLastModifiedFromResponse(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(java.net.HttpURLConnection)"
  id: "updateLengthFromResponse(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "updateLengthFromResponse(HttpURLConnection request)"
  nameWithType: "CloudBlob.updateLengthFromResponse(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "protected void updateLengthFromResponse(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long)"
  id: "upload(java.io.InputStream,long)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "upload(InputStream sourceStream, long length)"
  nameWithType: "CloudBlob.upload(InputStream sourceStream, long length)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream sourceStream, long length)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.upload*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the source stream data to the blob. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public abstract void upload(InputStream sourceStream, long length)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> object that represents the source stream to upload."
    - id: "length"
      type: "long"
      description: "An <code>long</code> that represents the length of the stream data in bytes, or -1 if unknown. The\n            length must be greater than zero and a\n            multiple of 512 for page blobs."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O exception occurred."
  - type: "java.io.IOException"
    description: "If an I/O exception occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.upload*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the source stream data to the blob using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public abstract void upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> object that represents the source stream to upload."
    - id: "length"
      type: "long"
      description: "The length of the stream data in bytes, or -1 if unknown. The length must be greater than zero and a\n            multiple of 512 for page blobs."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O exception occurred."
  - type: "java.io.IOException"
    description: "If an I/O exception occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  id: "uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadBlobTierImpl(String blobTierString, String rehydratePriority, BlobRequestOptions options)"
  nameWithType: "CloudBlob.uploadBlobTierImpl(String blobTierString, String rehydratePriority, BlobRequestOptions options)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(String blobTierString, String rehydratePriority, BlobRequestOptions options)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: " StorageRequest<CloudBlobClient,CloudBlob,Void> uploadBlobTierImpl(String blobTierString, String rehydratePriority, BlobRequestOptions options)"
    parameters:
    - id: "blobTierString"
      type: "java.lang.String"
    - id: "rehydratePriority"
      type: "java.lang.String"
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
    return:
      type: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.Void>"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int)"
  id: "uploadFromByteArray(byte[],int,int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadFromByteArray(byte[] buffer, int offset, int length)"
  nameWithType: "CloudBlob.uploadFromByteArray(byte[] buffer, int offset, int length)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[] buffer, int offset, int length)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadFromByteArray(byte[] buffer, int offset, int length)"
    parameters:
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the data to write to the blob."
    - id: "offset"
      type: "int"
      description: "A <code>int</code> which represents the offset of the byte array from which to start the data upload."
    - id: "length"
      type: "int"
      description: "An <code>int</code> which represents the number of bytes to upload from the input buffer."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadFromByteArray(byte[] buffer, int offset, int length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.uploadFromByteArray(byte[] buffer, int offset, int length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[] buffer, int offset, int length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadFromByteArray(byte[] buffer, int offset, int length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the data to write to the blob."
    - id: "offset"
      type: "int"
      description: "A <code>int</code> which represents the offset of the byte array from which to start the data upload."
    - id: "length"
      type: "int"
      description: "An <code>int</code> which represents the number of bytes to upload from the input buffer."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String)"
  id: "uploadFromFile(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadFromFile(String path)"
  nameWithType: "CloudBlob.uploadFromFile(String path)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(String path)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from a file. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadFromFile(String path)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the path to the file to be uploaded."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadFromFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.uploadFromFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from a file. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadFromFile(String path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "path"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the path to the file to be uploaded."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
  id: "uploadMetadata()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadMetadata()"
  nameWithType: "CloudBlob.uploadMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the blob's metadata to the storage service.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudBlob#downloadAttributes</xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadMetadata()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the blob's metadata to the storage service using the specified lease ID, request options, and operation context.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudBlob#downloadAttributes</xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
  id: "uploadProperties()"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadProperties()"
  nameWithType: "CloudBlob.uploadProperties()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Updates the blob's properties to the storage service.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudBlob#downloadAttributes</xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadProperties()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlob"
  langs:
  - "java"
  name: "uploadProperties(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlob.uploadProperties(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Updates the blob's properties using the specified lease ID, request options, and operation context.\n\nUse <xref uid=\"com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudBlob#downloadAttributes</xref> to retrieve the latest values for the blob's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadProperties(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
references:
- uid: "com.microsoft.azure.storage.blob.BlobType"
  name: "BlobType"
  nameWithType: "BlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobType"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  name: "CloudBlobContainer"
  nameWithType: "CloudBlobContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob*"
  name: "CloudBlob"
  nameWithType: "CloudBlob.CloudBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.CloudBlob"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy*"
  name: "abortCopy"
  nameWithType: "CloudBlob.abortCopy"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.blob.BlobRequestOptions"
  name: "BlobRequestOptions"
  nameWithType: "BlobRequestOptions"
  fullName: "com.microsoft.azure.storage.blob.BlobRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease*"
  name: "acquireLease"
  nameWithType: "CloudBlob.acquireLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType*"
  name: "assertCorrectBlobType"
  nameWithType: "CloudBlob.assertCorrectBlobType"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot*"
  name: "assertNoWriteOperationForSnapshot"
  nameWithType: "CloudBlob.assertNoWriteOperationForSnapshot"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot"
  package: "com.microsoft.azure.storage.blob"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.breakLease*"
  name: "breakLease"
  nameWithType: "CloudBlob.breakLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.breakLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.changeLease*"
  name: "changeLease"
  nameWithType: "CloudBlob.changeLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.changeLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy*"
  name: "startCopy"
  nameWithType: "CloudBlob.startCopy"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy"
  package: "com.microsoft.azure.storage.blob"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.RehydratePriority"
  name: "RehydratePriority"
  nameWithType: "RehydratePriority"
  fullName: "com.microsoft.azure.storage.blob.RehydratePriority"
- uid: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.String>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
    name: "CloudBlobClient"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.blob.CloudBlob"
    name: "CloudBlob"
    fullName: "com.microsoft.azure.storage.blob.CloudBlob"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl*"
  name: "startCopyImpl"
  nameWithType: "CloudBlob.startCopyImpl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot*"
  name: "createSnapshot"
  nameWithType: "CloudBlob.createSnapshot"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.HashMap<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.delete*"
  name: "delete"
  nameWithType: "CloudBlob.delete"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.delete"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.DeleteSnapshotsOption"
  name: "DeleteSnapshotsOption"
  nameWithType: "DeleteSnapshotsOption"
  fullName: "com.microsoft.azure.storage.blob.DeleteSnapshotsOption"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.undelete*"
  name: "undelete"
  nameWithType: "CloudBlob.undelete"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.undelete"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists*"
  name: "deleteIfExists"
  nameWithType: "CloudBlob.deleteIfExists"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
    name: "CloudBlobClient"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.blob.CloudBlob"
    name: "CloudBlob"
    fullName: "com.microsoft.azure.storage.blob.CloudBlob"
  - name: ","
    fullName: ","
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl*"
  name: "deleteImpl"
  nameWithType: "CloudBlob.deleteImpl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.OutputStream"
  spec.java:
  - uid: "java.io.OutputStream"
    name: "OutputStream"
    fullName: "java.io.OutputStream"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.download*"
  name: "download"
  nameWithType: "CloudBlob.download"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.download"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange*"
  name: "downloadRange"
  nameWithType: "CloudBlob.downloadRange"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes*"
  name: "downloadAttributes"
  nameWithType: "CloudBlob.downloadAttributes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes"
  package: "com.microsoft.azure.storage.blob"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal*"
  name: "downloadRangeInternal"
  nameWithType: "CloudBlob.downloadRangeInternal"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray*"
  name: "downloadRangeToByteArray"
  nameWithType: "CloudBlob.downloadRangeToByteArray"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray*"
  name: "downloadToByteArray"
  nameWithType: "CloudBlob.downloadToByteArray"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray*"
  name: "uploadFromByteArray"
  nameWithType: "CloudBlob.uploadFromByteArray"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile*"
  name: "uploadFromFile"
  nameWithType: "CloudBlob.uploadFromFile"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile*"
  name: "downloadToFile"
  nameWithType: "CloudBlob.downloadToFile"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.exists*"
  name: "exists"
  nameWithType: "CloudBlob.exists"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.exists"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
  name: "SharedAccessBlobPolicy"
  nameWithType: "SharedAccessBlobPolicy"
  fullName: "com.microsoft.azure.storage.blob.SharedAccessBlobPolicy"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudBlob.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.SharedAccessBlobHeaders"
  name: "SharedAccessBlobHeaders"
  nameWithType: "SharedAccessBlobHeaders"
  fullName: "com.microsoft.azure.storage.blob.SharedAccessBlobHeaders"
- uid: "com.microsoft.azure.storage.IPRange"
  name: "IPRange"
  nameWithType: "IPRange"
  fullName: "com.microsoft.azure.storage.IPRange"
- uid: "com.microsoft.azure.storage.SharedAccessProtocols"
  name: "SharedAccessProtocols"
  nameWithType: "SharedAccessProtocols"
  fullName: "com.microsoft.azure.storage.SharedAccessProtocols"
- uid: "com.microsoft.azure.storage.UserDelegationKey"
  name: "UserDelegationKey"
  nameWithType: "UserDelegationKey"
  fullName: "com.microsoft.azure.storage.UserDelegationKey"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature*"
  name: "generateUserDelegationSharedAccessSignature"
  nameWithType: "CloudBlob.generateUserDelegationSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName*"
  name: "getCanonicalName"
  nameWithType: "CloudBlob.getCanonicalName"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getContainer*"
  name: "getContainer"
  nameWithType: "CloudBlob.getContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getContainer"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata*"
  name: "getMetadata"
  nameWithType: "CloudBlob.getMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getName*"
  name: "getName"
  nameWithType: "CloudBlob.getName"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getName"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
  name: "CloudBlobDirectory"
  nameWithType: "CloudBlobDirectory"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobDirectory"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParent*"
  name: "getParent"
  nameWithType: "CloudBlob.getParent"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParent"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties"
  name: "BlobProperties"
  nameWithType: "BlobProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getProperties*"
  name: "getProperties"
  nameWithType: "CloudBlob.getProperties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CopyState"
  name: "CopyState"
  nameWithType: "CopyState"
  fullName: "com.microsoft.azure.storage.blob.CopyState"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState*"
  name: "getCopyState"
  nameWithType: "CloudBlob.getCopyState"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri*"
  name: "getSnapshotQualifiedStorageUri"
  nameWithType: "CloudBlob.getSnapshotQualifiedStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri*"
  name: "getSnapshotQualifiedUri"
  nameWithType: "CloudBlob.getSnapshotQualifiedUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri*"
  name: "getQualifiedStorageUri"
  nameWithType: "CloudBlob.getQualifiedStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri*"
  name: "getQualifiedUri"
  nameWithType: "CloudBlob.getQualifiedUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
  name: "CloudBlobClient"
  nameWithType: "CloudBlobClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient*"
  name: "getServiceClient"
  nameWithType: "CloudBlob.getServiceClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID*"
  name: "getSnapshotID"
  nameWithType: "CloudBlob.getSnapshotID"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "CloudBlob.getStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes*"
  name: "getStreamWriteSizeInBytes"
  nameWithType: "CloudBlob.getStreamWriteSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes*"
  name: "getStreamMinimumReadSizeInBytes"
  nameWithType: "CloudBlob.getStreamMinimumReadSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress*"
  name: "getTransformedAddress"
  nameWithType: "CloudBlob.getTransformedAddress"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getUri*"
  name: "getUri"
  nameWithType: "CloudBlob.getUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot*"
  name: "isSnapshot"
  nameWithType: "CloudBlob.isSnapshot"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobInputStream"
  name: "BlobInputStream"
  nameWithType: "BlobInputStream"
  fullName: "com.microsoft.azure.storage.blob.BlobInputStream"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream*"
  name: "openInputStream"
  nameWithType: "CloudBlob.openInputStream"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease*"
  name: "releaseLease"
  nameWithType: "CloudBlob.releaseLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.renewLease*"
  name: "renewLease"
  nameWithType: "CloudBlob.renewLease"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.renewLease"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl*"
  name: "uploadBlobTierImpl"
  nameWithType: "CloudBlob.uploadBlobTierImpl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setContainer*"
  name: "setContainer"
  nameWithType: "CloudBlob.setContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setContainer"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata*"
  name: "setMetadata"
  nameWithType: "CloudBlob.setMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setProperties*"
  name: "setProperties"
  nameWithType: "CloudBlob.setProperties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID*"
  name: "setSnapshotID"
  nameWithType: "CloudBlob.setSnapshotID"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri*"
  name: "setStorageUri"
  nameWithType: "CloudBlob.setStorageUri"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes*"
  name: "setStreamWriteSizeInBytes"
  nameWithType: "CloudBlob.setStreamWriteSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes*"
  name: "setStreamMinimumReadSizeInBytes"
  nameWithType: "CloudBlob.setStreamMinimumReadSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse*"
  name: "updateEtagAndLastModifiedFromResponse"
  nameWithType: "CloudBlob.updateEtagAndLastModifiedFromResponse"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse*"
  name: "updateLengthFromResponse"
  nameWithType: "CloudBlob.updateLengthFromResponse"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.upload*"
  name: "upload"
  nameWithType: "CloudBlob.upload"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.upload"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata*"
  name: "uploadMetadata"
  nameWithType: "CloudBlob.uploadMetadata"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties*"
  name: "uploadProperties"
  nameWithType: "CloudBlob.uploadProperties"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI*"
  name: "getParentNameFromURI"
  nameWithType: "CloudBlob.getParentNameFromURI"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccountInformation"
  name: "AccountInformation"
  nameWithType: "AccountInformation"
  fullName: "com.microsoft.azure.storage.AccountInformation"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo*"
  name: "downloadAccountInfo"
  nameWithType: "CloudBlob.downloadAccountInfo"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
- uid: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlob,com.microsoft.azure.storage.AccountInformation>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.ServiceClient"
    name: "ServiceClient"
    fullName: "com.microsoft.azure.storage.ServiceClient"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.blob.CloudBlob"
    name: "CloudBlob"
    fullName: "com.microsoft.azure.storage.blob.CloudBlob"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.AccountInformation"
    name: "AccountInformation"
    fullName: "com.microsoft.azure.storage.AccountInformation"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl*"
  name: "downloadAccountInformationImpl"
  nameWithType: "CloudBlob.downloadAccountInformationImpl"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>"
  spec.java:
  - uid: "com.microsoft.azure.storage.core.StorageRequest"
    name: "StorageRequest"
    fullName: "com.microsoft.azure.storage.core.StorageRequest"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
    name: "CloudBlobClient"
    fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
  - name: ","
    fullName: ","
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ","
    fullName: ","
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.validateCPKHeaders*"
  name: "<T,R>validateCPKHeaders"
  nameWithType: "CloudBlob.<T,R>validateCPKHeaders"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.ListBlobItem"
  name: "ListBlobItem"
  nameWithType: "ListBlobItem"
  fullName: "com.microsoft.azure.storage.blob.ListBlobItem"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.String"
  name: "CloudBlobClient,CloudBlob,String"
  nameWithType: "CloudBlobClient,CloudBlob,String"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.String"
- uid: "com.microsoft.azure.storage.core.StorageRequest"
  name: "StorageRequest"
  nameWithType: "StorageRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.Void"
  name: "CloudBlobClient,CloudBlob,Void"
  nameWithType: "CloudBlobClient,CloudBlob,Void"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient,com.microsoft.azure.storage.blob.CloudBlob,java.lang.Void"
- uid: "com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlob,com.microsoft.azure.storage.AccountInformation"
  name: "ServiceClient,CloudBlob,AccountInformation"
  nameWithType: "ServiceClient,CloudBlob,AccountInformation"
  fullName: "com.microsoft.azure.storage.ServiceClient,com.microsoft.azure.storage.blob.CloudBlob,com.microsoft.azure.storage.AccountInformation"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient,T,R"
  name: "CloudBlobClient,T,R"
  nameWithType: "CloudBlobClient,T,R"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient,T,R"
