### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  id: "SendWorkItem"
  parent: "com.microsoft.azure.servicebus.primitives"
  children:
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.getDeliveryTag()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.getEncodedMessageSize()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessage()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessageFormat()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.getTransaction()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.isWaitingForAck()"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.setDeliveryTag(java.lang.String)"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.setTransaction(com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.primitives.SendWorkItem.setWaitingForAck()"
  langs:
  - "java"
  name: "SendWorkItem<T>"
  nameWithType: "SendWorkItem<T>"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>"
  type: "Class"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " class SendWorkItem<T> extends WorkItem<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.servicebus.primitives.WorkItem"
  inheritedMembers:
  - "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
  - "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  id: "SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.servicebus.primitives.TimeoutTracker)"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, TimeoutTracker timeout)"
  nameWithType: "SendWorkItem<T>.SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, TimeoutTracker timeout)"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, TimeoutTracker timeout)"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, TimeoutTracker timeout)"
    parameters:
    - id: "amqpMessage"
      type: "byte[]"
    - id: "encodedMessageSize"
      type: "int"
    - id: "messageFormat"
      type: "int"
    - id: "deliveryTag"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    - id: "completableFuture"
      type: "java.util.concurrent.CompletableFuture<T>"
    - id: "timeout"
      type: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  id: "SendWorkItem(byte[],int,int,java.lang.String,com.microsoft.azure.servicebus.TransactionContext,java.util.concurrent.CompletableFuture<T>,java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, Duration timeout)"
  nameWithType: "SendWorkItem<T>.SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, Duration timeout)"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, Duration timeout)"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: " SendWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, String deliveryTag, TransactionContext transaction, CompletableFuture<T> completableFuture, Duration timeout)"
    parameters:
    - id: "amqpMessage"
      type: "byte[]"
    - id: "encodedMessageSize"
      type: "int"
    - id: "messageFormat"
      type: "int"
    - id: "deliveryTag"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    - id: "completableFuture"
      type: "java.util.concurrent.CompletableFuture<T>"
    - id: "timeout"
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getDeliveryTag()"
  id: "getDeliveryTag()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "getDeliveryTag()"
  nameWithType: "SendWorkItem<T>.getDeliveryTag()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getDeliveryTag()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getDeliveryTag*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public String getDeliveryTag()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getEncodedMessageSize()"
  id: "getEncodedMessageSize()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "getEncodedMessageSize()"
  nameWithType: "SendWorkItem<T>.getEncodedMessageSize()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getEncodedMessageSize()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getEncodedMessageSize*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public int getEncodedMessageSize()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessage()"
  id: "getMessage()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "getMessage()"
  nameWithType: "SendWorkItem<T>.getMessage()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getMessage()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessage*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public byte[] getMessage()"
    return:
      type: "byte[]"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessageFormat()"
  id: "getMessageFormat()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "getMessageFormat()"
  nameWithType: "SendWorkItem<T>.getMessageFormat()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getMessageFormat()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessageFormat*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public int getMessageFormat()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getTransaction()"
  id: "getTransaction()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "getTransaction()"
  nameWithType: "SendWorkItem<T>.getTransaction()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getTransaction()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getTransaction*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public TransactionContext getTransaction()"
    return:
      type: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.isWaitingForAck()"
  id: "isWaitingForAck()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "isWaitingForAck()"
  nameWithType: "SendWorkItem<T>.isWaitingForAck()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.isWaitingForAck()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.isWaitingForAck*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public boolean isWaitingForAck()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setDeliveryTag(java.lang.String)"
  id: "setDeliveryTag(java.lang.String)"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "setDeliveryTag(String deliveryTag)"
  nameWithType: "SendWorkItem<T>.setDeliveryTag(String deliveryTag)"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setDeliveryTag(String deliveryTag)"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setDeliveryTag*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public void setDeliveryTag(String deliveryTag)"
    parameters:
    - id: "deliveryTag"
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setTransaction(com.microsoft.azure.servicebus.TransactionContext)"
  id: "setTransaction(com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "setTransaction(TransactionContext txnId)"
  nameWithType: "SendWorkItem<T>.setTransaction(TransactionContext txnId)"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setTransaction(TransactionContext txnId)"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setTransaction*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public void setTransaction(TransactionContext txnId)"
    parameters:
    - id: "txnId"
      type: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setWaitingForAck()"
  id: "setWaitingForAck()"
  parent: "com.microsoft.azure.servicebus.primitives.SendWorkItem"
  langs:
  - "java"
  name: "setWaitingForAck()"
  nameWithType: "SendWorkItem<T>.setWaitingForAck()"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setWaitingForAck()"
  overload: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setWaitingForAck*"
  type: "Method"
  package: "com.microsoft.azure.servicebus.primitives"
  syntax:
    content: "public void setWaitingForAck()"
references:
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.TransactionContext"
  name: "TransactionContext"
  nameWithType: "TransactionContext"
  fullName: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "java.util.concurrent.CompletableFuture<T>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.SendWorkItem*"
  name: "SendWorkItem"
  nameWithType: "SendWorkItem<T>.SendWorkItem"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.SendWorkItem"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
  name: "TimeoutTracker"
  nameWithType: "TimeoutTracker"
  fullName: "com.microsoft.azure.servicebus.primitives.TimeoutTracker"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessage*"
  name: "getMessage"
  nameWithType: "SendWorkItem<T>.getMessage"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getMessage"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getEncodedMessageSize*"
  name: "getEncodedMessageSize"
  nameWithType: "SendWorkItem<T>.getEncodedMessageSize"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getEncodedMessageSize"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getMessageFormat*"
  name: "getMessageFormat"
  nameWithType: "SendWorkItem<T>.getMessageFormat"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getMessageFormat"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setWaitingForAck*"
  name: "setWaitingForAck"
  nameWithType: "SendWorkItem<T>.setWaitingForAck"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setWaitingForAck"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.isWaitingForAck*"
  name: "isWaitingForAck"
  nameWithType: "SendWorkItem<T>.isWaitingForAck"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.isWaitingForAck"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getDeliveryTag*"
  name: "getDeliveryTag"
  nameWithType: "SendWorkItem<T>.getDeliveryTag"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getDeliveryTag"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setDeliveryTag*"
  name: "setDeliveryTag"
  nameWithType: "SendWorkItem<T>.setDeliveryTag"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setDeliveryTag"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.getTransaction*"
  name: "getTransaction"
  nameWithType: "SendWorkItem<T>.getTransaction"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.getTransaction"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "com.microsoft.azure.servicebus.primitives.SendWorkItem.setTransaction*"
  name: "setTransaction"
  nameWithType: "SendWorkItem<T>.setTransaction"
  fullName: "com.microsoft.azure.servicebus.primitives.SendWorkItem<T>.setTransaction"
  package: "com.microsoft.azure.servicebus.primitives"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem<T>"
  name: "WorkItem<T>"
  nameWithType: "WorkItem<T>"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem<T>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
  name: "WorkItem.getTimeoutTracker()"
  nameWithType: "WorkItem.getTimeoutTracker()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTracker()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
  name: "WorkItem.setTimeoutTask(ScheduledFuture<?>)"
  nameWithType: "WorkItem.setTimeoutTask(ScheduledFuture<?>)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture<?>)"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
  name: "WorkItem.getLastKnownException()"
  nameWithType: "WorkItem.getLastKnownException()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.getLastKnownException()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
  name: "WorkItem.getTimeoutTask()"
  nameWithType: "WorkItem.getTimeoutTask()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.getTimeoutTask()"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
  name: "WorkItem.setLastKnownException(Exception)"
  nameWithType: "WorkItem.setLastKnownException(Exception)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.setLastKnownException(java.lang.Exception)"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
  name: "WorkItem.cancelTimeoutTask(boolean)"
  nameWithType: "WorkItem.cancelTimeoutTask(boolean)"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.cancelTimeoutTask(boolean)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
  name: "WorkItem.getWork()"
  nameWithType: "WorkItem.getWork()"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.getWork()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem"
  name: "WorkItem"
  nameWithType: "WorkItem"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem"
- uid: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture"
  name: "WorkItem.setTimeoutTask(ScheduledFuture"
  nameWithType: "WorkItem.setTimeoutTask(ScheduledFuture"
  fullName: "com.microsoft.azure.servicebus.primitives.WorkItem.setTimeoutTask(java.util.concurrent.ScheduledFuture"
- uid: "?>)"
  name: "?>)"
  nameWithType: "?>)"
  fullName: "?>)"
