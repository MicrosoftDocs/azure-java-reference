### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  id: "RenewLockLoop"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval(java.time.Instant,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop()"
  - "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop()"
  langs:
  - "java"
  name: "MessageAndSessionPump.RenewLockLoop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "private abstract static class MessageAndSessionPump.RenewLockLoop"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop()"
  id: "RenewLockLoop()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "RenewLockLoop()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.RenewLockLoop()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected RenewLockLoop()"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop()"
  id: "cancelLoop()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "cancelLoop()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.cancelLoop()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void cancelLoop()"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval(java.time.Instant,java.lang.String)"
  id: "getNextRenewInterval(java.time.Instant,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "getNextRenewInterval(Instant lockedUntilUtc, String identifier)"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.getNextRenewInterval(Instant lockedUntilUtc, String identifier)"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval(Instant lockedUntilUtc, String identifier)"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected static Duration getNextRenewInterval(Instant lockedUntilUtc, String identifier)"
    parameters:
    - id: "lockedUntilUtc"
      type: "java.time.Instant"
    - id: "identifier"
      type: "java.lang.String"
    return:
      type: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture()"
  id: "getTimerFuture()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "getTimerFuture()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.getTimerFuture()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected abstract ScheduledFuture<?> getTimerFuture()"
    return:
      type: "java.util.concurrent.ScheduledFuture<?>"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled()"
  id: "isCancelled()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "isCancelled()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.isCancelled()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected boolean isCancelled()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop()"
  id: "loop()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "loop()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.loop()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected abstract void loop()"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop()"
  id: "startLoop()"
  parent: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop"
  langs:
  - "java"
  name: "startLoop()"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.startLoop()"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop()"
  overload: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void startLoop()"
references:
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop*"
  name: "RenewLockLoop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.RenewLockLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.RenewLockLoop"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop*"
  name: "loop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.loop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.loop"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.ScheduledFuture<?>"
  spec.java:
  - uid: "java.util.concurrent.ScheduledFuture"
    name: "ScheduledFuture"
    fullName: "java.util.concurrent.ScheduledFuture"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture*"
  name: "getTimerFuture"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.getTimerFuture"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getTimerFuture"
  package: "com.microsoft.azure.servicebus"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled*"
  name: "isCancelled"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.isCancelled"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.isCancelled"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop*"
  name: "startLoop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.startLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.startLoop"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop*"
  name: "cancelLoop"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.cancelLoop"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.cancelLoop"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval*"
  name: "getNextRenewInterval"
  nameWithType: "MessageAndSessionPump.RenewLockLoop.getNextRenewInterval"
  fullName: "com.microsoft.azure.servicebus.MessageAndSessionPump.RenewLockLoop.getNextRenewInterval"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.concurrent.ScheduledFuture"
  name: "ScheduledFuture"
  nameWithType: "ScheduledFuture"
  fullName: "java.util.concurrent.ScheduledFuture"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
