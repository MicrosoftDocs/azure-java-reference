### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.servicebus.MessageReceiver"
  id: "MessageReceiver"
  parent: "com.microsoft.azure.servicebus"
  children:
  - "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  - "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  - "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
  - "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
  - "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
  - "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
  - "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peek()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receive()"
  - "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  - "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
  langs:
  - "java"
  name: "MessageReceiver"
  nameWithType: "MessageReceiver"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver"
  type: "Class"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " class MessageReceiver extends InitializableEntity implements IMessageReceiver, IMessageBrowser"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity"
  - "com.microsoft.azure.servicebus.InitializableEntity"
  implements:
  - "com.microsoft.azure.servicebus.IMessageReceiver"
  - "com.microsoft.azure.servicebus.IMessageBrowser"
  inheritedMembers:
  - "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  - "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(com.microsoft.azure.servicebus.ReceiveMode)"
  id: "MessageReceiver(com.microsoft.azure.servicebus.ReceiveMode)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "MessageReceiver(ReceiveMode receiveMode)"
  nameWithType: "MessageReceiver.MessageReceiver(ReceiveMode receiveMode)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(ReceiveMode receiveMode)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "private MessageReceiver(ReceiveMode receiveMode)"
    parameters:
    - id: "receiveMode"
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,boolean,com.microsoft.azure.servicebus.ReceiveMode)"
  id: "MessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,boolean,com.microsoft.azure.servicebus.ReceiveMode)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, boolean ownsMessagingFactory, ReceiveMode receiveMode)"
  nameWithType: "MessageReceiver.MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, boolean ownsMessagingFactory, ReceiveMode receiveMode)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, boolean ownsMessagingFactory, ReceiveMode receiveMode)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "private MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, boolean ownsMessagingFactory, ReceiveMode receiveMode)"
    parameters:
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "ownsMessagingFactory"
      type: "boolean"
    - id: "receiveMode"
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  id: "MessageReceiver(com.microsoft.azure.servicebus.primitives.MessagingFactory,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ReceiveMode)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  nameWithType: "MessageReceiver.MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageReceiver(MessagingFactory messagingFactory, String entityPath, MessagingEntityType entityType, ReceiveMode receiveMode)"
    parameters:
    - id: "messagingFactory"
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "receiveMode"
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)"
  id: "MessageReceiver(java.net.URI,java.lang.String,com.microsoft.azure.servicebus.primitives.MessagingEntityType,com.microsoft.azure.servicebus.ClientSettings,com.microsoft.azure.servicebus.ReceiveMode)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "MessageReceiver(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, ClientSettings clientSettings, ReceiveMode receiveMode)"
  nameWithType: "MessageReceiver.MessageReceiver(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, ClientSettings clientSettings, ReceiveMode receiveMode)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, ClientSettings clientSettings, ReceiveMode receiveMode)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver*"
  type: "Constructor"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessageReceiver(URI namespaceEndpointURI, String entityPath, MessagingEntityType entityType, ClientSettings clientSettings, ReceiveMode receiveMode)"
    parameters:
    - id: "namespaceEndpointURI"
      type: "java.net.URI"
    - id: "entityPath"
      type: "java.lang.String"
    - id: "entityType"
      type: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
    - id: "clientSettings"
      type: "com.microsoft.azure.servicebus.ClientSettings"
    - id: "receiveMode"
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID)"
  id: "abandon(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandon(UUID lockToken)"
  nameWithType: "MessageReceiver.abandon(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandon(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandon(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.abandon(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandon(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandon*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void abandon(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID)"
  id: "abandonAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken)"
  nameWithType: "MessageReceiver.abandonAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandonAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.abandonAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "abandonAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID)"
  id: "complete(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "complete(UUID lockToken)"
  nameWithType: "MessageReceiver.complete(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.complete(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.complete*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void complete(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "complete(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "complete(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.complete(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.complete(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.complete*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void complete(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID)"
  id: "completeAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "completeAsync(UUID lockToken)"
  nameWithType: "MessageReceiver.completeAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "completeAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "completeAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.completeAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> completeAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID)"
  id: "deadLetter(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetter(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void deadLetter(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID)"
  id: "deadLetterAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "deadLetterReason"
      type: "java.lang.String"
    - id: "deadLetterErrorDescription"
      type: "java.lang.String"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deadLetterAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID)"
  id: "defer(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "defer(UUID lockToken)"
  nameWithType: "MessageReceiver.defer(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void defer(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "defer(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "defer(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.defer(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void defer(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void defer(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "defer(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "defer(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.defer(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.defer*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void defer(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID)"
  id: "deferAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deferAsync(UUID lockToken)"
  nameWithType: "MessageReceiver.deferAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deferAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deferAsync(java.util.UUID,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deferAsync(UUID lockToken, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deferAsync(UUID lockToken, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(UUID lockToken, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deferAsync(UUID lockToken, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  id: "deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  nameWithType: "MessageReceiver.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deferAsync(UUID lockToken, Map<String,Object> propertiesToModify)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  id: "deferAsync(java.util.UUID,java.util.Map<java.lang.String,java.lang.Object>,com.microsoft.azure.servicebus.TransactionContext)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "deferAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  nameWithType: "MessageReceiver.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Void> deferAsync(UUID lockToken, Map<String,Object> propertiesToModify, TransactionContext transaction)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    - id: "propertiesToModify"
      type: "java.util.Map<java.lang.String,java.lang.Object>"
    - id: "transaction"
      type: "com.microsoft.azure.servicebus.TransactionContext"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
  id: "getEntityPath()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getEntityPath()"
  nameWithType: "MessageReceiver.getEntityPath()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public String getEntityPath()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
  id: "getInternalReceiver()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getInternalReceiver()"
  nameWithType: "MessageReceiver.getInternalReceiver()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected final CoreMessageReceiver getInternalReceiver()"
    return:
      type: "com.microsoft.azure.servicebus.primitives.CoreMessageReceiver"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
  id: "getMessagingFactory()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getMessagingFactory()"
  nameWithType: "MessageReceiver.getMessagingFactory()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: " MessagingFactory getMessagingFactory()"
    return:
      type: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
  id: "getPrefetchCount()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getPrefetchCount()"
  nameWithType: "MessageReceiver.getPrefetchCount()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public int getPrefetchCount()"
    return:
      type: "int"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
  id: "getReceiveMode()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getReceiveMode()"
  nameWithType: "MessageReceiver.getReceiveMode()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public ReceiveMode getReceiveMode()"
    return:
      type: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
  id: "getRequestedSessionId()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "getRequestedSessionId()"
  nameWithType: "MessageReceiver.getRequestedSessionId()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected String getRequestedSessionId()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
  id: "initializeAsync()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "initializeAsync()"
  nameWithType: "MessageReceiver.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "synchronized CompletableFuture<Void> initializeAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
  id: "isBrowsableSession()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "isBrowsableSession()"
  nameWithType: "MessageReceiver.isBrowsableSession()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected boolean isBrowsableSession()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
  id: "isSessionReceiver()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "isSessionReceiver()"
  nameWithType: "MessageReceiver.isSessionReceiver()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected boolean isSessionReceiver()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
  id: "onClose()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "onClose()"
  nameWithType: "MessageReceiver.onClose()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.onClose()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.onClose*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "protected CompletableFuture<Void> onClose()"
    return:
      type: "java.util.concurrent.CompletableFuture<java.lang.Void>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peek()"
  id: "peek()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peek()"
  nameWithType: "MessageReceiver.peek()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peek()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peek*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public IMessage peek()"
    return:
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peek(long)"
  id: "peek(long)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peek(long fromSequenceNumber)"
  nameWithType: "MessageReceiver.peek(long fromSequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peek(long fromSequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peek*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public IMessage peek(long fromSequenceNumber)"
    parameters:
    - id: "fromSequenceNumber"
      type: "long"
    return:
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
  id: "peekAsync()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekAsync()"
  nameWithType: "MessageReceiver.peekAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> peekAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long)"
  id: "peekAsync(long)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekAsync(long fromSequenceNumber)"
  nameWithType: "MessageReceiver.peekAsync(long fromSequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync(long fromSequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)"
    parameters:
    - id: "fromSequenceNumber"
      type: "long"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int)"
  id: "peekBatch(int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekBatch(int messageCount)"
  nameWithType: "MessageReceiver.peekBatch(int messageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(int messageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<IMessage> peekBatch(int messageCount)"
    parameters:
    - id: "messageCount"
      type: "int"
    return:
      type: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long,int)"
  id: "peekBatch(long,int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekBatch(long fromSequenceNumber, int messageCount)"
  nameWithType: "MessageReceiver.peekBatch(long fromSequenceNumber, int messageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch(long fromSequenceNumber, int messageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)"
    parameters:
    - id: "fromSequenceNumber"
      type: "long"
    - id: "messageCount"
      type: "int"
    return:
      type: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int)"
  id: "peekBatchAsync(int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekBatchAsync(int messageCount)"
  nameWithType: "MessageReceiver.peekBatchAsync(int messageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(int messageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)"
    parameters:
    - id: "messageCount"
      type: "int"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long,int)"
  id: "peekBatchAsync(long,int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "peekBatchAsync(long fromSequenceNumber, int messageCount)"
  nameWithType: "MessageReceiver.peekBatchAsync(long fromSequenceNumber, int messageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync(long fromSequenceNumber, int messageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)"
    parameters:
    - id: "fromSequenceNumber"
      type: "long"
    - id: "messageCount"
      type: "int"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receive()"
  id: "receive()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receive()"
  nameWithType: "MessageReceiver.receive()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receive()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receive*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public IMessage receive()"
    return:
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receive(java.time.Duration)"
  id: "receive(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receive(Duration serverWaitTime)"
  nameWithType: "MessageReceiver.receive(Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receive(Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receive*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public IMessage receive(Duration serverWaitTime)"
    parameters:
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
  id: "receiveAsync()"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveAsync()"
  nameWithType: "MessageReceiver.receiveAsync()"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync()"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveAsync()"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(java.time.Duration)"
  id: "receiveAsync(java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveAsync(Duration serverWaitTime)"
  nameWithType: "MessageReceiver.receiveAsync(Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync(Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveAsync(Duration serverWaitTime)"
    parameters:
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int)"
  id: "receiveBatch(int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveBatch(int maxMessageCount)"
  nameWithType: "MessageReceiver.receiveBatch(int maxMessageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int maxMessageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<IMessage> receiveBatch(int maxMessageCount)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    return:
      type: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int,java.time.Duration)"
  id: "receiveBatch(int,java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveBatch(int maxMessageCount, Duration serverWaitTime)"
  nameWithType: "MessageReceiver.receiveBatch(int maxMessageCount, Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch(int maxMessageCount, Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<IMessage> receiveBatch(int maxMessageCount, Duration serverWaitTime)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int)"
  id: "receiveBatchAsync(int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveBatchAsync(int maxMessageCount)"
  nameWithType: "MessageReceiver.receiveBatchAsync(int maxMessageCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int maxMessageCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int,java.time.Duration)"
  id: "receiveBatchAsync(int,java.time.Duration)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  nameWithType: "MessageReceiver.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)"
    parameters:
    - id: "maxMessageCount"
      type: "int"
    - id: "serverWaitTime"
      type: "java.time.Duration"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long)"
  id: "receiveDeferredMessage(long)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveDeferredMessage(long sequenceNumber)"
  nameWithType: "MessageReceiver.receiveDeferredMessage(long sequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage(long sequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public IMessage receiveDeferredMessage(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "com.microsoft.azure.servicebus.IMessage"
  exceptions:
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  - type: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long)"
  id: "receiveDeferredMessageAsync(long)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveDeferredMessageAsync(long sequenceNumber)"
  nameWithType: "MessageReceiver.receiveDeferredMessageAsync(long sequenceNumber)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync(long sequenceNumber)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<IMessage> receiveDeferredMessageAsync(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
    return:
      type: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
  id: "receiveDeferredMessageBatch(java.util.Collection<java.lang.Long>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<IMessage> receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)"
    parameters:
    - id: "sequenceNumbers"
      type: "java.util.Collection<java.lang.Long>"
    return:
      type: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  exceptions:
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  - type: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  id: "receiveDeferredMessageBatchAsync(java.util.Collection<java.lang.Long>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<IMessage>> receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)"
    parameters:
    - id: "sequenceNumbers"
      type: "java.util.Collection<java.lang.Long>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  id: "renewMessageLock(com.microsoft.azure.servicebus.IMessage)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLock(IMessage message)"
  nameWithType: "MessageReceiver.renewMessageLock(IMessage message)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(IMessage message)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Instant renewMessageLock(IMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    return:
      type: "java.time.Instant"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(java.util.UUID)"
  id: "renewMessageLock(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLock(UUID lockToken)"
  nameWithType: "MessageReceiver.renewMessageLock(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Instant renewMessageLock(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.time.Instant"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  id: "renewMessageLockAsync(com.microsoft.azure.servicebus.IMessage)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLockAsync(IMessage message)"
  nameWithType: "MessageReceiver.renewMessageLockAsync(IMessage message)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(IMessage message)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Instant> renewMessageLockAsync(IMessage message)"
    parameters:
    - id: "message"
      type: "com.microsoft.azure.servicebus.IMessage"
    return:
      type: "java.util.concurrent.CompletableFuture<java.time.Instant>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(java.util.UUID)"
  id: "renewMessageLockAsync(java.util.UUID)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLockAsync(UUID lockToken)"
  nameWithType: "MessageReceiver.renewMessageLockAsync(UUID lockToken)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync(UUID lockToken)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Instant> renewMessageLockAsync(UUID lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.util.UUID"
    return:
      type: "java.util.concurrent.CompletableFuture<java.time.Instant>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "renewMessageLockBatch(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLockBatch(Collection<? extends IMessage> messages)"
  nameWithType: "MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage> messages)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch(Collection<? extends IMessage> messages)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public Collection<Instant> renewMessageLockBatch(Collection<? extends IMessage> messages)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    return:
      type: "java.util.Collection<java.time.Instant>"
  exceptions:
  - type: "java.lang.InterruptedException"
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  id: "renewMessageLockBatchAsync(java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  nameWithType: "MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public CompletableFuture<Collection<Instant>> renewMessageLockBatchAsync(Collection<? extends IMessage> messages)"
    parameters:
    - id: "messages"
      type: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
    return:
      type: "java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int)"
  id: "setPrefetchCount(int)"
  parent: "com.microsoft.azure.servicebus.MessageReceiver"
  langs:
  - "java"
  name: "setPrefetchCount(int prefetchCount)"
  nameWithType: "MessageReceiver.setPrefetchCount(int prefetchCount)"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount(int prefetchCount)"
  overload: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount*"
  type: "Method"
  package: "com.microsoft.azure.servicebus"
  syntax:
    content: "public void setPrefetchCount(int prefetchCount)"
    parameters:
    - id: "prefetchCount"
      type: "int"
  exceptions:
  - type: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
references:
- uid: "com.microsoft.azure.servicebus.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.microsoft.azure.servicebus.ReceiveMode"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver*"
  name: "MessageReceiver"
  nameWithType: "MessageReceiver.MessageReceiver"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.MessageReceiver"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
  name: "MessagingFactory"
  nameWithType: "MessagingFactory"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingFactory"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.microsoft.azure.servicebus.primitives.MessagingEntityType"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.servicebus.ClientSettings"
  name: "ClientSettings"
  nameWithType: "ClientSettings"
  fullName: "com.microsoft.azure.servicebus.ClientSettings"
- uid: "java.util.concurrent.CompletableFuture<java.lang.Void>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync*"
  name: "initializeAsync"
  nameWithType: "MessageReceiver.initializeAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.initializeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver*"
  name: "isSessionReceiver"
  nameWithType: "MessageReceiver.isSessionReceiver"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.isSessionReceiver"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession*"
  name: "isBrowsableSession"
  nameWithType: "MessageReceiver.isBrowsableSession"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.isBrowsableSession"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId*"
  name: "getRequestedSessionId"
  nameWithType: "MessageReceiver.getRequestedSessionId"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getRequestedSessionId"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.primitives.CoreMessageReceiver"
  name: "CoreMessageReceiver"
  nameWithType: "CoreMessageReceiver"
  fullName: "com.microsoft.azure.servicebus.primitives.CoreMessageReceiver"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver*"
  name: "getInternalReceiver"
  nameWithType: "MessageReceiver.getInternalReceiver"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getInternalReceiver"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath*"
  name: "getEntityPath"
  nameWithType: "MessageReceiver.getEntityPath"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getEntityPath"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode*"
  name: "getReceiveMode"
  nameWithType: "MessageReceiver.getReceiveMode"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getReceiveMode"
  package: "com.microsoft.azure.servicebus"
- uid: "java.lang.InterruptedException"
  spec.java:
  - uid: "java.lang.InterruptedException"
    name: "InterruptedException"
    fullName: "java.lang.InterruptedException"
- uid: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
  name: "ServiceBusException"
  nameWithType: "ServiceBusException"
  fullName: "com.microsoft.azure.servicebus.primitives.ServiceBusException"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandon*"
  name: "abandon"
  nameWithType: "MessageReceiver.abandon"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandon"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.TransactionContext"
  name: "TransactionContext"
  nameWithType: "TransactionContext"
  fullName: "com.microsoft.azure.servicebus.TransactionContext"
- uid: "java.util.Map<java.lang.String,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync*"
  name: "abandonAsync"
  nameWithType: "MessageReceiver.abandonAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.abandonAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.complete*"
  name: "complete"
  nameWithType: "MessageReceiver.complete"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.complete"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync*"
  name: "completeAsync"
  nameWithType: "MessageReceiver.completeAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.completeAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.defer*"
  name: "defer"
  nameWithType: "MessageReceiver.defer"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.defer"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync*"
  name: "deferAsync"
  nameWithType: "MessageReceiver.deferAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deferAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter*"
  name: "deadLetter"
  nameWithType: "MessageReceiver.deadLetter"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetter"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync*"
  name: "deadLetterAsync"
  nameWithType: "MessageReceiver.deadLetterAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.deadLetterAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.IMessage"
  name: "IMessage"
  nameWithType: "IMessage"
  fullName: "com.microsoft.azure.servicebus.IMessage"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receive*"
  name: "receive"
  nameWithType: "MessageReceiver.receive"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receive"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage*"
  name: "receiveDeferredMessage"
  nameWithType: "MessageReceiver.receiveDeferredMessage"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessage"
  package: "com.microsoft.azure.servicebus"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.util.Collection<com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch*"
  name: "receiveBatch"
  nameWithType: "MessageReceiver.receiveBatch"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatch"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.Collection<java.lang.Long>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch*"
  name: "receiveDeferredMessageBatch"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatch"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatch"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync*"
  name: "receiveAsync"
  nameWithType: "MessageReceiver.receiveAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<java.util.Collection<com.microsoft.azure.servicebus.IMessage>>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync*"
  name: "receiveBatchAsync"
  nameWithType: "MessageReceiver.receiveBatchAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync*"
  name: "receiveDeferredMessageAsync"
  nameWithType: "MessageReceiver.receiveDeferredMessageAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync*"
  name: "receiveDeferredMessageBatchAsync"
  nameWithType: "MessageReceiver.receiveDeferredMessageBatchAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.receiveDeferredMessageBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.onClose*"
  name: "onClose"
  nameWithType: "MessageReceiver.onClose"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.onClose"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount*"
  name: "getPrefetchCount"
  nameWithType: "MessageReceiver.getPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount*"
  name: "setPrefetchCount"
  nameWithType: "MessageReceiver.setPrefetchCount"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.setPrefetchCount"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.concurrent.CompletableFuture<java.time.Instant>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync*"
  name: "renewMessageLockAsync"
  nameWithType: "MessageReceiver.renewMessageLockAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.Collection<? extends com.microsoft.azure.servicebus.IMessage>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.microsoft.azure.servicebus.IMessage"
    name: "IMessage"
    fullName: "? extends com.microsoft.azure.servicebus.IMessage"
  - name: ">"
    fullName: ">"
- uid: "java.util.concurrent.CompletableFuture<java.util.Collection<java.time.Instant>>"
  spec.java:
  - uid: "java.util.concurrent.CompletableFuture"
    name: "CompletableFuture"
    fullName: "java.util.concurrent.CompletableFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync*"
  name: "renewMessageLockBatchAsync"
  nameWithType: "MessageReceiver.renewMessageLockBatchAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "java.util.Collection<java.time.Instant>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch*"
  name: "renewMessageLockBatch"
  nameWithType: "MessageReceiver.renewMessageLockBatch"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLockBatch"
  package: "com.microsoft.azure.servicebus"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock*"
  name: "renewMessageLock"
  nameWithType: "MessageReceiver.renewMessageLock"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.renewMessageLock"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peek*"
  name: "peek"
  nameWithType: "MessageReceiver.peek"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peek"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch*"
  name: "peekBatch"
  nameWithType: "MessageReceiver.peekBatch"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatch"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync*"
  name: "peekAsync"
  nameWithType: "MessageReceiver.peekAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync*"
  name: "peekBatchAsync"
  nameWithType: "MessageReceiver.peekBatchAsync"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.peekBatchAsync"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory*"
  name: "getMessagingFactory"
  nameWithType: "MessageReceiver.getMessagingFactory"
  fullName: "com.microsoft.azure.servicebus.MessageReceiver.getMessagingFactory"
  package: "com.microsoft.azure.servicebus"
- uid: "com.microsoft.azure.servicebus.InitializableEntity"
  name: "InitializableEntity"
  nameWithType: "InitializableEntity"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity"
- uid: "com.microsoft.azure.servicebus.IMessageReceiver"
  name: "IMessageReceiver"
  nameWithType: "IMessageReceiver"
  fullName: "com.microsoft.azure.servicebus.IMessageReceiver"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser"
  name: "IMessageBrowser"
  nameWithType: "IMessageBrowser"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
  name: "ClientEntity.setClosed()"
  nameWithType: "ClientEntity.setClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
  name: "ClientEntity.finalize()"
  nameWithType: "ClientEntity.finalize()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
  name: "ClientEntity.setClosing()"
  nameWithType: "ClientEntity.setClosing()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.setClosing()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
  name: "ClientEntity.throwIfClosed(Throwable)"
  nameWithType: "ClientEntity.throwIfClosed(Throwable)"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(java.lang.Throwable)"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
  name: "ClientEntity.close()"
  nameWithType: "ClientEntity.close()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.close()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
  name: "ClientEntity.closeAsync()"
  nameWithType: "ClientEntity.closeAsync()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()"
- uid: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
  name: "InitializableEntity.initializeAsync()"
  nameWithType: "InitializableEntity.initializeAsync()"
  fullName: "com.microsoft.azure.servicebus.InitializableEntity.initializeAsync()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
  name: "ClientEntity.onClose()"
  nameWithType: "ClientEntity.onClose()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.onClose()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
  name: "ClientEntity.getIsClosed()"
  nameWithType: "ClientEntity.getIsClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
  name: "ClientEntity.getIsClosingOrClosed()"
  nameWithType: "ClientEntity.getIsClosingOrClosed()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()"
- uid: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
  name: "ClientEntity.getClientId()"
  nameWithType: "ClientEntity.getClientId()"
  fullName: "com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.concurrent.CompletableFuture"
  name: "CompletableFuture"
  nameWithType: "CompletableFuture"
  fullName: "java.util.concurrent.CompletableFuture"
- uid: "java.lang.String,java.lang.Object"
  name: "String,Object"
  nameWithType: "String,Object"
  fullName: "java.lang.String,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.lang.Long"
  name: "Long"
  nameWithType: "Long"
  fullName: "java.lang.Long"
- uid: "? extends com.microsoft.azure.servicebus.IMessage"
  name: "? extends IMessage"
  nameWithType: "? extends IMessage"
  fullName: "? extends com.microsoft.azure.servicebus.IMessage"
