### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.Permissions"
  id: "Permissions"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.Permissions.Permissions()"
  - "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies()"
  - "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
  langs:
  - "java"
  name: "Permissions<T>"
  nameWithType: "Permissions<T>"
  fullName: "com.microsoft.azure.storage.Permissions<T>"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents the permissions for a shared access policy."
  syntax:
    content: "public abstract class Permissions<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.Permissions.Permissions()"
  id: "Permissions()"
  parent: "com.microsoft.azure.storage.Permissions"
  langs:
  - "java"
  name: "Permissions()"
  nameWithType: "Permissions<T>.Permissions()"
  fullName: "com.microsoft.azure.storage.Permissions<T>.Permissions()"
  overload: "com.microsoft.azure.storage.Permissions.Permissions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `Permissions` class."
  syntax:
    content: "public Permissions()"
- uid: "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies()"
  id: "getSharedAccessPolicies()"
  parent: "com.microsoft.azure.storage.Permissions"
  langs:
  - "java"
  name: "getSharedAccessPolicies()"
  nameWithType: "Permissions<T>.getSharedAccessPolicies()"
  fullName: "com.microsoft.azure.storage.Permissions<T>.getSharedAccessPolicies()"
  overload: "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the set of shared access policies."
  syntax:
    content: "public HashMap<String,T> getSharedAccessPolicies()"
    return:
      type: "java.util.HashMap<java.lang.String,T>"
      description: "A <code>java.util.HashMap</code> object of <xref uid=\"com.microsoft.azure.storage.SharedAccessPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessPolicy</xref> objects\n         which represent the set of shared access policies."
- uid: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
  id: "setSharedAccessPolicies(java.util.HashMap<java.lang.String,T>)"
  parent: "com.microsoft.azure.storage.Permissions"
  langs:
  - "java"
  name: "setSharedAccessPolicies(HashMap<String,T> sharedAccessPolicies)"
  nameWithType: "Permissions<T>.setSharedAccessPolicies(HashMap<String,T> sharedAccessPolicies)"
  fullName: "com.microsoft.azure.storage.Permissions<T>.setSharedAccessPolicies(HashMap<String,T> sharedAccessPolicies)"
  overload: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the shared access policies."
  syntax:
    content: "public void setSharedAccessPolicies(HashMap<String,T> sharedAccessPolicies)"
    parameters:
    - id: "sharedAccessPolicies"
      type: "java.util.HashMap<java.lang.String,T>"
      description: "A <code>java.util.HashMap</code> object of <xref uid=\"com.microsoft.azure.storage.SharedAccessPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessPolicy</xref> objects\n        which contain the shared access policies to set."
references:
- uid: "com.microsoft.azure.storage.Permissions.Permissions*"
  name: "Permissions"
  nameWithType: "Permissions<T>.Permissions"
  fullName: "com.microsoft.azure.storage.Permissions<T>.Permissions"
  package: "com.microsoft.azure.storage"
- uid: "java.util.HashMap<java.lang.String,T>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.Permissions.getSharedAccessPolicies*"
  name: "getSharedAccessPolicies"
  nameWithType: "Permissions<T>.getSharedAccessPolicies"
  fullName: "com.microsoft.azure.storage.Permissions<T>.getSharedAccessPolicies"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.Permissions.setSharedAccessPolicies*"
  name: "setSharedAccessPolicies"
  nameWithType: "Permissions<T>.setSharedAccessPolicies"
  fullName: "com.microsoft.azure.storage.Permissions<T>.setSharedAccessPolicies"
  package: "com.microsoft.azure.storage"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,T"
  name: "String,T"
  nameWithType: "String,T"
  fullName: "java.lang.String,T"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
