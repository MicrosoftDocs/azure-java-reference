### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobResponse"
  id: "BlobResponse"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse()"
  - "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getAcl(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes(java.net.HttpURLConnection,com.microsoft.azure.storage.StorageUri,java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes(java.net.HttpURLConnection,boolean)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getCopyState(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime(java.net.HttpURLConnection)"
  langs:
  - "java"
  name: "BlobResponse"
  nameWithType: "BlobResponse"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "RESERVED FOR INTERNAL USE. A class used to parse the response from blob and container operations."
  syntax:
    content: "final class BlobResponse extends BaseResponse"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.core.BaseResponse"
  inheritedMembers:
  - "com.microsoft.azure.storage.core.BaseResponse.getContentMD5(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getDate(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getEncryptionKeyHash(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getErrorCode(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getEtag(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getMetadata(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.getRequestId(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.isServerEncrypted(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.BaseResponse.isServerRequestEncrypted(java.net.HttpURLConnection)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse()"
  id: "BlobResponse()"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "BlobResponse()"
  nameWithType: "BlobResponse.BlobResponse()"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse()"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: " BlobResponse()"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation(java.net.HttpURLConnection)"
  id: "getAccountInformation(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getAccountInformation(HttpURLConnection request)"
  nameWithType: "BlobResponse.getAccountInformation(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the accountInformation"
  syntax:
    content: "public static AccountInformation getAccountInformation(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from the server."
    return:
      type: "com.microsoft.azure.storage.AccountInformation"
      description: "The AccountInformation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getAcl(java.net.HttpURLConnection)"
  id: "getAcl(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getAcl(HttpURLConnection request)"
  nameWithType: "BlobResponse.getAcl(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getAcl(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getAcl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the ACL for the container from the response."
  syntax:
    content: "public static String getAcl(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "the request object for this operation"
    return:
      type: "java.lang.String"
      description: "the ACL value indicating the public access level for the container"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes(java.net.HttpURLConnection,com.microsoft.azure.storage.StorageUri,java.lang.String)"
  id: "getBlobAttributes(java.net.HttpURLConnection,com.microsoft.azure.storage.StorageUri,java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getBlobAttributes(HttpURLConnection request, StorageUri resourceURI, String snapshotID)"
  nameWithType: "BlobResponse.getBlobAttributes(HttpURLConnection request, StorageUri resourceURI, String snapshotID)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes(HttpURLConnection request, StorageUri resourceURI, String snapshotID)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the BlobAttributes from the given request"
  syntax:
    content: "public static BlobAttributes getBlobAttributes(HttpURLConnection request, StorageUri resourceURI, String snapshotID)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    - id: "resourceURI"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "The blob uri to set."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "The snapshot version, if the blob is a snapshot."
    return:
      type: "com.microsoft.azure.storage.blob.BlobAttributes"
      description: "the BlobAttributes from the given request"
  exceptions:
  - type: "java.net.URISyntaxException"
  - type: "java.text.ParseException"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes(java.net.HttpURLConnection,boolean)"
  id: "getBlobContainerAttributes(java.net.HttpURLConnection,boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getBlobContainerAttributes(HttpURLConnection request, boolean usePathStyleUris)"
  nameWithType: "BlobResponse.getBlobContainerAttributes(HttpURLConnection request, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes(HttpURLConnection request, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the BlobContainerAttributes from the given request."
  syntax:
    content: "public static BlobContainerAttributes getBlobContainerAttributes(HttpURLConnection request, boolean usePathStyleUris)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "the request to get attributes from."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the account is using pathSytleUris."
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerAttributes"
      description: "the BlobContainerAttributes from the given request."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getCopyState(java.net.HttpURLConnection)"
  id: "getCopyState(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getCopyState(HttpURLConnection request)"
  nameWithType: "BlobResponse.getCopyState(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getCopyState(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getCopyState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the copyState"
  syntax:
    content: "public static CopyState getCopyState(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "com.microsoft.azure.storage.blob.CopyState"
      description: "The CopyState."
  exceptions:
  - type: "java.net.URISyntaxException"
  - type: "java.text.ParseException"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration(java.net.HttpURLConnection)"
  id: "getLeaseDuration(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getLeaseDuration(HttpURLConnection request)"
  nameWithType: "BlobResponse.getLeaseDuration(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the LeaseDuration"
  syntax:
    content: "public static LeaseDuration getLeaseDuration(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "com.microsoft.azure.storage.blob.LeaseDuration"
      description: "The LeaseDuration."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID(java.net.HttpURLConnection)"
  id: "getLeaseID(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getLeaseID(HttpURLConnection request)"
  nameWithType: "BlobResponse.getLeaseID(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease id from the request header."
  syntax:
    content: "public static String getLeaseID(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "java.lang.String"
      description: "the lease id from the request header."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState(java.net.HttpURLConnection)"
  id: "getLeaseState(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getLeaseState(HttpURLConnection request)"
  nameWithType: "BlobResponse.getLeaseState(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the LeaseState"
  syntax:
    content: "public static LeaseState getLeaseState(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "com.microsoft.azure.storage.blob.LeaseState"
      description: "The LeaseState."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus(java.net.HttpURLConnection)"
  id: "getLeaseStatus(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getLeaseStatus(HttpURLConnection request)"
  nameWithType: "BlobResponse.getLeaseStatus(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the LeaseStatus"
  syntax:
    content: "public static LeaseStatus getLeaseStatus(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "com.microsoft.azure.storage.blob.LeaseStatus"
      description: "The Etag."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime(java.net.HttpURLConnection)"
  id: "getLeaseTime(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getLeaseTime(HttpURLConnection request)"
  nameWithType: "BlobResponse.getLeaseTime(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease Time from the request header."
  syntax:
    content: "public static String getLeaseTime(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "java.lang.String"
      description: "the lease Time from the request header."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel(java.net.HttpURLConnection)"
  id: "getPublicAccessLevel(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getPublicAccessLevel(HttpURLConnection request)"
  nameWithType: "BlobResponse.getPublicAccessLevel(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the public access type for the container"
  syntax:
    content: "public static BlobContainerPublicAccessType getPublicAccessLevel(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
      description: "the blob container public access type from the request header."
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime(java.net.HttpURLConnection)"
  id: "getSnapshotTime(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.blob.BlobResponse"
  langs:
  - "java"
  name: "getSnapshotTime(HttpURLConnection request)"
  nameWithType: "BlobResponse.getSnapshotTime(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the snapshot ID from the request header."
  syntax:
    content: "public static String getSnapshotTime(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "The response from server."
    return:
      type: "java.lang.String"
      description: "the snapshot ID from the request header."
references:
- uid: "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse*"
  name: "BlobResponse"
  nameWithType: "BlobResponse.BlobResponse"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.BlobResponse"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getAcl*"
  name: "getAcl"
  nameWithType: "BlobResponse.getAcl"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getAcl"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "java.text.ParseException"
  spec.java:
  - uid: "java.text.ParseException"
    name: "ParseException"
    fullName: "java.text.ParseException"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.blob.BlobAttributes"
  name: "BlobAttributes"
  nameWithType: "BlobAttributes"
  fullName: "com.microsoft.azure.storage.blob.BlobAttributes"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes*"
  name: "getBlobAttributes"
  nameWithType: "BlobResponse.getBlobAttributes"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getBlobAttributes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.BlobContainerAttributes"
  name: "BlobContainerAttributes"
  nameWithType: "BlobContainerAttributes"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerAttributes"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes*"
  name: "getBlobContainerAttributes"
  nameWithType: "BlobResponse.getBlobContainerAttributes"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getBlobContainerAttributes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccountInformation"
  name: "AccountInformation"
  nameWithType: "AccountInformation"
  fullName: "com.microsoft.azure.storage.AccountInformation"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation*"
  name: "getAccountInformation"
  nameWithType: "BlobResponse.getAccountInformation"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getAccountInformation"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CopyState"
  name: "CopyState"
  nameWithType: "CopyState"
  fullName: "com.microsoft.azure.storage.blob.CopyState"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getCopyState*"
  name: "getCopyState"
  nameWithType: "BlobResponse.getCopyState"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getCopyState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseDuration"
  name: "LeaseDuration"
  nameWithType: "LeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.LeaseDuration"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration*"
  name: "getLeaseDuration"
  nameWithType: "BlobResponse.getLeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseDuration"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID*"
  name: "getLeaseID"
  nameWithType: "BlobResponse.getLeaseID"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseID"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseState"
  name: "LeaseState"
  nameWithType: "LeaseState"
  fullName: "com.microsoft.azure.storage.blob.LeaseState"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState*"
  name: "getLeaseState"
  nameWithType: "BlobResponse.getLeaseState"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseStatus"
  name: "LeaseStatus"
  nameWithType: "LeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.LeaseStatus"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus*"
  name: "getLeaseStatus"
  nameWithType: "BlobResponse.getLeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime*"
  name: "getLeaseTime"
  nameWithType: "BlobResponse.getLeaseTime"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getLeaseTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime*"
  name: "getSnapshotTime"
  nameWithType: "BlobResponse.getSnapshotTime"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getSnapshotTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
  name: "BlobContainerPublicAccessType"
  nameWithType: "BlobContainerPublicAccessType"
  fullName: "com.microsoft.azure.storage.blob.BlobContainerPublicAccessType"
- uid: "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel*"
  name: "getPublicAccessLevel"
  nameWithType: "BlobResponse.getPublicAccessLevel"
  fullName: "com.microsoft.azure.storage.blob.BlobResponse.getPublicAccessLevel"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.core.BaseResponse"
  name: "BaseResponse"
  nameWithType: "BaseResponse"
  fullName: "com.microsoft.azure.storage.core.BaseResponse"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getErrorCode(java.net.HttpURLConnection)"
  name: "BaseResponse.getErrorCode(HttpURLConnection)"
  nameWithType: "BaseResponse.getErrorCode(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getErrorCode(java.net.HttpURLConnection)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getMetadata(java.net.HttpURLConnection)"
  name: "BaseResponse.getMetadata(HttpURLConnection)"
  nameWithType: "BaseResponse.getMetadata(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getMetadata(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getEtag(java.net.HttpURLConnection)"
  name: "BaseResponse.getEtag(HttpURLConnection)"
  nameWithType: "BaseResponse.getEtag(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getEtag(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getRequestId(java.net.HttpURLConnection)"
  name: "BaseResponse.getRequestId(HttpURLConnection)"
  nameWithType: "BaseResponse.getRequestId(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getRequestId(java.net.HttpURLConnection)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getContentMD5(java.net.HttpURLConnection)"
  name: "BaseResponse.getContentMD5(HttpURLConnection)"
  nameWithType: "BaseResponse.getContentMD5(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getContentMD5(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.isServerEncrypted(java.net.HttpURLConnection)"
  name: "BaseResponse.isServerEncrypted(HttpURLConnection)"
  nameWithType: "BaseResponse.isServerEncrypted(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.isServerEncrypted(java.net.HttpURLConnection)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.storage.core.BaseResponse.isServerRequestEncrypted(java.net.HttpURLConnection)"
  name: "BaseResponse.isServerRequestEncrypted(HttpURLConnection)"
  nameWithType: "BaseResponse.isServerRequestEncrypted(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.isServerRequestEncrypted(java.net.HttpURLConnection)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getDate(java.net.HttpURLConnection)"
  name: "BaseResponse.getDate(HttpURLConnection)"
  nameWithType: "BaseResponse.getDate(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getDate(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.core.BaseResponse.getEncryptionKeyHash(java.net.HttpURLConnection)"
  name: "BaseResponse.getEncryptionKeyHash(HttpURLConnection)"
  nameWithType: "BaseResponse.getEncryptionKeyHash(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.core.BaseResponse.getEncryptionKeyHash(java.net.HttpURLConnection)"
