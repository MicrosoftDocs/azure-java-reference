### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.AccessCondition"
  id: "AccessCondition"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.AccessCondition.AccessCondition()"
  - "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition()"
  - "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition()"
  - "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition(java.util.Date)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()"
  - "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition(java.util.Date)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition(long)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition(long)"
  - "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition(long)"
  - "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual()"
  - "com.microsoft.azure.storage.AccessCondition.getIfMatch()"
  - "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual()"
  - "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate()"
  - "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch()"
  - "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual()"
  - "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan()"
  - "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual()"
  - "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate()"
  - "com.microsoft.azure.storage.AccessCondition.getLeaseID()"
  - "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual(java.lang.Long)"
  - "com.microsoft.azure.storage.AccessCondition.setIfMatch(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual(java.lang.Long)"
  - "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate(java.util.Date)"
  - "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual(java.lang.Long)"
  - "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan(java.lang.Long)"
  - "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual(java.lang.Long)"
  - "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate(java.util.Date)"
  - "com.microsoft.azure.storage.AccessCondition.setLeaseID(java.lang.String)"
  - "com.microsoft.azure.storage.AccessCondition.verifyConditional(java.lang.String,java.util.Date)"
  langs:
  - "java"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents a set of access conditions to be used for operations against the storage services."
  syntax:
    content: "public final class AccessCondition"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.AccessCondition.AccessCondition()"
  id: "AccessCondition()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "AccessCondition()"
  nameWithType: "AccessCondition.AccessCondition()"
  fullName: "com.microsoft.azure.storage.AccessCondition.AccessCondition()"
  overload: "com.microsoft.azure.storage.AccessCondition.AccessCondition*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `AccessCondition` class."
  syntax:
    content: "public AccessCondition()"
- uid: "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest(java.net.HttpURLConnection)"
  id: "applyAppendConditionToRequest(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "applyAppendConditionToRequest(HttpURLConnection request)"
  nameWithType: "AccessCondition.applyAppendConditionToRequest(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Applies the access condition to the request."
  syntax:
    content: "public void applyAppendConditionToRequest(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "A <code>java.net.HttpURLConnection</code> object that represents the request to which the condition is\n            being applied."
- uid: "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest(java.net.HttpURLConnection)"
  id: "applyConditionToRequest(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "applyConditionToRequest(HttpURLConnection request)"
  nameWithType: "AccessCondition.applyConditionToRequest(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Applies the access conditions to the request."
  syntax:
    content: "public void applyConditionToRequest(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "A <code>java.net.HttpURLConnection</code> object that represents the request \n            to which the condition is being applied."
- uid: "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest(java.net.HttpURLConnection)"
  id: "applyLeaseConditionToRequest(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "applyLeaseConditionToRequest(HttpURLConnection request)"
  nameWithType: "AccessCondition.applyLeaseConditionToRequest(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Applies the lease access condition to the request."
  syntax:
    content: "public void applyLeaseConditionToRequest(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "A <code>java.net.HttpURLConnection</code> object that represents the request \n            to which the condition is being applied."
- uid: "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest(java.net.HttpURLConnection)"
  id: "applySequenceConditionToRequest(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "applySequenceConditionToRequest(HttpURLConnection request)"
  nameWithType: "AccessCondition.applySequenceConditionToRequest(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Applies the sequence number access conditions to the request."
  syntax:
    content: "public void applySequenceConditionToRequest(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "A <code>java.net.HttpURLConnection</code> object that represents the request \n            to which the condition is being applied."
- uid: "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest(java.net.HttpURLConnection)"
  id: "applySourceConditionToRequest(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "applySourceConditionToRequest(HttpURLConnection request)"
  nameWithType: "AccessCondition.applySourceConditionToRequest(HttpURLConnection request)"
  fullName: "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest(HttpURLConnection request)"
  overload: "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Applies the source access conditions to the request."
  syntax:
    content: "public void applySourceConditionToRequest(HttpURLConnection request)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
      description: "A <code>java.net.HttpURLConnection</code> object that represents the request \n            to which the condition is being applied."
- uid: "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition()"
  id: "generateEmptyCondition()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateEmptyCondition()"
  nameWithType: "AccessCondition.generateEmptyCondition()"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition()"
  overload: "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Generates a new empty AccessCondition.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateEmptyCondition()"
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that has no conditions set."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition()"
  id: "generateIfExistsCondition()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfExistsCondition()"
  nameWithType: "AccessCondition.generateIfExistsCondition()"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition()"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource exists on the service.\n\nSetting this access condition modifies the request to include the HTTP *If-Match* conditional header.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfExistsCondition()"
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the if exists condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(java.lang.String)"
  id: "generateIfMatchCondition(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfMatchCondition(String etag)"
  nameWithType: "AccessCondition.generateIfMatchCondition(String etag)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(String etag)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource's ETag value matches the specified ETag value.\n\nSetting this access condition modifies the request to include the HTTP *If-Match* conditional header. If this access condition is set, the operation is performed only if the ETag of the resource matches the specified ETag.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfMatchCondition(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the ETag value to check."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Match</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition(java.util.Date)"
  id: "generateIfModifiedSinceCondition(java.util.Date)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfModifiedSinceCondition(Date lastMotified)"
  nameWithType: "AccessCondition.generateIfModifiedSinceCondition(Date lastMotified)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition(Date lastMotified)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource has been modified since the specified time.\n\nSetting this access condition modifies the request to include the HTTP *If-Modified-Since* conditional header. If this access condition is set, the operation is performed only if the resource has been modified since the specified time.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfModifiedSinceCondition(Date lastMotified)"
    parameters:
    - id: "lastMotified"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the last-modified time to check for the resource."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Modified-Since</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(java.lang.String)"
  id: "generateIfNoneMatchCondition(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfNoneMatchCondition(String etag)"
  nameWithType: "AccessCondition.generateIfNoneMatchCondition(String etag)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(String etag)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource's ETag value does not match the specified ETag value.\n\nSetting this access condition modifies the request to include the HTTP *If-None-Match* conditional header. If this access condition is set, the operation is performed only if the ETag of the resource does not match the specified ETag.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfNoneMatchCondition(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the ETag value to check."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-None-Match</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()"
  id: "generateIfNotExistsCondition()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfNotExistsCondition()"
  nameWithType: "AccessCondition.generateIfNotExistsCondition()"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource does not exist on the service.\n\nSetting this access condition modifies the request to include the HTTP *If-None-Match* conditional header.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfNotExistsCondition()"
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the if not exists condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition(java.util.Date)"
  id: "generateIfNotModifiedSinceCondition(java.util.Date)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfNotModifiedSinceCondition(Date lastMotified)"
  nameWithType: "AccessCondition.generateIfNotModifiedSinceCondition(Date lastMotified)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition(Date lastMotified)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource has not been modified since the specified time.\n\nSetting this access condition modifies the request to include the HTTP *If-Unmodified-Since* conditional header. If this access condition is set, the operation is performed only if the resource has not been modified since the specified time.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateIfNotModifiedSinceCondition(Date lastMotified)"
    parameters:
    - id: "lastMotified"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the last-modified time to check for the resource."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Unmodified-Since</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition(long)"
  id: "generateIfSequenceNumberEqualCondition(long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfSequenceNumberEqualCondition(long sequenceNumber)"
  nameWithType: "AccessCondition.generateIfSequenceNumberEqualCondition(long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition(long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if resource's current sequence number is equal to the specified value. This condition only applies to page blobs."
  syntax:
    content: "public static AccessCondition generateIfSequenceNumberEqualCondition(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
      description: "The value to compare to the current sequence number."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Sequence-Number-EQ</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition(long)"
  id: "generateIfSequenceNumberLessThanCondition(long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfSequenceNumberLessThanCondition(long sequenceNumber)"
  nameWithType: "AccessCondition.generateIfSequenceNumberLessThanCondition(long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition(long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if resource's current sequence number is less than the specified value. This condition only applies to page blobs."
  syntax:
    content: "public static AccessCondition generateIfSequenceNumberLessThanCondition(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
      description: "The value to compare to the current sequence number."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Sequence-Number-LT</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition(long)"
  id: "generateIfSequenceNumberLessThanOrEqualCondition(long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateIfSequenceNumberLessThanOrEqualCondition(long sequenceNumber)"
  nameWithType: "AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition(long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition(long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if resource's current sequence number is less than or equal to the specified value. This condition only applies to page blobs."
  syntax:
    content: "public static AccessCondition generateIfSequenceNumberLessThanOrEqualCondition(long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "long"
      description: "The value to compare to the current sequence number."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the <i>If-Sequence-Number-LE</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition(java.lang.String)"
  id: "generateLeaseCondition(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "generateLeaseCondition(String leaseID)"
  nameWithType: "AccessCondition.generateLeaseCondition(String leaseID)"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition(String leaseID)"
  overload: "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns an access condition such that an operation will be performed only if the resource is accessible under the specified lease ID.\n\nFor more information, see [Specifying Conditional Headers for Blob Service Operations][].\n\n\n[Specifying Conditional Headers for Blob Service Operations]: http://go.microsoft.com/fwlink/?LinkID=224642"
  syntax:
    content: "public static AccessCondition generateLeaseCondition(String leaseID)"
    parameters:
    - id: "leaseID"
      type: "java.lang.String"
      description: "The lease ID to specify."
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <code>AccessCondition</code> object that represents the lease condition."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual()"
  id: "getIfAppendPositionEqual()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfAppendPositionEqual()"
  nameWithType: "AccessCondition.getIfAppendPositionEqual()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the value for a conditional header used only for append operations. A number indicating the byte offset to check for. The append will succeed only if the end position is equal to this number."
  syntax:
    content: "public Long getIfAppendPositionEqual()"
    return:
      type: "java.lang.Long"
      description: "The append position number, or <code>null</code> if no condition exists."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfMatch()"
  id: "getIfMatch()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfMatch()"
  nameWithType: "AccessCondition.getIfMatch()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfMatch()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfMatch*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the ETag when the *If-Match* condition is set."
  syntax:
    content: "public String getIfMatch()"
    return:
      type: "java.lang.String"
      description: "The ETag when the <i>If-Match</i> condition is set; otherwise, null."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual()"
  id: "getIfMaxSizeLessThanOrEqual()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfMaxSizeLessThanOrEqual()"
  nameWithType: "AccessCondition.getIfMaxSizeLessThanOrEqual()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the value for a conditional header used only for append operations. A number that indicates the maximum length in bytes to restrict the blob to when committing the block."
  syntax:
    content: "public Long getIfMaxSizeLessThanOrEqual()"
    return:
      type: "java.lang.Long"
      description: "The maximum size, or <code>null</code> if no condition exists."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate()"
  id: "getIfModifiedSinceDate()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfModifiedSinceDate()"
  nameWithType: "AccessCondition.getIfModifiedSinceDate()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the *If-Modified-Since* date."
  syntax:
    content: "public Date getIfModifiedSinceDate()"
    return:
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the <i>If-Modified-Since</i> date."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch()"
  id: "getIfNoneMatch()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfNoneMatch()"
  nameWithType: "AccessCondition.getIfNoneMatch()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the ETag when the If-None-Match condition is set."
  syntax:
    content: "public String getIfNoneMatch()"
    return:
      type: "java.lang.String"
      description: "The ETag when the If-None-Match condition is set; otherwise, null."
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual()"
  id: "getIfSequenceNumberEqual()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfSequenceNumberEqual()"
  nameWithType: "AccessCondition.getIfSequenceNumberEqual()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the sequence number when the sequence number equal condition is set. This condition is only applicable to page blobs."
  syntax:
    content: "public Long getIfSequenceNumberEqual()"
    return:
      type: "java.lang.Long"
      description: "The sequence number when the ifSequenceNumberEqual condition is set; otherwise, <code>null</code>"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan()"
  id: "getIfSequenceNumberLessThan()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfSequenceNumberLessThan()"
  nameWithType: "AccessCondition.getIfSequenceNumberLessThan()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the sequence number when the sequence number less than condition is set. This condition is only applicable to page blobs."
  syntax:
    content: "public Long getIfSequenceNumberLessThan()"
    return:
      type: "java.lang.Long"
      description: "The sequence number when the ifSequenceNumberLessThan condition is set; otherwise, <code>null</code>"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual()"
  id: "getIfSequenceNumberLessThanOrEqual()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfSequenceNumberLessThanOrEqual()"
  nameWithType: "AccessCondition.getIfSequenceNumberLessThanOrEqual()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the sequence number when the sequence number less than or equal condition is set. This condition is only applicable to page blobs."
  syntax:
    content: "public Long getIfSequenceNumberLessThanOrEqual()"
    return:
      type: "java.lang.Long"
      description: "The sequence number when the ifSequenceNumberLessThanOrEqual condition is set; otherwise, <code>null</code>"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate()"
  id: "getIfUnmodifiedSinceDate()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getIfUnmodifiedSinceDate()"
  nameWithType: "AccessCondition.getIfUnmodifiedSinceDate()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate()"
  overload: "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the *If-Unmodified-Since* date."
  syntax:
    content: "public Date getIfUnmodifiedSinceDate()"
    return:
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the <i>If-Unmodified-Since</i> date."
- uid: "com.microsoft.azure.storage.AccessCondition.getLeaseID()"
  id: "getLeaseID()"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "getLeaseID()"
  nameWithType: "AccessCondition.getLeaseID()"
  fullName: "com.microsoft.azure.storage.AccessCondition.getLeaseID()"
  overload: "com.microsoft.azure.storage.AccessCondition.getLeaseID*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the lease ID."
  syntax:
    content: "public String getLeaseID()"
    return:
      type: "java.lang.String"
      description: "The lease ID."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual(java.lang.Long)"
  id: "setIfAppendPositionEqual(java.lang.Long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfAppendPositionEqual(Long ifAppendPositionEqual)"
  nameWithType: "AccessCondition.setIfAppendPositionEqual(Long ifAppendPositionEqual)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual(Long ifAppendPositionEqual)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the value for a conditional header used only for append operations. A number indicating the byte offset to check for. The append will succeed only if the end position is equal to this number."
  syntax:
    content: "public void setIfAppendPositionEqual(Long ifAppendPositionEqual)"
    parameters:
    - id: "ifAppendPositionEqual"
      type: "java.lang.Long"
      description: "The append position number, or <code>null</code> if no condition exists."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfMatch(java.lang.String)"
  id: "setIfMatch(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfMatch(String etag)"
  nameWithType: "AccessCondition.setIfMatch(String etag)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfMatch(String etag)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfMatch*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the ETag for the *If-Match* condition."
  syntax:
    content: "public void setIfMatch(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "The ETag to set for the <i>If-Match</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual(java.lang.Long)"
  id: "setIfMaxSizeLessThanOrEqual(java.lang.Long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfMaxSizeLessThanOrEqual(Long ifMaxSizeLessThanOrEqual)"
  nameWithType: "AccessCondition.setIfMaxSizeLessThanOrEqual(Long ifMaxSizeLessThanOrEqual)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual(Long ifMaxSizeLessThanOrEqual)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the value for a conditional header used only for append operations. A number that indicates the maximum length in bytes to restrict the blob to when committing the block."
  syntax:
    content: "public void setIfMaxSizeLessThanOrEqual(Long ifMaxSizeLessThanOrEqual)"
    parameters:
    - id: "ifMaxSizeLessThanOrEqual"
      type: "java.lang.Long"
      description: "The maximum size, or <code>null</code> if no condition exists."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate(java.util.Date)"
  id: "setIfModifiedSinceDate(java.util.Date)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfModifiedSinceDate(Date ifModifiedSinceDate)"
  nameWithType: "AccessCondition.setIfModifiedSinceDate(Date ifModifiedSinceDate)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate(Date ifModifiedSinceDate)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the *If-Modified-Since* date."
  syntax:
    content: "public void setIfModifiedSinceDate(Date ifModifiedSinceDate)"
    parameters:
    - id: "ifModifiedSinceDate"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the <i>If-Modified-Since</i> to set."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch(java.lang.String)"
  id: "setIfNoneMatch(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfNoneMatch(String etag)"
  nameWithType: "AccessCondition.setIfNoneMatch(String etag)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch(String etag)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the ETag for the *If-None-Match* condition."
  syntax:
    content: "public void setIfNoneMatch(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "The ETag to set for the <i>If-None-Match</i> condition."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual(java.lang.Long)"
  id: "setIfSequenceNumberEqual(java.lang.Long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfSequenceNumberEqual(Long sequenceNumber)"
  nameWithType: "AccessCondition.setIfSequenceNumberEqual(Long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual(Long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the sequence number for the sequence number equal to condition. This condition is only applicable to page blobs."
  syntax:
    content: "public void setIfSequenceNumberEqual(Long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "java.lang.Long"
      description: "The sequence number to set the if sequence number equal condition to."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan(java.lang.Long)"
  id: "setIfSequenceNumberLessThan(java.lang.Long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfSequenceNumberLessThan(Long sequenceNumber)"
  nameWithType: "AccessCondition.setIfSequenceNumberLessThan(Long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan(Long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the sequence number for the sequence number less than condition. This condition is only applicable to page blobs."
  syntax:
    content: "public void setIfSequenceNumberLessThan(Long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "java.lang.Long"
      description: "The sequence number to set the if sequence number less than condition to."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual(java.lang.Long)"
  id: "setIfSequenceNumberLessThanOrEqual(java.lang.Long)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfSequenceNumberLessThanOrEqual(Long sequenceNumber)"
  nameWithType: "AccessCondition.setIfSequenceNumberLessThanOrEqual(Long sequenceNumber)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual(Long sequenceNumber)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the sequence number for the sequence number less than or equal to condition. This condition is only applicable to page blobs."
  syntax:
    content: "public void setIfSequenceNumberLessThanOrEqual(Long sequenceNumber)"
    parameters:
    - id: "sequenceNumber"
      type: "java.lang.Long"
      description: "The sequence number to set the if sequence number less than or equal condition to."
- uid: "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate(java.util.Date)"
  id: "setIfUnmodifiedSinceDate(java.util.Date)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setIfUnmodifiedSinceDate(Date ifUnmodifiedSinceDate)"
  nameWithType: "AccessCondition.setIfUnmodifiedSinceDate(Date ifUnmodifiedSinceDate)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate(Date ifUnmodifiedSinceDate)"
  overload: "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the *If-Unmodified-Since* date."
  syntax:
    content: "public void setIfUnmodifiedSinceDate(Date ifUnmodifiedSinceDate)"
    parameters:
    - id: "ifUnmodifiedSinceDate"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the <i>If-Unmodified-Since</i> to set."
- uid: "com.microsoft.azure.storage.AccessCondition.setLeaseID(java.lang.String)"
  id: "setLeaseID(java.lang.String)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "setLeaseID(String leaseID)"
  nameWithType: "AccessCondition.setLeaseID(String leaseID)"
  fullName: "com.microsoft.azure.storage.AccessCondition.setLeaseID(String leaseID)"
  overload: "com.microsoft.azure.storage.AccessCondition.setLeaseID*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the lease ID."
  syntax:
    content: "public void setLeaseID(String leaseID)"
    parameters:
    - id: "leaseID"
      type: "java.lang.String"
      description: "The lease ID to set."
- uid: "com.microsoft.azure.storage.AccessCondition.verifyConditional(java.lang.String,java.util.Date)"
  id: "verifyConditional(java.lang.String,java.util.Date)"
  parent: "com.microsoft.azure.storage.AccessCondition"
  langs:
  - "java"
  name: "verifyConditional(String etag, Date lastModified)"
  nameWithType: "AccessCondition.verifyConditional(String etag, Date lastModified)"
  fullName: "com.microsoft.azure.storage.AccessCondition.verifyConditional(String etag, Date lastModified)"
  overload: "com.microsoft.azure.storage.AccessCondition.verifyConditional*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Verifies the condition is satisfied."
  syntax:
    content: "public boolean verifyConditional(String etag, Date lastModified)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the ETag to check."
    - id: "lastModified"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object that represents the last modified date/time."
    return:
      type: "boolean"
      description: "<code>true</code> if the condition is satisfied; otherwise, <code>false</code>."
references:
- uid: "com.microsoft.azure.storage.AccessCondition.AccessCondition*"
  name: "AccessCondition"
  nameWithType: "AccessCondition.AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.AccessCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition*"
  name: "generateEmptyCondition"
  nameWithType: "AccessCondition.generateEmptyCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateEmptyCondition"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition*"
  name: "generateIfMatchCondition"
  nameWithType: "AccessCondition.generateIfMatchCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition"
  package: "com.microsoft.azure.storage"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition*"
  name: "generateIfModifiedSinceCondition"
  nameWithType: "AccessCondition.generateIfModifiedSinceCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfModifiedSinceCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition*"
  name: "generateIfNoneMatchCondition"
  nameWithType: "AccessCondition.generateIfNoneMatchCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition*"
  name: "generateIfNotModifiedSinceCondition"
  nameWithType: "AccessCondition.generateIfNotModifiedSinceCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNotModifiedSinceCondition"
  package: "com.microsoft.azure.storage"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition*"
  name: "generateIfSequenceNumberLessThanOrEqualCondition"
  nameWithType: "AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanOrEqualCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition*"
  name: "generateIfSequenceNumberLessThanCondition"
  nameWithType: "AccessCondition.generateIfSequenceNumberLessThanCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberLessThanCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition*"
  name: "generateIfSequenceNumberEqualCondition"
  nameWithType: "AccessCondition.generateIfSequenceNumberEqualCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfSequenceNumberEqualCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition*"
  name: "generateLeaseCondition"
  nameWithType: "AccessCondition.generateLeaseCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateLeaseCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition*"
  name: "generateIfExistsCondition"
  nameWithType: "AccessCondition.generateIfExistsCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfExistsCondition"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition*"
  name: "generateIfNotExistsCondition"
  nameWithType: "AccessCondition.generateIfNotExistsCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition"
  package: "com.microsoft.azure.storage"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest*"
  name: "applyConditionToRequest"
  nameWithType: "AccessCondition.applyConditionToRequest"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyConditionToRequest"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest*"
  name: "applySourceConditionToRequest"
  nameWithType: "AccessCondition.applySourceConditionToRequest"
  fullName: "com.microsoft.azure.storage.AccessCondition.applySourceConditionToRequest"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest*"
  name: "applyAppendConditionToRequest"
  nameWithType: "AccessCondition.applyAppendConditionToRequest"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyAppendConditionToRequest"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest*"
  name: "applyLeaseConditionToRequest"
  nameWithType: "AccessCondition.applyLeaseConditionToRequest"
  fullName: "com.microsoft.azure.storage.AccessCondition.applyLeaseConditionToRequest"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest*"
  name: "applySequenceConditionToRequest"
  nameWithType: "AccessCondition.applySequenceConditionToRequest"
  fullName: "com.microsoft.azure.storage.AccessCondition.applySequenceConditionToRequest"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual*"
  name: "getIfAppendPositionEqual"
  nameWithType: "AccessCondition.getIfAppendPositionEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfAppendPositionEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfMatch*"
  name: "getIfMatch"
  nameWithType: "AccessCondition.getIfMatch"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfMatch"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual*"
  name: "getIfMaxSizeLessThanOrEqual"
  nameWithType: "AccessCondition.getIfMaxSizeLessThanOrEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfMaxSizeLessThanOrEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate*"
  name: "getIfModifiedSinceDate"
  nameWithType: "AccessCondition.getIfModifiedSinceDate"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfModifiedSinceDate"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch*"
  name: "getIfNoneMatch"
  nameWithType: "AccessCondition.getIfNoneMatch"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfNoneMatch"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate*"
  name: "getIfUnmodifiedSinceDate"
  nameWithType: "AccessCondition.getIfUnmodifiedSinceDate"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfUnmodifiedSinceDate"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getLeaseID*"
  name: "getLeaseID"
  nameWithType: "AccessCondition.getLeaseID"
  fullName: "com.microsoft.azure.storage.AccessCondition.getLeaseID"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual*"
  name: "getIfSequenceNumberLessThanOrEqual"
  nameWithType: "AccessCondition.getIfSequenceNumberLessThanOrEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThanOrEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan*"
  name: "getIfSequenceNumberLessThan"
  nameWithType: "AccessCondition.getIfSequenceNumberLessThan"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberLessThan"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual*"
  name: "getIfSequenceNumberEqual"
  nameWithType: "AccessCondition.getIfSequenceNumberEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.getIfSequenceNumberEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual*"
  name: "setIfAppendPositionEqual"
  nameWithType: "AccessCondition.setIfAppendPositionEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfAppendPositionEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfMatch*"
  name: "setIfMatch"
  nameWithType: "AccessCondition.setIfMatch"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfMatch"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual*"
  name: "setIfMaxSizeLessThanOrEqual"
  nameWithType: "AccessCondition.setIfMaxSizeLessThanOrEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfMaxSizeLessThanOrEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate*"
  name: "setIfModifiedSinceDate"
  nameWithType: "AccessCondition.setIfModifiedSinceDate"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfModifiedSinceDate"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch*"
  name: "setIfNoneMatch"
  nameWithType: "AccessCondition.setIfNoneMatch"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfNoneMatch"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate*"
  name: "setIfUnmodifiedSinceDate"
  nameWithType: "AccessCondition.setIfUnmodifiedSinceDate"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfUnmodifiedSinceDate"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setLeaseID*"
  name: "setLeaseID"
  nameWithType: "AccessCondition.setLeaseID"
  fullName: "com.microsoft.azure.storage.AccessCondition.setLeaseID"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual*"
  name: "setIfSequenceNumberLessThanOrEqual"
  nameWithType: "AccessCondition.setIfSequenceNumberLessThanOrEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThanOrEqual"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan*"
  name: "setIfSequenceNumberLessThan"
  nameWithType: "AccessCondition.setIfSequenceNumberLessThan"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberLessThan"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual*"
  name: "setIfSequenceNumberEqual"
  nameWithType: "AccessCondition.setIfSequenceNumberEqual"
  fullName: "com.microsoft.azure.storage.AccessCondition.setIfSequenceNumberEqual"
  package: "com.microsoft.azure.storage"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.AccessCondition.verifyConditional*"
  name: "verifyConditional"
  nameWithType: "AccessCondition.verifyConditional"
  fullName: "com.microsoft.azure.storage.AccessCondition.verifyConditional"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
