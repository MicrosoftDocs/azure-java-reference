### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  id: "FilesService"
  parent: "com.azure.storage.file.share.implementation"
  children:
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "FilesImpl.FilesService"
  nameWithType: "FilesImpl.FilesService"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  type: "Interface"
  package: "com.azure.storage.file.share.implementation"
  summary: "The interface defining all the services for AzureFileStorageFiles to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface FilesImpl.FilesService"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "abortCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "abortCopy(String shareName, String filePath, String url, String copyId, Integer timeout, String copyActionAbortConstant, String version, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.abortCopy(String shareName, String filePath, String url, String copyId, Integer timeout, String copyActionAbortConstant, String version, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy(String shareName, String filePath, String url, String copyId, Integer timeout, String copyActionAbortConstant, String version, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesAbortCopyResponse> abortCopy(String shareName, String filePath, String url, String copyId, Integer timeout, String copyActionAbortConstant, String version, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "copyId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "copyActionAbortConstant"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "create(String shareName, String filePath, String url, Integer timeout, String version, long fileContentLength, String fileTypeConstant, Map<String,String> metadata, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  nameWithType: "FilesImpl.FilesService.create(String shareName, String filePath, String url, Integer timeout, String version, long fileContentLength, String fileTypeConstant, Map<String,String> metadata, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create(String shareName, String filePath, String url, Integer timeout, String version, long fileContentLength, String fileTypeConstant, Map<String,String> metadata, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesCreateResponse> create(String shareName, String filePath, String url, Integer timeout, String version, long fileContentLength, String fileTypeConstant, Map<String,String> metadata, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "fileContentLength"
      type: "long"
    - id: "fileTypeConstant"
      type: "java.lang.String"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "filePermission"
      type: "java.lang.String"
    - id: "filePermissionKey"
      type: "java.lang.String"
    - id: "fileAttributes"
      type: "java.lang.String"
    - id: "fileCreationTime"
      type: "java.lang.String"
    - id: "fileLastWriteTime"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesCreateResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "delete(String shareName, String filePath, String url, Integer timeout, String version, Context context)"
  nameWithType: "FilesImpl.FilesService.delete(String shareName, String filePath, String url, Integer timeout, String version, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete(String shareName, String filePath, String url, Integer timeout, String version, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesDeleteResponse> delete(String shareName, String filePath, String url, Integer timeout, String version, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDeleteResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  id: "download(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "download(String shareName, String filePath, String url, Integer timeout, String version, String range, Boolean rangeGetContentMD5, Context context)"
  nameWithType: "FilesImpl.FilesService.download(String shareName, String filePath, String url, Integer timeout, String version, String range, Boolean rangeGetContentMD5, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download(String shareName, String filePath, String url, Integer timeout, String version, String range, Boolean rangeGetContentMD5, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesDownloadResponse> download(String shareName, String filePath, String url, Integer timeout, String version, String range, Boolean rangeGetContentMD5, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "range"
      type: "java.lang.String"
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDownloadResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "forceCloseHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "forceCloseHandles(String shareName, String filePath, String url, Integer timeout, String marker, String sharesnapshot, String handleId, String version, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.forceCloseHandles(String shareName, String filePath, String url, Integer timeout, String marker, String sharesnapshot, String handleId, String version, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles(String shareName, String filePath, String url, Integer timeout, String marker, String sharesnapshot, String handleId, String version, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesForceCloseHandlesResponse> forceCloseHandles(String shareName, String filePath, String url, Integer timeout, String marker, String sharesnapshot, String handleId, String version, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "marker"
      type: "java.lang.String"
    - id: "sharesnapshot"
      type: "java.lang.String"
    - id: "handleId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  id: "getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "getProperties(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, Context context)"
  nameWithType: "FilesImpl.FilesService.getProperties(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesGetPropertiesResponse> getProperties(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "sharesnapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getRangeList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "getRangeList(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, String range, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.getRangeList(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, String range, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, String range, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesGetRangeListResponse> getRangeList(String shareName, String filePath, String url, String sharesnapshot, Integer timeout, String version, String range, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "sharesnapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "range"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listHandles(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "listHandles(String shareName, String filePath, String url, String marker, Integer maxresults, Integer timeout, String sharesnapshot, String version, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.listHandles(String shareName, String filePath, String url, String marker, Integer maxresults, Integer timeout, String sharesnapshot, String version, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles(String shareName, String filePath, String url, String marker, Integer maxresults, Integer timeout, String sharesnapshot, String version, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesListHandlesResponse> listHandles(String shareName, String filePath, String url, String marker, Integer maxresults, Integer timeout, String sharesnapshot, String version, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "marker"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "sharesnapshot"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesListHandlesResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "setHTTPHeaders(String shareName, String filePath, String url, Integer timeout, String version, Long fileContentLength, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String comp, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  nameWithType: "FilesImpl.FilesService.setHTTPHeaders(String shareName, String filePath, String url, Integer timeout, String version, Long fileContentLength, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String comp, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders(String shareName, String filePath, String url, Integer timeout, String version, Long fileContentLength, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String comp, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesSetHTTPHeadersResponse> setHTTPHeaders(String shareName, String filePath, String url, Integer timeout, String version, Long fileContentLength, String filePermission, String filePermissionKey, String fileAttributes, String fileCreationTime, String fileLastWriteTime, String comp, String contentType, String contentEncoding, String contentLanguage, String cacheControl, String contentMd5, String contentDisposition, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "fileContentLength"
      type: "java.lang.Long"
    - id: "filePermission"
      type: "java.lang.String"
    - id: "filePermissionKey"
      type: "java.lang.String"
    - id: "fileAttributes"
      type: "java.lang.String"
    - id: "fileCreationTime"
      type: "java.lang.String"
    - id: "fileLastWriteTime"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "setMetadata(String shareName, String filePath, String url, Integer timeout, Map<String,String> metadata, String version, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.setMetadata(String shareName, String filePath, String url, Integer timeout, Map<String,String> metadata, String version, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata(String shareName, String filePath, String url, Integer timeout, Map<String,String> metadata, String version, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesSetMetadataResponse> setMetadata(String shareName, String filePath, String url, Integer timeout, Map<String,String> metadata, String version, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  id: "startCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "startCopy(String shareName, String filePath, String url, Integer timeout, String version, Map<String,String> metadata, String copySource, Context context)"
  nameWithType: "FilesImpl.FilesService.startCopy(String shareName, String filePath, String url, Integer timeout, String version, Map<String,String> metadata, String copySource, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy(String shareName, String filePath, String url, Integer timeout, String version, Map<String,String> metadata, String copySource, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesStartCopyResponse> startCopy(String shareName, String filePath, String url, Integer timeout, String version, Map<String,String> metadata, String copySource, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "copySource"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesStartCopyResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "uploadRange(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Integer,java.lang.String,com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType,long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "uploadRange(String shareName, String filePath, String url, Flux<ByteBuffer> optionalbody, Integer timeout, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, String contentMD5, String version, String comp, Context context)"
  nameWithType: "FilesImpl.FilesService.uploadRange(String shareName, String filePath, String url, Flux<ByteBuffer> optionalbody, Integer timeout, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, String contentMD5, String version, String comp, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange(String shareName, String filePath, String url, Flux<ByteBuffer> optionalbody, Integer timeout, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, String contentMD5, String version, String comp, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesUploadRangeResponse> uploadRange(String shareName, String filePath, String url, Flux<ByteBuffer> optionalbody, Integer timeout, String range, ShareFileRangeWriteType fileRangeWrite, long contentLength, String contentMD5, String version, String comp, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "optionalbody"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "fileRangeWrite"
      type: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
    - id: "contentLength"
      type: "long"
    - id: "contentMD5"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse>"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "uploadRangeFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.implementation.FilesImpl.FilesService"
  langs:
  - "java"
  name: "uploadRangeFromURL(String shareName, String filePath, String url, Integer timeout, String range, String copySource, String sourceRange, String fileRangeWriteFromUrl, long contentLength, String sourceContentCrc64, String version, String comp, String sourceIfMatchCrc64, String sourceIfNoneMatchCrc64, Context context)"
  nameWithType: "FilesImpl.FilesService.uploadRangeFromURL(String shareName, String filePath, String url, Integer timeout, String range, String copySource, String sourceRange, String fileRangeWriteFromUrl, long contentLength, String sourceContentCrc64, String version, String comp, String sourceIfMatchCrc64, String sourceIfNoneMatchCrc64, Context context)"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL(String shareName, String filePath, String url, Integer timeout, String range, String copySource, String sourceRange, String fileRangeWriteFromUrl, long contentLength, String sourceContentCrc64, String version, String comp, String sourceIfMatchCrc64, String sourceIfNoneMatchCrc64, Context context)"
  overload: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL*"
  type: "Method"
  package: "com.azure.storage.file.share.implementation"
  syntax:
    content: "public abstract Mono<FilesUploadRangeFromURLResponse> uploadRangeFromURL(String shareName, String filePath, String url, Integer timeout, String range, String copySource, String sourceRange, String fileRangeWriteFromUrl, long contentLength, String sourceContentCrc64, String version, String comp, String sourceIfMatchCrc64, String sourceIfNoneMatchCrc64, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
    - id: "filePath"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "copySource"
      type: "java.lang.String"
    - id: "sourceRange"
      type: "java.lang.String"
    - id: "fileRangeWriteFromUrl"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "sourceContentCrc64"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "sourceIfMatchCrc64"
      type: "java.lang.String"
    - id: "sourceIfNoneMatchCrc64"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
    name: "FilesCreateResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create*"
  name: "create"
  nameWithType: "FilesImpl.FilesService.create"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.create"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDownloadResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
    name: "FilesDownloadResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download*"
  name: "download"
  nameWithType: "FilesImpl.FilesService.download"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.download"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
    name: "FilesGetPropertiesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties*"
  name: "getProperties"
  nameWithType: "FilesImpl.FilesService.getProperties"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getProperties"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
    name: "FilesDeleteResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete*"
  name: "delete"
  nameWithType: "FilesImpl.FilesService.delete"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.delete"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
    name: "FilesSetHTTPHeadersResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders*"
  name: "setHTTPHeaders"
  nameWithType: "FilesImpl.FilesService.setHTTPHeaders"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setHTTPHeaders"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
    name: "FilesSetMetadataResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata*"
  name: "setMetadata"
  nameWithType: "FilesImpl.FilesService.setMetadata"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.setMetadata"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
  name: "ShareFileRangeWriteType"
  nameWithType: "ShareFileRangeWriteType"
  fullName: "com.azure.storage.file.share.implementation.models.ShareFileRangeWriteType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
    name: "FilesUploadRangeResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange*"
  name: "uploadRange"
  nameWithType: "FilesImpl.FilesService.uploadRange"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRange"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
    name: "FilesUploadRangeFromURLResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL*"
  name: "uploadRangeFromURL"
  nameWithType: "FilesImpl.FilesService.uploadRangeFromURL"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.uploadRangeFromURL"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
    name: "FilesGetRangeListResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList*"
  name: "getRangeList"
  nameWithType: "FilesImpl.FilesService.getRangeList"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.getRangeList"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesStartCopyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
    name: "FilesStartCopyResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy*"
  name: "startCopy"
  nameWithType: "FilesImpl.FilesService.startCopy"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.startCopy"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
    name: "FilesAbortCopyResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy*"
  name: "abortCopy"
  nameWithType: "FilesImpl.FilesService.abortCopy"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.abortCopy"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesListHandlesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
    name: "FilesListHandlesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles*"
  name: "listHandles"
  nameWithType: "FilesImpl.FilesService.listHandles"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.listHandles"
  package: "com.azure.storage.file.share.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
    name: "FilesForceCloseHandlesResponse"
    fullName: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles*"
  name: "forceCloseHandles"
  nameWithType: "FilesImpl.FilesService.forceCloseHandles"
  fullName: "com.azure.storage.file.share.implementation.FilesImpl.FilesService.forceCloseHandles"
  package: "com.azure.storage.file.share.implementation"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
  name: "FilesCreateResponse"
  nameWithType: "FilesCreateResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesCreateResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
  name: "FilesDownloadResponse"
  nameWithType: "FilesDownloadResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesDownloadResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
  name: "FilesGetPropertiesResponse"
  nameWithType: "FilesGetPropertiesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesGetPropertiesResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
  name: "FilesDeleteResponse"
  nameWithType: "FilesDeleteResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesDeleteResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
  name: "FilesSetHTTPHeadersResponse"
  nameWithType: "FilesSetHTTPHeadersResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesSetHTTPHeadersResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
  name: "FilesSetMetadataResponse"
  nameWithType: "FilesSetMetadataResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesSetMetadataResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
  name: "FilesUploadRangeResponse"
  nameWithType: "FilesUploadRangeResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
  name: "FilesUploadRangeFromURLResponse"
  nameWithType: "FilesUploadRangeFromURLResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesUploadRangeFromURLResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
  name: "FilesGetRangeListResponse"
  nameWithType: "FilesGetRangeListResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesGetRangeListResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
  name: "FilesStartCopyResponse"
  nameWithType: "FilesStartCopyResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesStartCopyResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
  name: "FilesAbortCopyResponse"
  nameWithType: "FilesAbortCopyResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesAbortCopyResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
  name: "FilesListHandlesResponse"
  nameWithType: "FilesListHandlesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesListHandlesResponse"
- uid: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
  name: "FilesForceCloseHandlesResponse"
  nameWithType: "FilesForceCloseHandlesResponse"
  fullName: "com.azure.storage.file.share.implementation.models.FilesForceCloseHandlesResponse"
