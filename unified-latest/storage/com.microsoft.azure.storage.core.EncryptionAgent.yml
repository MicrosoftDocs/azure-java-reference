### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.EncryptionAgent"
  id: "EncryptionAgent"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent()"
  - "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent(java.lang.String,com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  - "com.microsoft.azure.storage.core.EncryptionAgent.deserialize(com.fasterxml.jackson.core.JsonParser)"
  - "com.microsoft.azure.storage.core.EncryptionAgent.encryptionAlgorithm"
  - "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm()"
  - "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol()"
  - "com.microsoft.azure.storage.core.EncryptionAgent.protocol"
  - "com.microsoft.azure.storage.core.EncryptionAgent.serialize(com.fasterxml.jackson.core.JsonGenerator)"
  - "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm(com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  - "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol(java.lang.String)"
  langs:
  - "java"
  name: "EncryptionAgent"
  nameWithType: "EncryptionAgent"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. Represents the encryption agent stored on the service. It consists of the encryption protocol version and encryption algorithm used."
  syntax:
    content: "public class EncryptionAgent"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent()"
  id: "EncryptionAgent()"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "EncryptionAgent()"
  nameWithType: "EncryptionAgent.EncryptionAgent()"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent()"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.core.EncryptionAgent\" data-throw-if-not-resolved=\"false\">EncryptionAgent</xref> class."
  syntax:
    content: "public EncryptionAgent()"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent(java.lang.String,com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  id: "EncryptionAgent(java.lang.String,com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "EncryptionAgent(String protocol, EncryptionAlgorithm algorithm)"
  nameWithType: "EncryptionAgent.EncryptionAgent(String protocol, EncryptionAlgorithm algorithm)"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent(String protocol, EncryptionAlgorithm algorithm)"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.core.EncryptionAgent\" data-throw-if-not-resolved=\"false\">EncryptionAgent</xref> class using the specified protocol version and the algorithm."
  syntax:
    content: "public EncryptionAgent(String protocol, EncryptionAlgorithm algorithm)"
    parameters:
    - id: "protocol"
      type: "java.lang.String"
      description: "The encryption protocol version."
    - id: "algorithm"
      type: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
      description: "The encryption algorithm."
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.deserialize(com.fasterxml.jackson.core.JsonParser)"
  id: "deserialize(com.fasterxml.jackson.core.JsonParser)"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "deserialize(JsonParser parser)"
  nameWithType: "EncryptionAgent.deserialize(JsonParser parser)"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.deserialize(JsonParser parser)"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.deserialize*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public static EncryptionAgent deserialize(JsonParser parser)"
    parameters:
    - id: "parser"
      type: "com.fasterxml.jackson.core.JsonParser"
    return:
      type: "com.microsoft.azure.storage.core.EncryptionAgent"
  exceptions:
  - type: "com.fasterxml.jackson.core.JsonParseException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.encryptionAlgorithm"
  id: "encryptionAlgorithm"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "encryptionAlgorithm"
  nameWithType: "EncryptionAgent.encryptionAlgorithm"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.encryptionAlgorithm"
  type: "Field"
  package: "com.microsoft.azure.storage.core"
  summary: "The algorithm used for encryption."
  syntax:
    content: "public EncryptionAlgorithm encryptionAlgorithm"
    return:
      type: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm()"
  id: "getEncryptionAlgorithm()"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "getEncryptionAlgorithm()"
  nameWithType: "EncryptionAgent.getEncryptionAlgorithm()"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm()"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the algorithm used for encryption."
  syntax:
    content: "public EncryptionAlgorithm getEncryptionAlgorithm()"
    return:
      type: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
      description: "The algorithm used for encryption."
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol()"
  id: "getProtocol()"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "getProtocol()"
  nameWithType: "EncryptionAgent.getProtocol()"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol()"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the protocol version used for encryption."
  syntax:
    content: "public String getProtocol()"
    return:
      type: "java.lang.String"
      description: "The protocol version used for encryption."
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.protocol"
  id: "protocol"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "protocol"
  nameWithType: "EncryptionAgent.protocol"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.protocol"
  type: "Field"
  package: "com.microsoft.azure.storage.core"
  summary: "The protocol version used for encryption."
  syntax:
    content: "public String protocol"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.serialize(com.fasterxml.jackson.core.JsonGenerator)"
  id: "serialize(com.fasterxml.jackson.core.JsonGenerator)"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "serialize(JsonGenerator generator)"
  nameWithType: "EncryptionAgent.serialize(JsonGenerator generator)"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.serialize(JsonGenerator generator)"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.serialize*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void serialize(JsonGenerator generator)"
    parameters:
    - id: "generator"
      type: "com.fasterxml.jackson.core.JsonGenerator"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm(com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  id: "setEncryptionAlgorithm(com.microsoft.azure.storage.core.EncryptionAlgorithm)"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "setEncryptionAlgorithm(EncryptionAlgorithm encryptionAlgorithm)"
  nameWithType: "EncryptionAgent.setEncryptionAlgorithm(EncryptionAlgorithm encryptionAlgorithm)"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm(EncryptionAlgorithm encryptionAlgorithm)"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Sets the algorithm used for encryption."
  syntax:
    content: "public void setEncryptionAlgorithm(EncryptionAlgorithm encryptionAlgorithm)"
    parameters:
    - id: "encryptionAlgorithm"
      type: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
      description: "The algorithm used for encryption."
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol(java.lang.String)"
  id: "setProtocol(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.EncryptionAgent"
  langs:
  - "java"
  name: "setProtocol(String protocol)"
  nameWithType: "EncryptionAgent.setProtocol(String protocol)"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol(String protocol)"
  overload: "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Sets the protocol version used for encryption."
  syntax:
    content: "public void setProtocol(String protocol)"
    parameters:
    - id: "protocol"
      type: "java.lang.String"
      description: "The protocol version used for encryption."
references:
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent*"
  name: "EncryptionAgent"
  nameWithType: "EncryptionAgent.EncryptionAgent"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.EncryptionAgent"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
  name: "EncryptionAlgorithm"
  nameWithType: "EncryptionAlgorithm"
  fullName: "com.microsoft.azure.storage.core.EncryptionAlgorithm"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm*"
  name: "getEncryptionAlgorithm"
  nameWithType: "EncryptionAgent.getEncryptionAlgorithm"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.getEncryptionAlgorithm"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol*"
  name: "getProtocol"
  nameWithType: "EncryptionAgent.getProtocol"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.getProtocol"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm*"
  name: "setEncryptionAlgorithm"
  nameWithType: "EncryptionAgent.setEncryptionAlgorithm"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.setEncryptionAlgorithm"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol*"
  name: "setProtocol"
  nameWithType: "EncryptionAgent.setProtocol"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.setProtocol"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.fasterxml.jackson.core.JsonGenerator"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonGenerator"
    name: "JsonGenerator"
    fullName: "com.fasterxml.jackson.core.JsonGenerator"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.serialize*"
  name: "serialize"
  nameWithType: "EncryptionAgent.serialize"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.serialize"
  package: "com.microsoft.azure.storage.core"
- uid: "com.fasterxml.jackson.core.JsonParseException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParseException"
    name: "JsonParseException"
    fullName: "com.fasterxml.jackson.core.JsonParseException"
- uid: "com.fasterxml.jackson.core.JsonParser"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParser"
    name: "JsonParser"
    fullName: "com.fasterxml.jackson.core.JsonParser"
- uid: "com.microsoft.azure.storage.core.EncryptionAgent.deserialize*"
  name: "deserialize"
  nameWithType: "EncryptionAgent.deserialize"
  fullName: "com.microsoft.azure.storage.core.EncryptionAgent.deserialize"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
