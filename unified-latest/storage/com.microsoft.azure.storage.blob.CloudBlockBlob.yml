### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  id: "CloudBlockBlob"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList()"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList(com.microsoft.azure.storage.blob.BlockListingFilter,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText()"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified()"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes(int)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.file.CloudFile)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.file.CloudFile,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(java.lang.String,java.io.InputStream,long)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(java.lang.String,java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudBlockBlob"
  nameWithType: "CloudBlockBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents a blob that is uploaded as a set of blocks."
  syntax:
    content: "public final class CloudBlockBlob extends CloudBlob"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.blob.CloudBlob"
  inheritedMembers:
  - "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  - "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
  - "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.delete()"
  - "com.microsoft.azure.storage.blob.CloudBlob.delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream)"
  - "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.exists()"
  - "com.microsoft.azure.storage.blob.CloudBlob.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
  - "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getName()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
  - "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
  - "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
  - "com.microsoft.azure.storage.blob.CloudBlob.undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long)"
  - "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
  - "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri)"
  id: "CloudBlockBlob(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(StorageUri blobAbsoluteUri)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute StorageUri."
  syntax:
    content: "public CloudBlockBlob(StorageUri blobAbsoluteUri)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the absolute URI to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlockBlob(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(StorageUri blobAbsoluteUri, StorageCredentials credentials)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute StorageUri and credentials."
  syntax:
    content: "public CloudBlockBlob(StorageUri blobAbsoluteUri, StorageCredentials credentials)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the absolute StorageUri to the blob."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlockBlob(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(StorageUri blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(StorageUri blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute StorageUri, snapshot ID, and credentials."
  syntax:
    content: "public CloudBlockBlob(StorageUri blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the absolute StorageUri to the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  id: "CloudBlockBlob(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(CloudBlockBlob otherBlob)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(CloudBlockBlob otherBlob)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(CloudBlockBlob otherBlob)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class by copying values from another cloud block blob."
  syntax:
    content: "public CloudBlockBlob(CloudBlockBlob otherBlob)"
    parameters:
    - id: "otherBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <code>CloudBlockBlob</code> object that represents the block blob to copy."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  id: "CloudBlockBlob(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified type, name, snapshot ID, and container."
  syntax:
    content: "protected CloudBlockBlob(String blobName, String snapshotID, CloudBlobContainer container)"
    parameters:
    - id: "blobName"
      type: "java.lang.String"
      description: "Name of the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "container"
      type: "com.microsoft.azure.storage.blob.CloudBlobContainer"
      description: "The reference to the parent container."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI)"
  id: "CloudBlockBlob(java.net.URI)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(URI blobAbsoluteUri)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute URI."
  syntax:
    content: "public CloudBlockBlob(URI blobAbsoluteUri)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI to the blob."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlockBlob(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(URI blobAbsoluteUri, StorageCredentials credentials)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute URI and credentials."
  syntax:
    content: "public CloudBlockBlob(URI blobAbsoluteUri, StorageCredentials credentials)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI to the blob."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(java.net.URI,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudBlockBlob(java.net.URI,java.lang.String,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "CloudBlockBlob(URI blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  nameWithType: "CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob(URI blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `CloudBlockBlob` class using the specified absolute URI, snapshot ID, and credentials."
  syntax:
    content: "public CloudBlockBlob(URI blobAbsoluteUri, String snapshotID, StorageCredentials credentials)"
    parameters:
    - id: "blobAbsoluteUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI to the blob."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>)"
  id: "commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "commitBlockList(Iterable<BlockEntry> blockList)"
  nameWithType: "CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Commits a block list to the storage service. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation."
  syntax:
    content: "public void commitBlockList(Iterable<BlockEntry> blockList)"
    parameters:
    - id: "blockList"
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.BlockEntry\" data-throw-if-not-resolved=\"false\">BlockEntry</xref> objects that represents the list block items being\n            committed. The <code>size</code> field is ignored."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "commitBlockList(Iterable<BlockEntry> blockList, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation."
  syntax:
    content: "public void commitBlockList(Iterable<BlockEntry> blockList, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blockList"
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.BlockEntry\" data-throw-if-not-resolved=\"false\">BlockEntry</xref> objects that represents the list block items being\n            committed. The size field is ignored."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "commitBlockList(java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "commitBlockList(Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation."
  syntax:
    content: "public void commitBlockList(Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blockList"
      type: "java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>"
      description: "An enumerable collection of <xref uid=\"com.microsoft.azure.storage.blob.BlockEntry\" data-throw-if-not-resolved=\"false\">BlockEntry</xref> objects that represents the list block items being\n            committed. The size field is ignored."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long)"
  id: "createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "createBlockFromURI(String blockId, URI copySource, Long offset, Long length)"
  nameWithType: "CloudBlockBlob.createBlockFromURI(String blockId, URI copySource, Long offset, Long length)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(String blockId, URI copySource, Long offset, Long length)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates a block to be committed as part of the block blob, using the specified block ID and the source URL."
  syntax:
    content: "public void createBlockFromURI(String blockId, URI copySource, Long offset, Long length)"
    parameters:
    - id: "blockId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length\n            of all Block IDs must be identical."
    - id: "copySource"
      type: "java.net.URI"
      description: "The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the\n            URL can include a shared access signature."
    - id: "offset"
      type: "java.lang.Long"
      description: "A <code>long</code> which represents the offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to copy or <code>null</code> to copy until the\n           end of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createBlockFromURI(java.lang.String,java.net.URI,java.lang.Long,java.lang.Long,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "createBlockFromURI(String blockId, URI copySource, Long offset, Long length, String md5, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.createBlockFromURI(String blockId, URI copySource, Long offset, Long length, String md5, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI(String blockId, URI copySource, Long offset, Long length, String md5, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates a block to be committed as part of the block blob, using the specified block ID, the specified source URL, the specified lease ID, request options, and operation context."
  syntax:
    content: "public void createBlockFromURI(String blockId, URI copySource, Long offset, Long length, String md5, AccessCondition sourceAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blockId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length\n            of all Block IDs must be identical."
    - id: "copySource"
      type: "java.net.URI"
      description: "The <code>URI</code> of the source data. It can point to any Azure Blob or File that is public or the\n            URL can include a shared access signature."
    - id: "offset"
      type: "java.lang.Long"
      description: "A <code>long</code> which represents the offset to use as the starting point for the source."
    - id: "length"
      type: "java.lang.Long"
      description: "A <code>Long</code> which represents the number of bytes to copy or <code>null</code> to copy until the\n           end of the blob."
    - id: "md5"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the MD5 caluclated for the range of bytes of the source."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList()"
  id: "downloadBlockList()"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "downloadBlockList()"
  nameWithType: "CloudBlockBlob.downloadBlockList()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList()"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the committed block list from the block blob.\n\nThe committed block list includes the list of blocks that have been successfully committed to the block blob. The list of committed blocks is returned in the same order that they were committed to the blob. No block may appear more than once in the committed block list."
  syntax:
    content: "public ArrayList<BlockEntry> downloadBlockList()"
    return:
      type: "java.util.ArrayList<com.microsoft.azure.storage.blob.BlockEntry>"
      description: "An <code>ArrayList</code> object of <xref uid=\"com.microsoft.azure.storage.blob.BlockEntry\" data-throw-if-not-resolved=\"false\">BlockEntry</xref> objects that represent the committed list\n         block items downloaded from the block blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList(com.microsoft.azure.storage.blob.BlockListingFilter,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadBlockList(com.microsoft.azure.storage.blob.BlockListingFilter,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "downloadBlockList(BlockListingFilter blockListingFilter, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.downloadBlockList(BlockListingFilter blockListingFilter, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList(BlockListingFilter blockListingFilter, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads the block list from the block blob using the specified block listing filter, request options, and operation context.\n\nThe committed block list includes the list of blocks that have been successfully committed to the block blob. The list of committed blocks is returned in the same order that they were committed to the blob. No block may appear more than once in the committed block list."
  syntax:
    content: "public ArrayList<BlockEntry> downloadBlockList(BlockListingFilter blockListingFilter, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blockListingFilter"
      type: "com.microsoft.azure.storage.blob.BlockListingFilter"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlockListingFilter\" data-throw-if-not-resolved=\"false\">BlockListingFilter</xref> value that specifies whether to download committed blocks, uncommitted\n            blocks, or all blocks."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.util.ArrayList<com.microsoft.azure.storage.blob.BlockEntry>"
      description: "An <code>ArrayList</code> object of <xref uid=\"com.microsoft.azure.storage.blob.BlockEntry\" data-throw-if-not-resolved=\"false\">BlockEntry</xref> objects that represent the list block items\n         downloaded from the block blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText()"
  id: "downloadText()"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "downloadText()"
  nameWithType: "CloudBlockBlob.downloadText()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText()"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a blob to a string using the platform's default encoding."
  syntax:
    content: "public String downloadText()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the blob's contents."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadText(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "downloadText(String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.downloadText(String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText(String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Downloads a blob to a string using the specified encoding."
  syntax:
    content: "public String downloadText(String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "charsetName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the charset to use to encode the content.\n            If null, the platform's default encoding is used."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the blob's contents."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified()"
  id: "isStreamWriteSizeModified()"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "isStreamWriteSizeModified()"
  nameWithType: "CloudBlockBlob.isStreamWriteSizeModified()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified()"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the flag that indicates whether the default streamWriteSize was modified."
  syntax:
    content: "public boolean isStreamWriteSizeModified()"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()"
  id: "openOutputStream()"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "openOutputStream()"
  nameWithType: "CloudBlockBlob.openOutputStream()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream()"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates and opens an output stream to write data to the block blob. If the blob already exists on the service, it will be overwritten.\n\nTo avoid overwriting and instead throw an error, please use the <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)\" data-throw-if-not-resolved=\"false\">#openOutputStream(AccessCondition, BlobRequestOptions, OperationContext)</xref> overload with the appropriate <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref>."
  syntax:
    content: "public BlobOutputStream openOutputStream()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobOutputStream"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> object used to write data to the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "openOutputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates and opens an output stream to write data to the block blob using the specified request options and operation context. If the blob already exists on the service, it will be overwritten.\n\nTo avoid overwriting and instead throw an error, please pass in an <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> generated using <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfNotExistsCondition()\" data-throw-if-not-resolved=\"false\">AccessCondition#generateIfNotExistsCondition()</xref>."
  syntax:
    content: "public BlobOutputStream openOutputStream(AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.blob.BlobOutputStream"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> object used to write data to the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes(int)"
  id: "setStreamWriteSizeInBytes(int)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  nameWithType: "CloudBlockBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the number of bytes to buffer when writing to a <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref>."
  syntax:
    content: "public void setStreamWriteSizeInBytes(int streamWriteSizeInBytes)"
    parameters:
    - id: "streamWriteSizeInBytes"
      type: "int"
      description: "An <code>int</code> which represents the maximum block size, in bytes, for writing to a block blob\n                               while using a <xref uid=\"com.microsoft.azure.storage.blob.BlobOutputStream\" data-throw-if-not-resolved=\"false\">BlobOutputStream</xref> object, ranging from 16 KB to 100 MB, inclusive."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  id: "startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudBlockBlob sourceBlob)"
  nameWithType: "CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob."
  syntax:
    content: "public final String startCopy(CloudBlockBlob sourceBlob)"
    parameters:
    - id: "sourceBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <code>CloudBlockBlob</code> object that represents the source blob to copy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudBlockBlob sourceBlob, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context."
  syntax:
    content: "public final String startCopy(CloudBlockBlob sourceBlob, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <code>CloudBlockBlob</code> object that represents the source blob to copy."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source blob."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context."
  syntax:
    content: "public final String startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <code>CloudBlockBlob</code> object that represents the source blob to copy."
    - id: "contentMd5"
      type: "java.lang.String"
      description: "An optional hash value used to ensure transactional integrity for the operation. May be\n            <code>null</code> or empty."
    - id: "syncCopy"
      type: "boolean"
      description: "A <code>boolean</code> to enable synchronous server copy of blobs."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source blob."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(com.microsoft.azure.storage.blob.CloudBlockBlob,java.lang.String,boolean,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a block blob's contents, properties, and metadata to a new block blob, using the blob tier, rehydrate priority, specified access conditions, lease ID, request options, operation context."
  syntax:
    content: "public final String startCopy(CloudBlockBlob sourceBlob, String contentMd5, boolean syncCopy, StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <code>CloudBlockBlob</code> object that represents the source blob to copy."
    - id: "contentMd5"
      type: "java.lang.String"
      description: "An optional hash value used to ensure transactional integrity for the operation. May be\n            <code>null</code> or empty."
    - id: "syncCopy"
      type: "boolean"
      description: "A <code>boolean</code> to enable synchronous server copy of blobs."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object that represents the tier of the blob."
    - id: "rehydratePriority"
      type: "com.microsoft.azure.storage.blob.RehydratePriority"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.RehydratePriority\" data-throw-if-not-resolved=\"false\">RehydratePriority</xref> object that represents the rehydrate priority."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source blob."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.file.CloudFile)"
  id: "startCopy(com.microsoft.azure.storage.file.CloudFile)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudFile sourceFile)"
  nameWithType: "CloudBlockBlob.startCopy(CloudFile sourceFile)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudFile sourceFile)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a file's contents, properties, and metadata to a new block blob."
  syntax:
    content: "public final String startCopy(CloudFile sourceFile)"
    parameters:
    - id: "sourceFile"
      type: "com.microsoft.azure.storage.file.CloudFile"
      description: "A <code>CloudFile</code> object that represents the source file to copy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(com.microsoft.azure.storage.file.CloudFile,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "startCopy(com.microsoft.azure.storage.file.CloudFile,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "startCopy(CloudFile sourceFile, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.startCopy(CloudFile sourceFile, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy(CloudFile sourceFile, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Requests the service to start copying a file's contents, properties, and metadata to a new block blob, using the specified access conditions, lease ID, request options, and operation context."
  syntax:
    content: "public final String startCopy(CloudFile sourceFile, AccessCondition sourceAccessCondition, AccessCondition destinationAccessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceFile"
      type: "com.microsoft.azure.storage.file.CloudFile"
      description: "A <code>CloudFile</code> object that represents the source file to copy."
    - id: "sourceAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the source file."
    - id: "destinationAccessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the destination block blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated\n            service client (<xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation.\n            This object is used to track requests to the storage service, and to provide additional\n            runtime information about the operation."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the copy ID associated with the copy operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long)"
  id: "upload(java.io.InputStream,long)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "upload(InputStream sourceStream, long length)"
  nameWithType: "CloudBlockBlob.upload(InputStream sourceStream, long length)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(InputStream sourceStream, long length)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the source stream data to the block blob. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void upload(InputStream sourceStream, long length)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object that represents the input stream to write to the block blob."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the source stream data to the blob, using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void upload(InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object that represents the input stream to write to the block blob."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "upload(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "upload(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.upload(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads the source stream data to the blob, using the specified lease ID, request options, and operation context. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void upload(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object that represents the input stream to write to the block blob."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "An String that represents the tier of the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(java.lang.String,java.io.InputStream,long)"
  id: "uploadBlock(java.lang.String,java.io.InputStream,long)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadBlock(String blockId, InputStream sourceStream, long length)"
  nameWithType: "CloudBlockBlob.uploadBlock(String blockId, InputStream sourceStream, long length)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(String blockId, InputStream sourceStream, long length)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a block to be committed as part of the block blob, using the specified block ID."
  syntax:
    content: "public void uploadBlock(String blockId, InputStream sourceStream, long length)"
    parameters:
    - id: "blockId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length\n            of all Block IDs must be identical."
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object that represents the input stream to write to the block blob."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(java.lang.String,java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadBlock(java.lang.String,java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadBlock(String blockId, InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadBlock(String blockId, InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock(String blockId, InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a block to be committed as part of the block blob, using the specified block ID, the specified lease ID, request options, and operation context."
  syntax:
    content: "public void uploadBlock(String blockId, InputStream sourceStream, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "blockId"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the Base-64 encoded block ID. Note for a given blob the length\n            of all Block IDs must be identical."
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object that represents the input stream to write to the block blob."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length, in bytes, of the stream data, or -1 if unknown."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurred."
  - type: "java.io.IOException"
    description: "If an I/O error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadFromByteArray(byte[] buffer, int offset, int length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadFromByteArray(byte[] buffer, int offset, int length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray(byte[] buffer, int offset, int length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadFromByteArray(byte[] buffer, int offset, int length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "buffer"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the data to write to the blob."
    - id: "offset"
      type: "int"
      description: "A <code>int</code> which represents the offset of the byte array from which to start the data upload."
    - id: "length"
      type: "int"
      description: "An <code>int</code> which represents the number of bytes to upload from the input buffer."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object that represents the tier of the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadFullBlob(java.io.InputStream,long,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadFullBlob(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadFullBlob(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob in a single operation."
  syntax:
    content: "protected final void uploadFullBlob(InputStream sourceStream, long length, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "A <code>InputStream</code> object that represents the source stream to upload."
    - id: "length"
      type: "long"
      description: "The length, in bytes, of the stream, or -1 if unknown."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object that represents the tier of the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  id: "uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadStandardBlobTier(StandardBlobTier standardBlobTier)"
  nameWithType: "CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the blob tier on a block blob on a standard storage account."
  syntax:
    content: "public void uploadStandardBlobTier(StandardBlobTier standardBlobTier)"
    parameters:
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object which represents the tier of the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadStandardBlobTier(StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the tier on a block blob on a standard storage account."
  syntax:
    content: "public void uploadStandardBlobTier(StandardBlobTier standardBlobTier, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object which represents the tier of the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object which represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadStandardBlobTier(StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier(StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the tier on a block blob on a standard storage account."
  syntax:
    content: "public void uploadStandardBlobTier(StandardBlobTier standardBlobTier, RehydratePriority rehydratePriority, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object which represents the tier of the blob."
    - id: "rehydratePriority"
      type: "com.microsoft.azure.storage.blob.RehydratePriority"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.RehydratePriority\" data-throw-if-not-resolved=\"false\">RehydratePriority</xref> object which represents the rehydrate priority."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object which represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String)"
  id: "uploadText(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadText(String content)"
  nameWithType: "CloudBlockBlob.uploadText(String content)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(String content)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from a string using the platform's default encoding. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadText(String content)"
    parameters:
    - id: "content"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content that will be uploaded to the blob."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadText(String content, String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadText(String content, String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(String content, String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from a string using the specified encoding. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadText(String content, String charsetName, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "content"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content that will be uploaded to the blob."
    - id: "charsetName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the charset to use to encode the content.\n            If null, the platform's default encoding is used."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadText(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.StandardBlobTier,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  langs:
  - "java"
  name: "uploadText(String content, String charsetName, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudBlockBlob.uploadText(String content, String charsetName, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText(String content, String charsetName, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Uploads a blob from a string using the specified encoding. If the blob already exists on the service, it will be overwritten."
  syntax:
    content: "public void uploadText(String content, String charsetName, StandardBlobTier standardBlobTier, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "content"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content that will be uploaded to the blob."
    - id: "charsetName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the charset to use to encode the content.\n            If null, the platform's default encoding is used."
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "An <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object that represents the tier of the blob."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
  - type: "java.io.IOException"
    description: "If a storage service error occurred."
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob*"
  name: "CloudBlockBlob"
  nameWithType: "CloudBlockBlob.CloudBlockBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.CloudBlockBlob"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.CloudBlobContainer"
  name: "CloudBlobContainer"
  nameWithType: "CloudBlobContainer"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobContainer"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy*"
  name: "startCopy"
  nameWithType: "CloudBlockBlob.startCopy"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.startCopy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.blob.BlobRequestOptions"
  name: "BlobRequestOptions"
  nameWithType: "BlobRequestOptions"
  fullName: "com.microsoft.azure.storage.blob.BlobRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.StandardBlobTier"
  name: "StandardBlobTier"
  nameWithType: "StandardBlobTier"
  fullName: "com.microsoft.azure.storage.blob.StandardBlobTier"
- uid: "com.microsoft.azure.storage.blob.RehydratePriority"
  name: "RehydratePriority"
  nameWithType: "RehydratePriority"
  fullName: "com.microsoft.azure.storage.blob.RehydratePriority"
- uid: "com.microsoft.azure.storage.file.CloudFile"
  name: "CloudFile"
  nameWithType: "CloudFile"
  fullName: "com.microsoft.azure.storage.file.CloudFile"
- uid: "java.lang.Iterable<com.microsoft.azure.storage.blob.BlockEntry>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.BlockEntry"
    name: "BlockEntry"
    fullName: "com.microsoft.azure.storage.blob.BlockEntry"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList*"
  name: "commitBlockList"
  nameWithType: "CloudBlockBlob.commitBlockList"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.ArrayList<com.microsoft.azure.storage.blob.BlockEntry>"
  spec.java:
  - uid: "java.util.ArrayList"
    name: "ArrayList"
    fullName: "java.util.ArrayList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.blob.BlockEntry"
    name: "BlockEntry"
    fullName: "com.microsoft.azure.storage.blob.BlockEntry"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList*"
  name: "downloadBlockList"
  nameWithType: "CloudBlockBlob.downloadBlockList"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadBlockList"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlockListingFilter"
  name: "BlockListingFilter"
  nameWithType: "BlockListingFilter"
  fullName: "com.microsoft.azure.storage.blob.BlockListingFilter"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream"
  name: "BlobOutputStream"
  nameWithType: "BlobOutputStream"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream*"
  name: "openOutputStream"
  nameWithType: "CloudBlockBlob.openOutputStream"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.openOutputStream"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload*"
  name: "upload"
  nameWithType: "CloudBlockBlob.upload"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.upload"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob*"
  name: "uploadFullBlob"
  nameWithType: "CloudBlockBlob.uploadFullBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFullBlob"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock*"
  name: "uploadBlock"
  nameWithType: "CloudBlockBlob.uploadBlock"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadBlock"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI*"
  name: "createBlockFromURI"
  nameWithType: "CloudBlockBlob.createBlockFromURI"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.createBlockFromURI"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText*"
  name: "uploadText"
  nameWithType: "CloudBlockBlob.uploadText"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadText"
  package: "com.microsoft.azure.storage.blob"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray*"
  name: "uploadFromByteArray"
  nameWithType: "CloudBlockBlob.uploadFromByteArray"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadFromByteArray"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText*"
  name: "downloadText"
  nameWithType: "CloudBlockBlob.downloadText"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.downloadText"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes*"
  name: "setStreamWriteSizeInBytes"
  nameWithType: "CloudBlockBlob.setStreamWriteSizeInBytes"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.setStreamWriteSizeInBytes"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier*"
  name: "uploadStandardBlobTier"
  nameWithType: "CloudBlockBlob.uploadStandardBlobTier"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.uploadStandardBlobTier"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified*"
  name: "isStreamWriteSizeModified"
  nameWithType: "CloudBlockBlob.isStreamWriteSizeModified"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob.isStreamWriteSizeModified"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob"
  name: "CloudBlob"
  nameWithType: "CloudBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String)"
  name: "CloudBlob.acquireLease(Integer,String)"
  nameWithType: "CloudBlob.acquireLease(Integer,String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
  name: "CloudBlob.getQualifiedUri()"
  nameWithType: "CloudBlob.getQualifiedUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
  name: "CloudBlob.getSnapshotQualifiedStorageUri()"
  nameWithType: "CloudBlob.getSnapshotQualifiedStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedStorageUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  name: "CloudBlob.setStorageUri(StorageUri)"
  nameWithType: "CloudBlob.setStorageUri(StorageUri)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStorageUri(com.microsoft.azure.storage.StorageUri)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.exists()"
  name: "CloudBlob.exists()"
  nameWithType: "CloudBlob.exists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.exists()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String)"
  name: "CloudBlob.abortCopy(String)"
  nameWithType: "CloudBlob.abortCopy(String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadRangeToByteArray(long,Long,byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadRangeToByteArray(long,Long,byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
  name: "CloudBlob.changeLease(String,AccessCondition)"
  nameWithType: "CloudBlob.changeLease(String,AccessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
  name: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy)"
  nameWithType: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long)"
  name: "CloudBlob.upload(InputStream,long)"
  nameWithType: "CloudBlob.upload(InputStream,long)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.changeLease(String,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.changeLease(String,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.changeLease(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.delete(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.delete(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.delete(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
  name: "CloudBlob.uploadProperties()"
  nameWithType: "CloudBlob.uploadProperties()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
  name: "CloudBlob.assertNoWriteOperationForSnapshot()"
  nameWithType: "CloudBlob.assertNoWriteOperationForSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertNoWriteOperationForSnapshot()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
  name: "CloudBlob.getServiceClient()"
  nameWithType: "CloudBlob.getServiceClient()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getServiceClient()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  name: "CloudBlob.uploadBlobTierImpl(String,String,BlobRequestOptions)"
  nameWithType: "CloudBlob.uploadBlobTierImpl(String,String,BlobRequestOptions)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadBlobTierImpl(java.lang.String,java.lang.String,com.microsoft.azure.storage.blob.BlobRequestOptions)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
  name: "CloudBlob.getParent()"
  nameWithType: "CloudBlob.getParent()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParent()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.startCopy(URI,String,boolean,String,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.startCopy(URI,String,boolean,String,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
  name: "CloudBlob.openInputStream()"
  nameWithType: "CloudBlob.openInputStream()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
  name: "CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection)"
  nameWithType: "CloudBlob.updateEtagAndLastModifiedFromResponse(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateEtagAndLastModifiedFromResponse(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
  name: "CloudBlob.acquireLease()"
  nameWithType: "CloudBlob.acquireLease()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.delete()"
  name: "CloudBlob.delete()"
  nameWithType: "CloudBlob.delete()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.delete()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.exists(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.exists(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.uploadFromByteArray(byte[],int,int,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.uploadFromByteArray(byte[],int,int,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
  name: "CloudBlob.setContainer(CloudBlobContainer)"
  nameWithType: "CloudBlob.setContainer(CloudBlobContainer)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setContainer(com.microsoft.azure.storage.blob.CloudBlobContainer)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadToByteArray(byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadToByteArray(byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
  name: "CloudBlob.isSnapshot()"
  nameWithType: "CloudBlob.isSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.isSnapshot()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(java.lang.String)"
  name: "CloudBlob.setSnapshotID(String)"
  nameWithType: "CloudBlob.setSnapshotID(String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setSnapshotID(java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.uploadFromFile(String,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.uploadFromFile(String,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int)"
  name: "CloudBlob.downloadToByteArray(byte[],int)"
  nameWithType: "CloudBlob.downloadToByteArray(byte[],int)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToByteArray(byte[],int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.startCopy(URI,String,boolean,String,RehydratePriority,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.startCopy(URI,String,boolean,String,RehydratePriority,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
  name: "CloudBlob.createSnapshot()"
  nameWithType: "CloudBlob.createSnapshot()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.undelete(BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.undelete(BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.undelete(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.startCopy(URI,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.startCopy(URI,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadRange(long,Long,OutputStream,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadRange(long,Long,OutputStream,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
  name: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,String)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadToFile(String,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadToFile(String,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.openInputStream(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.openInputStream(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(java.net.HttpURLConnection)"
  name: "CloudBlob.updateLengthFromResponse(HttpURLConnection)"
  nameWithType: "CloudBlob.updateLengthFromResponse(HttpURLConnection)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.updateLengthFromResponse(java.net.HttpURLConnection)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  name: "CloudBlob.startCopyImpl(URI,String,boolean,boolean,String,RehydratePriority,AccessCondition,AccessCondition,BlobRequestOptions)"
  nameWithType: "CloudBlob.startCopyImpl(URI,String,boolean,boolean,String,RehydratePriority,AccessCondition,AccessCondition,BlobRequestOptions)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopyImpl(java.net.URI,java.lang.String,boolean,boolean,java.lang.String,com.microsoft.azure.storage.blob.RehydratePriority,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
  name: "CloudBlob.getSnapshotID()"
  nameWithType: "CloudBlob.getSnapshotID()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotID()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
  name: "CloudBlob.getContainer()"
  nameWithType: "CloudBlob.getContainer()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getContainer()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.startCopy(URI,String,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.startCopy(URI,String,AccessCondition,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI)"
  name: "CloudBlob.startCopy(URI)"
  nameWithType: "CloudBlob.startCopy(URI)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.startCopy(java.net.URI)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
  name: "CloudBlob.getSnapshotQualifiedUri()"
  nameWithType: "CloudBlob.getSnapshotQualifiedUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getSnapshotQualifiedUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition)"
  name: "CloudBlob.releaseLease(AccessCondition)"
  nameWithType: "CloudBlob.releaseLease(AccessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean)"
  name: "CloudBlob.getCanonicalName(boolean)"
  nameWithType: "CloudBlob.getCanonicalName(boolean)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCanonicalName(boolean)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
  name: "CloudBlob.deleteImpl(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions)"
  nameWithType: "CloudBlob.deleteImpl(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteImpl(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
  name: "CloudBlob.getUri()"
  nameWithType: "CloudBlob.getUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
  name: "CloudBlob.downloadAttributes()"
  nameWithType: "CloudBlob.downloadAttributes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  name: "CloudBlob.setProperties(BlobProperties)"
  nameWithType: "CloudBlob.setProperties(BlobProperties)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setProperties(com.microsoft.azure.storage.blob.BlobProperties)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  name: "CloudBlob.setMetadata(HashMap<String,String>)"
  nameWithType: "CloudBlob.setMetadata(HashMap<String,String>)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadRangeInternal(long,Long,byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadRangeInternal(long,Long,byte[],int,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeInternal(long,java.lang.Long,byte[],int,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  name: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy,SharedAccessBlobHeaders,IPRange,SharedAccessProtocols)"
  nameWithType: "CloudBlob.generateUserDelegationSharedAccessSignature(UserDelegationKey,SharedAccessBlobPolicy,SharedAccessBlobHeaders,IPRange,SharedAccessProtocols)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateUserDelegationSharedAccessSignature(com.microsoft.azure.storage.UserDelegationKey,com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
  name: "CloudBlob.getStorageUri()"
  nameWithType: "CloudBlob.getStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStorageUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
  name: "CloudBlob.getStreamWriteSizeInBytes()"
  nameWithType: "CloudBlob.getStreamWriteSizeInBytes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamWriteSizeInBytes()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream)"
  name: "CloudBlob.download(OutputStream)"
  nameWithType: "CloudBlob.download(OutputStream)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream)"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.renewLease(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.renewLease(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String)"
  name: "CloudBlob.downloadToFile(String)"
  nameWithType: "CloudBlob.downloadToFile(String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadToFile(java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.uploadMetadata(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.uploadMetadata(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.breakLease(Integer,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.breakLease(Integer,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String)"
  name: "CloudBlob.uploadFromFile(String)"
  nameWithType: "CloudBlob.uploadFromFile(String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromFile(java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.uploadProperties(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.uploadProperties(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.upload(InputStream,long,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.upload(InputStream,long,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.upload(java.io.InputStream,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer)"
  name: "CloudBlob.breakLease(Integer)"
  nameWithType: "CloudBlob.breakLease(Integer)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.breakLease(java.lang.Integer)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
  name: "CloudBlob.getParentNameFromURI(StorageUri,String,CloudBlobContainer)"
  nameWithType: "CloudBlob.getParentNameFromURI(StorageUri,String,CloudBlobContainer)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getParentNameFromURI(com.microsoft.azure.storage.StorageUri,java.lang.String,com.microsoft.azure.storage.blob.CloudBlobContainer)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
  name: "CloudBlob.getCopyState()"
  nameWithType: "CloudBlob.getCopyState()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getCopyState()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
  name: "CloudBlob.getStreamMinimumReadSizeInBytes()"
  nameWithType: "CloudBlob.getStreamMinimumReadSizeInBytes()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getStreamMinimumReadSizeInBytes()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.abortCopy(String,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.abortCopy(String,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.abortCopy(java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.deleteIfExists(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.deleteIfExists(DeleteSnapshotsOption,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(com.microsoft.azure.storage.blob.DeleteSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  name: "CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  nameWithType: "CloudBlob.setStreamMinimumReadSizeInBytes(int)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.openInputStream(long,Long,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.openInputStream(long,Long,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.openInputStream(long,java.lang.Long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
  name: "CloudBlob.assertCorrectBlobType()"
  nameWithType: "CloudBlob.assertCorrectBlobType()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.assertCorrectBlobType()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.createSnapshot(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.createSnapshot(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.acquireLease(Integer,String,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.acquireLease(Integer,String,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.acquireLease(java.lang.Integer,java.lang.String,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadAttributes(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadAttributes(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.downloadAccountInfo(BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.downloadAccountInfo(BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo(com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
  name: "CloudBlob.getProperties()"
  nameWithType: "CloudBlob.getProperties()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getProperties()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
  name: "CloudBlob.uploadMetadata()"
  nameWithType: "CloudBlob.uploadMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadMetadata()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.createSnapshot(HashMap<String,String>,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.createSnapshot(HashMap<String,String>,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
  name: "CloudBlob.downloadRangeToByteArray(long,Long,byte[],int)"
  nameWithType: "CloudBlob.downloadRangeToByteArray(long,Long,byte[],int)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRangeToByteArray(long,java.lang.Long,byte[],int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
  name: "CloudBlob.deleteIfExists()"
  nameWithType: "CloudBlob.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
  name: "CloudBlob.undelete()"
  nameWithType: "CloudBlob.undelete()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.undelete()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
  name: "CloudBlob.getMetadata()"
  nameWithType: "CloudBlob.getMetadata()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getMetadata()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  name: "CloudBlob.<T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R>,BlobRequestOptions,boolean)"
  nameWithType: "CloudBlob.<T,R>validateCPKHeaders(StorageRequest<CloudBlobClient,T,R>,BlobRequestOptions,boolean)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.<T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest<com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
  name: "CloudBlob.downloadAccountInformationImpl(RequestOptions)"
  nameWithType: "CloudBlob.downloadAccountInformationImpl(RequestOptions)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInformationImpl(com.microsoft.azure.storage.RequestOptions)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
  name: "CloudBlob.downloadAccountInfo()"
  nameWithType: "CloudBlob.downloadAccountInfo()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadAccountInfo()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
  name: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,SharedAccessBlobHeaders,String)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,SharedAccessBlobHeaders,String)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.download(OutputStream,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.download(OutputStream,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.download(java.io.OutputStream,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  name: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,SharedAccessBlobHeaders,String,IPRange,SharedAccessProtocols)"
  nameWithType: "CloudBlob.generateSharedAccessSignature(SharedAccessBlobPolicy,SharedAccessBlobHeaders,String,IPRange,SharedAccessProtocols)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.generateSharedAccessSignature(com.microsoft.azure.storage.blob.SharedAccessBlobPolicy,com.microsoft.azure.storage.blob.SharedAccessBlobHeaders,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)"
  name: "CloudBlob.setStreamWriteSizeInBytes(int)"
  nameWithType: "CloudBlob.setStreamWriteSizeInBytes(int)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setStreamWriteSizeInBytes(int)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
  name: "CloudBlob.getQualifiedStorageUri()"
  nameWithType: "CloudBlob.getQualifiedStorageUri()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getQualifiedStorageUri()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.releaseLease(AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "CloudBlob.releaseLease(AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.releaseLease(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getName()"
  name: "CloudBlob.getName()"
  nameWithType: "CloudBlob.getName()"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getName()"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream)"
  name: "CloudBlob.downloadRange(long,Long,OutputStream)"
  nameWithType: "CloudBlob.downloadRange(long,Long,OutputStream)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.downloadRange(long,java.lang.Long,java.io.OutputStream)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
  name: "CloudBlob.getTransformedAddress(OperationContext)"
  nameWithType: "CloudBlob.getTransformedAddress(OperationContext)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.getTransformedAddress(com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition)"
  name: "CloudBlob.renewLease(AccessCondition)"
  nameWithType: "CloudBlob.renewLease(AccessCondition)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.renewLease(com.microsoft.azure.storage.AccessCondition)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int)"
  name: "CloudBlob.uploadFromByteArray(byte[],int,int)"
  nameWithType: "CloudBlob.uploadFromByteArray(byte[],int,int)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(byte[],int,int)"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "com.microsoft.azure.storage.blob.BlockEntry"
  name: "BlockEntry"
  nameWithType: "BlockEntry"
  fullName: "com.microsoft.azure.storage.blob.BlockEntry"
- uid: "java.util.ArrayList"
  name: "ArrayList"
  nameWithType: "ArrayList"
  fullName: "java.util.ArrayList"
- uid: "java.lang.String,java.lang.String>)"
  name: "String,String>)"
  nameWithType: "String,String>)"
  fullName: "java.lang.String,java.lang.String>)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap"
  name: "CloudBlob.setMetadata(HashMap"
  nameWithType: "CloudBlob.setMetadata(HashMap"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.setMetadata(java.util.HashMap"
- uid: "java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "String,String>,AccessCondition,BlobRequestOptions,OperationContext)"
  nameWithType: "String,String>,AccessCondition,BlobRequestOptions,OperationContext)"
  fullName: "java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap"
  name: "CloudBlob.createSnapshot(HashMap"
  nameWithType: "CloudBlob.createSnapshot(HashMap"
  fullName: "com.microsoft.azure.storage.blob.CloudBlob.createSnapshot(java.util.HashMap"
- uid: "T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest"
  name: "T,R>validateCPKHeaders(StorageRequest"
  nameWithType: "T,R>validateCPKHeaders(StorageRequest"
  fullName: "T,R>validateCPKHeaders(com.microsoft.azure.storage.core.StorageRequest"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
  name: "CloudBlobClient,T,R>,BlobRequestOptions,boolean)"
  nameWithType: "CloudBlobClient,T,R>,BlobRequestOptions,boolean)"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient,T,R>,com.microsoft.azure.storage.blob.BlobRequestOptions,boolean)"
- uid: "com.microsoft.azure.storage.blob.CloudBlob."
  name: "CloudBlob."
  nameWithType: "CloudBlob."
  fullName: "com.microsoft.azure.storage.blob.CloudBlob."
