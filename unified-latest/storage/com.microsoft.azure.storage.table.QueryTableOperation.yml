### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.QueryTableOperation"
  id: "QueryTableOperation"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.getResolver()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()"
  - "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(java.lang.String)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.setResolver(com.microsoft.azure.storage.table.EntityResolver<?>)"
  - "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(java.lang.String)"
  langs:
  - "java"
  name: "QueryTableOperation"
  nameWithType: "QueryTableOperation"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "A class that extends <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> to implement a query to retrieve a single table entity. To execute a <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\">QueryTableOperation</xref> instance, call the `execute` method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance. This operation can be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref>. If the <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\">QueryTableOperation</xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> returned by the `execute` method."
  syntax:
    content: "public class QueryTableOperation extends TableOperation"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.table.TableOperation"
  inheritedMembers:
  - "com.microsoft.azure.storage.table.TableOperation.delete(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,java.lang.String)"
  - "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
  - "com.microsoft.azure.storage.table.TableOperation.getEntity()"
  - "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
  - "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
  - "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.merge(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  - "com.microsoft.azure.storage.table.TableOperation.replace(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
  - "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  - "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)"
  - "com.microsoft.azure.storage.table.TableOperation.setEntity(com.microsoft.azure.storage.table.TableEntity)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()"
  id: "QueryTableOperation()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "QueryTableOperation()"
  nameWithType: "QueryTableOperation.QueryTableOperation()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Default constructor."
  syntax:
    content: "protected QueryTableOperation()"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation(java.lang.String,java.lang.String)"
  id: "QueryTableOperation(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "QueryTableOperation(String partitionKey, String rowKey)"
  nameWithType: "QueryTableOperation.QueryTableOperation(String partitionKey, String rowKey)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation(String partitionKey, String rowKey)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs a <xref uid=\"com.microsoft.azure.storage.table.QueryTableOperation\" data-throw-if-not-resolved=\"false\">QueryTableOperation</xref> instance to retrieve a single table entity with the specified partition key and row key."
  syntax:
    content: " QueryTableOperation(String partitionKey, String rowKey)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the PartitionKey value for the entity."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the RowKey value for the entity."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()"
  id: "getClazzType()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "getClazzType()"
  nameWithType: "QueryTableOperation.getClazzType()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Gets the class type of the entity returned by the query."
  syntax:
    content: "protected Class<? extends TableEntity> getClazzType()"
    return:
      type: "java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>"
      description: "The <code>java.lang.Class</code> implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that represents the entity type for the\n         query."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()"
  id: "getPartitionKey()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "getPartitionKey()"
  nameWithType: "QueryTableOperation.getPartitionKey()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the PartitionKey value for the entity to retrieve."
  syntax:
    content: "public String getPartitionKey()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> containing the PartitionKey value for the entity."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getResolver()"
  id: "getResolver()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "getResolver()"
  nameWithType: "QueryTableOperation.getResolver()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getResolver()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.getResolver*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the resolver to project the entity retrieved as a particular type."
  syntax:
    content: "public EntityResolver<?> getResolver()"
    return:
      type: "com.microsoft.azure.storage.table.EntityResolver<?>"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()"
  id: "getRowKey()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "getRowKey()"
  nameWithType: "QueryTableOperation.getRowKey()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the RowKey value for the entity to retrieve."
  syntax:
    content: "public String getRowKey()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> containing the RowKey value for the entity."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()"
  id: "isPrimaryOnlyRetrieve()"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "isPrimaryOnlyRetrieve()"
  nameWithType: "QueryTableOperation.isPrimaryOnlyRetrieve()"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve()"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "protected final boolean isPrimaryOnlyRetrieve()"
    return:
      type: "boolean"
      description: "the isPrimaryOnlyRetrieve"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  id: "parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  nameWithType: "QueryTableOperation.parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Parses the table operation response into a <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> to return."
  syntax:
    content: "protected TableResult parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
    parameters:
    - id: "inStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> containing the response to a query operation."
    - id: "httpStatusCode"
      type: "int"
      description: "The HTTP status code returned from the operation request."
    - id: "etagFromHeader"
      type: "java.lang.String"
      description: "The <code>String</code> containing the Etag returned with the operation response."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> representing the result of the query operation."
  exceptions:
  - type: "java.lang.InstantiationException"
    description: "if an error occurs in object construction."
  - type: "java.lang.IllegalAccessException"
    description: "if an error occurs in object construction."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs in object construction."
  - type: "com.fasterxml.jackson.core.JsonParseException"
    description: "if an error occurs in object construction."
  - type: "java.io.IOException"
    description: "if an error occurs in object construction."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "performRetrieve(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "performRetrieve(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "QueryTableOperation.performRetrieve(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Performs a retrieve operation on the specified table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> object."
  syntax:
    content: "protected TableResult performRetrieve(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "client"
      type: "com.microsoft.azure.storage.table.CloudTableClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance specifying the Table service endpoint and storage account\n            credentials to use."
    - id: "tableName"
      type: "java.lang.String"
      description: "A <code>String</code> containing the name of the table to query."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation."
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> containing the results of executing the query operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs in the storage operation."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  id: "setClazzType(java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "setClazzType(Class<? extends TableEntity> clazzType)"
  nameWithType: "QueryTableOperation.setClazzType(Class<? extends TableEntity> clazzType)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType(Class<? extends TableEntity> clazzType)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Sets the class type of the entity returned by the query."
  syntax:
    content: "protected void setClazzType(Class<? extends TableEntity> clazzType)"
    parameters:
    - id: "clazzType"
      type: "java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>"
      description: "The <code>java.lang.Class</code> implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that represents the entity type for\n            the query."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(java.lang.String)"
  id: "setPartitionKey(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "setPartitionKey(String partitionKey)"
  nameWithType: "QueryTableOperation.setPartitionKey(String partitionKey)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey(String partitionKey)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Sets the PartitionKey value for the entity to retrieve."
  syntax:
    content: "protected void setPartitionKey(String partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the PartitionKey value for the entity."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean)"
  id: "setPrimaryOnlyRetrieve(boolean)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)"
  nameWithType: "QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  syntax:
    content: "protected void setPrimaryOnlyRetrieve(boolean isPrimaryOnlyRetrieve)"
    parameters:
    - id: "isPrimaryOnlyRetrieve"
      type: "boolean"
      description: "the isPrimaryOnlyRetrieve to set"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setResolver(com.microsoft.azure.storage.table.EntityResolver<?>)"
  id: "setResolver(com.microsoft.azure.storage.table.EntityResolver<?>)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "setResolver(EntityResolver<?> resolver)"
  nameWithType: "QueryTableOperation.setResolver(EntityResolver<?> resolver)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setResolver(EntityResolver<?> resolver)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.setResolver*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Sets the resolver to project the entity retrieved as a particular type."
  syntax:
    content: "protected void setResolver(EntityResolver<?> resolver)"
    parameters:
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<?>"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance to use."
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(java.lang.String)"
  id: "setRowKey(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.QueryTableOperation"
  langs:
  - "java"
  name: "setRowKey(String rowKey)"
  nameWithType: "QueryTableOperation.setRowKey(String rowKey)"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey(String rowKey)"
  overload: "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Sets the RowKey value for the entity to retrieve."
  syntax:
    content: "protected void setRowKey(String rowKey)"
    parameters:
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> containing the RowKey value for the entity."
references:
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation*"
  name: "QueryTableOperation"
  nameWithType: "QueryTableOperation.QueryTableOperation"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.QueryTableOperation"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "QueryTableOperation.getPartitionKey"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getPartitionKey"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityResolver<?>"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.EntityResolver"
    name: "EntityResolver"
    fullName: "com.microsoft.azure.storage.table.EntityResolver"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getResolver*"
  name: "getResolver"
  nameWithType: "QueryTableOperation.getResolver"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getResolver"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey*"
  name: "getRowKey"
  nameWithType: "QueryTableOperation.getRowKey"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getRowKey"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.microsoft.azure.storage.table.TableEntity"
    name: "TableEntity"
    fullName: "? extends com.microsoft.azure.storage.table.TableEntity"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType*"
  name: "getClazzType"
  nameWithType: "QueryTableOperation.getClazzType"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.getClazzType"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.InstantiationException"
  spec.java:
  - uid: "java.lang.InstantiationException"
    name: "InstantiationException"
    fullName: "java.lang.InstantiationException"
- uid: "java.lang.IllegalAccessException"
  spec.java:
  - uid: "java.lang.IllegalAccessException"
    name: "IllegalAccessException"
    fullName: "java.lang.IllegalAccessException"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.fasterxml.jackson.core.JsonParseException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParseException"
    name: "JsonParseException"
    fullName: "com.fasterxml.jackson.core.JsonParseException"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.table.TableRequestOptions"
  name: "TableRequestOptions"
  nameWithType: "TableRequestOptions"
  fullName: "com.microsoft.azure.storage.table.TableRequestOptions"
- uid: "com.microsoft.azure.storage.table.TableResult"
  name: "TableResult"
  nameWithType: "TableResult"
  fullName: "com.microsoft.azure.storage.table.TableResult"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse*"
  name: "parseResponse"
  nameWithType: "QueryTableOperation.parseResponse"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.parseResponse"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTableClient"
  name: "CloudTableClient"
  nameWithType: "CloudTableClient"
  fullName: "com.microsoft.azure.storage.table.CloudTableClient"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve*"
  name: "performRetrieve"
  nameWithType: "QueryTableOperation.performRetrieve"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.performRetrieve"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType*"
  name: "setClazzType"
  nameWithType: "QueryTableOperation.setClazzType"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setClazzType"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey*"
  name: "setPartitionKey"
  nameWithType: "QueryTableOperation.setPartitionKey"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setPartitionKey"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setResolver*"
  name: "setResolver"
  nameWithType: "QueryTableOperation.setResolver"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setResolver"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey*"
  name: "setRowKey"
  nameWithType: "QueryTableOperation.setRowKey"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setRowKey"
  package: "com.microsoft.azure.storage.table"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve*"
  name: "isPrimaryOnlyRetrieve"
  nameWithType: "QueryTableOperation.isPrimaryOnlyRetrieve"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.isPrimaryOnlyRetrieve"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve*"
  name: "setPrimaryOnlyRetrieve"
  nameWithType: "QueryTableOperation.setPrimaryOnlyRetrieve"
  fullName: "com.microsoft.azure.storage.table.QueryTableOperation.setPrimaryOnlyRetrieve"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation"
  name: "TableOperation"
  nameWithType: "TableOperation"
  fullName: "com.microsoft.azure.storage.table.TableOperation"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.insert(TableEntity)"
  nameWithType: "TableOperation.insert(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity)"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
  name: "TableOperation.getEchoContent()"
  nameWithType: "TableOperation.getEchoContent()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
  name: "TableOperation.insert(TableEntity,boolean)"
  nameWithType: "TableOperation.insert(TableEntity,boolean)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
- uid: "com.microsoft.azure.storage.table.TableOperation.merge(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.merge(TableEntity)"
  nameWithType: "TableOperation.merge(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.merge(com.microsoft.azure.storage.table.TableEntity)"
- uid: "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
  name: "TableOperation.getOperationType()"
  nameWithType: "TableOperation.getOperationType()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(java.lang.String)"
  name: "TableOperation.generateRequestIdentityWithTable(String)"
  nameWithType: "TableOperation.generateRequestIdentityWithTable(String)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(java.lang.String)"
- uid: "com.microsoft.azure.storage.table.TableOperation.replace(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.replace(TableEntity)"
  nameWithType: "TableOperation.replace(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.replace(com.microsoft.azure.storage.table.TableEntity)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.TableOperation.execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  name: "TableOperation.execute(CloudTableClient,String,TableRequestOptions,OperationContext)"
  nameWithType: "TableOperation.execute(CloudTableClient,String,TableRequestOptions,OperationContext)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.table.TableOperation.delete(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.delete(TableEntity)"
  nameWithType: "TableOperation.delete(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.delete(com.microsoft.azure.storage.table.TableEntity)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.insertOrMerge(TableEntity)"
  nameWithType: "TableOperation.insertOrMerge(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,java.lang.String)"
  name: "TableOperation.generateRequestIdentity(boolean,String)"
  nameWithType: "TableOperation.generateRequestIdentity(boolean,String)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,java.lang.String)"
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  name: "TableOperation.retrieve(String,String,Class<? extends TableEntity>)"
  nameWithType: "TableOperation.retrieve(String,String,Class<? extends TableEntity>)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
- uid: "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)"
  name: "TableOperation.setEchoContent(boolean)"
  nameWithType: "TableOperation.setEchoContent(boolean)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)"
- uid: "com.microsoft.azure.storage.table.TableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  name: "TableOperation.parseResponse(InputStream,int,String,OperationContext,TableRequestOptions)"
  nameWithType: "TableOperation.parseResponse(InputStream,int,String,OperationContext,TableRequestOptions)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEntity()"
  name: "TableOperation.getEntity()"
  nameWithType: "TableOperation.getEntity()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEntity()"
- uid: "com.microsoft.azure.storage.table.TableOperation.setEntity(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.setEntity(TableEntity)"
  nameWithType: "TableOperation.setEntity(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEntity(com.microsoft.azure.storage.table.TableEntity)"
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
  name: "TableOperation.retrieve(String,String,EntityResolver<?>)"
  nameWithType: "TableOperation.retrieve(String,String,EntityResolver<?>)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
  name: "TableOperation.insertOrReplace(TableEntity)"
  nameWithType: "TableOperation.insertOrReplace(TableEntity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
- uid: "com.microsoft.azure.storage.table.EntityResolver"
  name: "EntityResolver"
  nameWithType: "EntityResolver"
  fullName: "com.microsoft.azure.storage.table.EntityResolver"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "? extends com.microsoft.azure.storage.table.TableEntity"
  name: "? extends TableEntity"
  nameWithType: "? extends TableEntity"
  fullName: "? extends com.microsoft.azure.storage.table.TableEntity"
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class"
  name: "TableOperation.retrieve(String,String,Class"
  nameWithType: "TableOperation.retrieve(String,String,Class"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class"
- uid: "? extends com.microsoft.azure.storage.table.TableEntity>)"
  name: "? extends TableEntity>)"
  nameWithType: "? extends TableEntity>)"
  fullName: "? extends com.microsoft.azure.storage.table.TableEntity>)"
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver"
  name: "TableOperation.retrieve(String,String,EntityResolver"
  nameWithType: "TableOperation.retrieve(String,String,EntityResolver"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver"
- uid: "?>)"
  name: "?>)"
  nameWithType: "?>)"
  fullName: "?>)"
