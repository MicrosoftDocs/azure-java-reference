### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.TableOperation"
  id: "TableOperation"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.TableOperation.TableOperation()"
  - "com.microsoft.azure.storage.table.TableOperation.TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType)"
  - "com.microsoft.azure.storage.table.TableOperation.TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType,boolean)"
  - "com.microsoft.azure.storage.table.TableOperation.delete(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,java.lang.String)"
  - "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
  - "com.microsoft.azure.storage.table.TableOperation.getEntity()"
  - "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
  - "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
  - "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.merge(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  - "com.microsoft.azure.storage.table.TableOperation.replace(com.microsoft.azure.storage.table.TableEntity)"
  - "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
  - "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  - "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)"
  - "com.microsoft.azure.storage.table.TableOperation.setEntity(com.microsoft.azure.storage.table.TableEntity)"
  langs:
  - "java"
  name: "TableOperation"
  nameWithType: "TableOperation"
  fullName: "com.microsoft.azure.storage.table.TableOperation"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "A class which represents a single table operation.\n\nUse the static factory methods to construct <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instances for operations on tables that insert, update, merge, delete, replace or retrieve table entities. To execute a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance, call the `execute` method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance. A <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> may be executed directly or as part of a <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref>. If a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> returns an entity result, it is stored in the corresponding <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> returned by the `execute` method."
  syntax:
    content: "public class TableOperation"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.TableOperation.TableOperation()"
  id: "TableOperation()"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "TableOperation()"
  nameWithType: "TableOperation.TableOperation()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.TableOperation()"
  overload: "com.microsoft.azure.storage.table.TableOperation.TableOperation*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Nullary Default Constructor."
  syntax:
    content: "protected TableOperation()"
- uid: "com.microsoft.azure.storage.table.TableOperation.TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType)"
  id: "TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "TableOperation(TableEntity entity, TableOperationType opType)"
  nameWithType: "TableOperation.TableOperation(TableEntity entity, TableOperationType opType)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.TableOperation(TableEntity entity, TableOperationType opType)"
  overload: "com.microsoft.azure.storage.table.TableOperation.TableOperation*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Constructs a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> with the specified table entity and operation type."
  syntax:
    content: "protected TableOperation(TableEntity entity, TableOperationType opType)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    - id: "opType"
      type: "com.microsoft.azure.storage.table.TableOperationType"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableOperationType\" data-throw-if-not-resolved=\"false\">TableOperationType</xref> enumeration value for the operation type."
- uid: "com.microsoft.azure.storage.table.TableOperation.TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType,boolean)"
  id: "TableOperation(com.microsoft.azure.storage.table.TableEntity,com.microsoft.azure.storage.table.TableOperationType,boolean)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "TableOperation(TableEntity entity, TableOperationType opType, boolean echoContent)"
  nameWithType: "TableOperation.TableOperation(TableEntity entity, TableOperationType opType, boolean echoContent)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.TableOperation(TableEntity entity, TableOperationType opType, boolean echoContent)"
  overload: "com.microsoft.azure.storage.table.TableOperation.TableOperation*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Constructs a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> with the specified table entity and operation type."
  syntax:
    content: "protected TableOperation(TableEntity entity, TableOperationType opType, boolean echoContent)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    - id: "opType"
      type: "com.microsoft.azure.storage.table.TableOperationType"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableOperationType\" data-throw-if-not-resolved=\"false\">TableOperationType</xref> enumeration value for the operation type."
    - id: "echoContent"
      type: "boolean"
      description: "The boolean representing whether the message payload should be returned in the response."
- uid: "com.microsoft.azure.storage.table.TableOperation.delete(com.microsoft.azure.storage.table.TableEntity)"
  id: "delete(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "delete(TableEntity entity)"
  nameWithType: "TableOperation.delete(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.delete(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to delete the specified entity from Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the"
  syntax:
    content: "public static TableOperation delete(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to insert the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "execute(com.microsoft.azure.storage.table.CloudTableClient,java.lang.String,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "execute(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "TableOperation.execute(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.execute(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.TableOperation.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Execute this table operation on the specified table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method will invoke the Storage Service REST API to execute this table operation, using the Table service endpoint and storage account credentials in the <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> object."
  syntax:
    content: "protected TableResult execute(CloudTableClient client, String tableName, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "client"
      type: "com.microsoft.azure.storage.table.CloudTableClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance specifying the Table service endpoint, storage account\n            credentials, and any additional query parameters."
    - id: "tableName"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the name of the table."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation."
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> which represents the results of executing the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs in the storage operation."
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean,java.lang.String)"
  id: "generateRequestIdentity(boolean,java.lang.String)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "generateRequestIdentity(boolean isSingleIndexEntry, String entryName)"
  nameWithType: "TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, String entryName)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity(boolean isSingleIndexEntry, String entryName)"
  overload: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Generates the request identity, consisting of the specified entry name, or the PartitionKey and RowKey pair from the operation, to identify the operation target."
  syntax:
    content: "protected String generateRequestIdentity(boolean isSingleIndexEntry, String entryName)"
    parameters:
    - id: "isSingleIndexEntry"
      type: "boolean"
      description: "Pass <code>true</code> to use the specified <code>entryName</code> parameter, or <code>false</code> to\n            use PartitionKey and RowKey values from the operation as the request identity."
    - id: "entryName"
      type: "java.lang.String"
      description: "The entry name to use as the request identity if the <code>isSingleIndexEntry</code> parameter is\n            <code>true</code>."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the formatted request identity string."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(java.lang.String)"
  id: "generateRequestIdentityWithTable(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "generateRequestIdentityWithTable(String tableName)"
  nameWithType: "TableOperation.generateRequestIdentityWithTable(String tableName)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable(String tableName)"
  overload: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Generates the request identity string for the specified table. The request identity string combines the table name with the PartitionKey and RowKey from the operation to identify specific table entities. This request identity is already UrlEncoded."
  syntax:
    content: "protected String generateRequestIdentityWithTable(String tableName)"
    parameters:
    - id: "tableName"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the name of the table."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the formatted request identity string for the specified table."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
  id: "getEchoContent()"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "getEchoContent()"
  nameWithType: "TableOperation.getEchoContent()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEchoContent()"
  overload: "com.microsoft.azure.storage.table.TableOperation.getEchoContent*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the boolean representing whether the message payload should be returned in the response."
  syntax:
    content: "protected boolean getEchoContent()"
    return:
      type: "boolean"
      description: "<code>true</code> if the message payload should be returned in the response; otherwise <code>false</code>"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEntity()"
  id: "getEntity()"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "getEntity()"
  nameWithType: "TableOperation.getEntity()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEntity()"
  overload: "com.microsoft.azure.storage.table.TableOperation.getEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Gets the table entity associated with this operation."
  syntax:
    content: "protected final synchronized TableEntity getEntity()"
    return:
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> instance associated with this operation."
- uid: "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
  id: "getOperationType()"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "getOperationType()"
  nameWithType: "TableOperation.getOperationType()"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getOperationType()"
  overload: "com.microsoft.azure.storage.table.TableOperation.getOperationType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Gets the operation type for this operation."
  syntax:
    content: "protected final synchronized TableOperationType getOperationType()"
    return:
      type: "com.microsoft.azure.storage.table.TableOperationType"
      description: "the opType\n         The <xref uid=\"com.microsoft.azure.storage.table.TableOperationType\" data-throw-if-not-resolved=\"false\">TableOperationType</xref> instance associated with this operation."
- uid: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity)"
  id: "insert(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "insert(TableEntity entity)"
  nameWithType: "TableOperation.insert(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insert(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.insert*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the"
  syntax:
    content: "public static TableOperation insert(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to insert the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
  id: "insert(com.microsoft.azure.storage.table.TableEntity,boolean)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "insert(TableEntity entity, boolean echoContent)"
  nameWithType: "TableOperation.insert(TableEntity entity, boolean echoContent)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insert(TableEntity entity, boolean echoContent)"
  overload: "com.microsoft.azure.storage.table.TableOperation.insert*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to insert the specified entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the"
  syntax:
    content: "public static TableOperation insert(TableEntity entity, boolean echoContent)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    - id: "echoContent"
      type: "boolean"
      description: "The boolean representing whether the message payload should be returned in the response."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to insert the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
  id: "insertOrMerge(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "insertOrMerge(TableEntity entity)"
  nameWithType: "TableOperation.insertOrMerge(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to merge the specified entity into Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> as arguments."
  syntax:
    content: "public static TableOperation insertOrMerge(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for inserting or merging the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
  id: "insertOrReplace(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "insertOrReplace(TableEntity entity)"
  nameWithType: "TableOperation.insertOrReplace(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to replace the specified entity in Microsoft Azure storage, or insert it if it does not exist. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> as arguments."
  syntax:
    content: "public static TableOperation insertOrReplace(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for inserting or replacing the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.merge(com.microsoft.azure.storage.table.TableEntity)"
  id: "merge(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "merge(TableEntity entity)"
  nameWithType: "TableOperation.merge(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.merge(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.merge*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to merge the specified table entity into Microsoft Azure storage. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the"
  syntax:
    content: "public static TableOperation merge(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for merging the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  id: "parseResponse(java.io.InputStream,int,java.lang.String,com.microsoft.azure.storage.OperationContext,com.microsoft.azure.storage.table.TableRequestOptions)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  nameWithType: "TableOperation.parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
  overload: "com.microsoft.azure.storage.table.TableOperation.parseResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Parses the table operation response into a <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> to return."
  syntax:
    content: "protected TableResult parseResponse(InputStream inStream, int httpStatusCode, String etagFromHeader, OperationContext opContext, TableRequestOptions options)"
    parameters:
    - id: "inStream"
      type: "java.io.InputStream"
      description: "An <code>InputStream</code> which specifies the response to an insert operation."
    - id: "httpStatusCode"
      type: "int"
      description: "An <code>int</code> which represents the HTTP status code returned from the operation request."
    - id: "etagFromHeader"
      type: "java.lang.String"
      description: "The <code>String</code> which specifies the Etag returned with the operation response."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> representing the result of the operation."
  exceptions:
  - type: "java.lang.InstantiationException"
    description: "if an error occurs in object construction."
  - type: "java.lang.IllegalAccessException"
    description: "if an error occurs in object construction."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs in object construction."
  - type: "com.fasterxml.jackson.core.JsonParseException"
    description: "if an error occurs in object construction."
  - type: "java.io.IOException"
    description: "if an error occurs in object construction."
- uid: "com.microsoft.azure.storage.table.TableOperation.replace(com.microsoft.azure.storage.table.TableEntity)"
  id: "replace(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "replace(TableEntity entity)"
  nameWithType: "TableOperation.replace(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.replace(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.replace*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to replace the specified table entity. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method."
  syntax:
    content: "public static TableOperation replace(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The object instance implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to associate with the operation."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for replacing the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
  id: "retrieve(java.lang.String,java.lang.String,com.microsoft.azure.storage.table.EntityResolver<?>)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "retrieve(String partitionKey, String rowKey, EntityResolver<?> resolver)"
  nameWithType: "TableOperation.retrieve(String partitionKey, String rowKey, EntityResolver<?> resolver)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(String partitionKey, String rowKey, EntityResolver<?> resolver)"
  overload: "com.microsoft.azure.storage.table.TableOperation.retrieve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to retrieve the specified table entity and return a projection of it using the specified resolver. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the table name and the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> as arguments."
  syntax:
    content: "public static TableOperation retrieve(String partitionKey, String rowKey, EntityResolver<?> resolver)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the PartitionKey value for the entity to retrieve."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the RowKey value for the entity to retrieve."
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<?>"
      description: "The implementation of <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> to use to project the result entity as type T."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for retrieving the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  id: "retrieve(java.lang.String,java.lang.String,java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "retrieve(String partitionKey, String rowKey, Class<? extends TableEntity> clazzType)"
  nameWithType: "TableOperation.retrieve(String partitionKey, String rowKey, Class<? extends TableEntity> clazzType)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve(String partitionKey, String rowKey, Class<? extends TableEntity> clazzType)"
  overload: "com.microsoft.azure.storage.table.TableOperation.retrieve*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "A static factory method returning a <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance to retrieve the specified table entity and return it as the specified type. To execute this <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on a given table, call the <xref uid=\"com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)\" data-throw-if-not-resolved=\"false\">CloudTable#execute(TableOperation)</xref> method on a <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> instance with the"
  syntax:
    content: "public static TableOperation retrieve(String partitionKey, String rowKey, Class<? extends TableEntity> clazzType)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the PartitionKey value for the entity to retrieve."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the RowKey value for the entity to retrieve."
    - id: "clazzType"
      type: "java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>"
      description: "The class type of the table entity object to retrieve."
    return:
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "A new <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> instance for retrieving the table entity."
- uid: "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean)"
  id: "setEchoContent(boolean)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "setEchoContent(boolean echoContent)"
  nameWithType: "TableOperation.setEchoContent(boolean echoContent)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEchoContent(boolean echoContent)"
  overload: "com.microsoft.azure.storage.table.TableOperation.setEchoContent*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the boolean representing whether the message payload should be returned in the response."
  syntax:
    content: "protected void setEchoContent(boolean echoContent)"
    parameters:
    - id: "echoContent"
      type: "boolean"
      description: "<code>true</code> if the message payload should be returned in the response; otherwise\n            <code>false</code>."
- uid: "com.microsoft.azure.storage.table.TableOperation.setEntity(com.microsoft.azure.storage.table.TableEntity)"
  id: "setEntity(com.microsoft.azure.storage.table.TableEntity)"
  parent: "com.microsoft.azure.storage.table.TableOperation"
  langs:
  - "java"
  name: "setEntity(TableEntity entity)"
  nameWithType: "TableOperation.setEntity(TableEntity entity)"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEntity(TableEntity entity)"
  overload: "com.microsoft.azure.storage.table.TableOperation.setEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Sets the <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> instance for the table operation."
  syntax:
    content: "protected final synchronized void setEntity(TableEntity entity)"
    parameters:
    - id: "entity"
      type: "com.microsoft.azure.storage.table.TableEntity"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> instance to set."
references:
- uid: "com.microsoft.azure.storage.table.TableOperation.TableOperation*"
  name: "TableOperation"
  nameWithType: "TableOperation.TableOperation"
  fullName: "com.microsoft.azure.storage.table.TableOperation.TableOperation"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity"
  name: "TableEntity"
  nameWithType: "TableEntity"
  fullName: "com.microsoft.azure.storage.table.TableEntity"
- uid: "com.microsoft.azure.storage.table.TableOperationType"
  name: "TableOperationType"
  nameWithType: "TableOperationType"
  fullName: "com.microsoft.azure.storage.table.TableOperationType"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.table.TableOperation.delete*"
  name: "delete"
  nameWithType: "TableOperation.delete"
  fullName: "com.microsoft.azure.storage.table.TableOperation.delete"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.insert*"
  name: "insert"
  nameWithType: "TableOperation.insert"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insert"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge*"
  name: "insertOrMerge"
  nameWithType: "TableOperation.insertOrMerge"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrMerge"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace*"
  name: "insertOrReplace"
  nameWithType: "TableOperation.insertOrReplace"
  fullName: "com.microsoft.azure.storage.table.TableOperation.insertOrReplace"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.merge*"
  name: "merge"
  nameWithType: "TableOperation.merge"
  fullName: "com.microsoft.azure.storage.table.TableOperation.merge"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Class<? extends com.microsoft.azure.storage.table.TableEntity>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.microsoft.azure.storage.table.TableEntity"
    name: "TableEntity"
    fullName: "? extends com.microsoft.azure.storage.table.TableEntity"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.TableOperation.retrieve*"
  name: "retrieve"
  nameWithType: "TableOperation.retrieve"
  fullName: "com.microsoft.azure.storage.table.TableOperation.retrieve"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityResolver<?>"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.EntityResolver"
    name: "EntityResolver"
    fullName: "com.microsoft.azure.storage.table.EntityResolver"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.TableOperation.replace*"
  name: "replace"
  nameWithType: "TableOperation.replace"
  fullName: "com.microsoft.azure.storage.table.TableOperation.replace"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.table.CloudTableClient"
  name: "CloudTableClient"
  nameWithType: "CloudTableClient"
  fullName: "com.microsoft.azure.storage.table.CloudTableClient"
- uid: "com.microsoft.azure.storage.table.TableRequestOptions"
  name: "TableRequestOptions"
  nameWithType: "TableRequestOptions"
  fullName: "com.microsoft.azure.storage.table.TableRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.table.TableResult"
  name: "TableResult"
  nameWithType: "TableResult"
  fullName: "com.microsoft.azure.storage.table.TableResult"
- uid: "com.microsoft.azure.storage.table.TableOperation.execute*"
  name: "execute"
  nameWithType: "TableOperation.execute"
  fullName: "com.microsoft.azure.storage.table.TableOperation.execute"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity*"
  name: "generateRequestIdentity"
  nameWithType: "TableOperation.generateRequestIdentity"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable*"
  name: "generateRequestIdentityWithTable"
  nameWithType: "TableOperation.generateRequestIdentityWithTable"
  fullName: "com.microsoft.azure.storage.table.TableOperation.generateRequestIdentityWithTable"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEntity*"
  name: "getEntity"
  nameWithType: "TableOperation.getEntity"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.getOperationType*"
  name: "getOperationType"
  nameWithType: "TableOperation.getOperationType"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getOperationType"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.InstantiationException"
  spec.java:
  - uid: "java.lang.InstantiationException"
    name: "InstantiationException"
    fullName: "java.lang.InstantiationException"
- uid: "java.lang.IllegalAccessException"
  spec.java:
  - uid: "java.lang.IllegalAccessException"
    name: "IllegalAccessException"
    fullName: "java.lang.IllegalAccessException"
- uid: "com.fasterxml.jackson.core.JsonParseException"
  spec.java:
  - uid: "com.fasterxml.jackson.core.JsonParseException"
    name: "JsonParseException"
    fullName: "com.fasterxml.jackson.core.JsonParseException"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.table.TableOperation.parseResponse*"
  name: "parseResponse"
  nameWithType: "TableOperation.parseResponse"
  fullName: "com.microsoft.azure.storage.table.TableOperation.parseResponse"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.setEntity*"
  name: "setEntity"
  nameWithType: "TableOperation.setEntity"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.getEchoContent*"
  name: "getEchoContent"
  nameWithType: "TableOperation.getEchoContent"
  fullName: "com.microsoft.azure.storage.table.TableOperation.getEchoContent"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation.setEchoContent*"
  name: "setEchoContent"
  nameWithType: "TableOperation.setEchoContent"
  fullName: "com.microsoft.azure.storage.table.TableOperation.setEchoContent"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "? extends com.microsoft.azure.storage.table.TableEntity"
  name: "? extends TableEntity"
  nameWithType: "? extends TableEntity"
  fullName: "? extends com.microsoft.azure.storage.table.TableEntity"
- uid: "com.microsoft.azure.storage.table.EntityResolver"
  name: "EntityResolver"
  nameWithType: "EntityResolver"
  fullName: "com.microsoft.azure.storage.table.EntityResolver"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
