### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.RequestOptions"
  id: "RequestOptions"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.RequestOptions.RequestOptions()"
  - "com.microsoft.azure.storage.RequestOptions.RequestOptions(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
  - "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
  - "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
  - "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
  - "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
  - "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
  - "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
  - "com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  - "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)"
  - "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)"
  - "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
  - "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)"
  langs:
  - "java"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents the options to use while processing a given request."
  syntax:
    content: "public abstract class RequestOptions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.RequestOptions.RequestOptions()"
  id: "RequestOptions()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "RequestOptions()"
  nameWithType: "RequestOptions.RequestOptions()"
  fullName: "com.microsoft.azure.storage.RequestOptions.RequestOptions()"
  overload: "com.microsoft.azure.storage.RequestOptions.RequestOptions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `RequestOptions` class."
  syntax:
    content: "public RequestOptions()"
- uid: "com.microsoft.azure.storage.RequestOptions.RequestOptions(com.microsoft.azure.storage.RequestOptions)"
  id: "RequestOptions(com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "RequestOptions(RequestOptions other)"
  nameWithType: "RequestOptions.RequestOptions(RequestOptions other)"
  fullName: "com.microsoft.azure.storage.RequestOptions.RequestOptions(RequestOptions other)"
  overload: "com.microsoft.azure.storage.RequestOptions.RequestOptions*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `RequestOptions` class by copying values from another `RequestOptions` instance."
  syntax:
    content: "public RequestOptions(RequestOptions other)"
    parameters:
    - id: "other"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "A <code>RequestOptions</code> object that represents the request options to copy."
- uid: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
  id: "applyBaseDefaultsInternal(com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "applyBaseDefaultsInternal(RequestOptions modifiedOptions)"
  nameWithType: "RequestOptions.applyBaseDefaultsInternal(RequestOptions modifiedOptions)"
  fullName: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(RequestOptions modifiedOptions)"
  overload: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Populates the default timeout, retry policy, and location mode from client if they are null."
  syntax:
    content: "protected static void applyBaseDefaultsInternal(RequestOptions modifiedOptions)"
    parameters:
    - id: "modifiedOptions"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "The input options to copy from when applying defaults"
- uid: "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
  id: "getLocationMode()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "getLocationMode()"
  nameWithType: "RequestOptions.getLocationMode()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getLocationMode()"
  overload: "com.microsoft.azure.storage.RequestOptions.getLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the default location mode for this request. For more information about location mode, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)\" data-throw-if-not-resolved=\"false\">#setLocationMode(LocationMode)</xref>."
  syntax:
    content: "public final LocationMode getLocationMode()"
    return:
      type: "com.microsoft.azure.storage.LocationMode"
      description: "A <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\">LocationMode</xref> object that represents the location mode for this request."
- uid: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
  id: "getMaximumExecutionTimeInMs()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "getMaximumExecutionTimeInMs()"
  nameWithType: "RequestOptions.getMaximumExecutionTimeInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()"
  overload: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)\" data-throw-if-not-resolved=\"false\">#setMaximumExecutionTimeInMs(Integer)</xref>."
  syntax:
    content: "public Integer getMaximumExecutionTimeInMs()"
    return:
      type: "java.lang.Integer"
      description: "The current maximum execution time, in milliseconds, for this request."
- uid: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
  id: "getOperationExpiryTimeInMs()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "getOperationExpiryTimeInMs()"
  nameWithType: "RequestOptions.getOperationExpiryTimeInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()"
  overload: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "RESERVED FOR INTERNAL USE. Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)\" data-throw-if-not-resolved=\"false\">#setMaximumExecutionTimeInMs(Integer)</xref>."
  syntax:
    content: "public Long getOperationExpiryTimeInMs()"
    return:
      type: "java.lang.Long"
      description: "The current operation expiry time, in milliseconds, for this request."
- uid: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
  id: "getRetryPolicyFactory()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "getRetryPolicyFactory()"
  nameWithType: "RequestOptions.getRetryPolicyFactory()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()"
  overload: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)\" data-throw-if-not-resolved=\"false\">#setRetryPolicyFactory(RetryPolicyFactory)</xref>."
  syntax:
    content: "public final RetryPolicyFactory getRetryPolicyFactory()"
    return:
      type: "com.microsoft.azure.storage.RetryPolicyFactory"
      description: "An <xref uid=\"com.microsoft.azure.storage.RetryPolicyFactory\" data-throw-if-not-resolved=\"false\">RetryPolicyFactory</xref> object that represents the current retry policy."
- uid: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
  id: "getTimeoutIntervalInMs()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "getTimeoutIntervalInMs()"
  nameWithType: "RequestOptions.getTimeoutIntervalInMs()"
  fullName: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()"
  overload: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the timeout value for this request. For more information about the timeout defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)\" data-throw-if-not-resolved=\"false\">#setTimeoutIntervalInMs(Integer)</xref>."
  syntax:
    content: "public final Integer getTimeoutIntervalInMs()"
    return:
      type: "java.lang.Integer"
      description: "The current timeout value, in milliseconds, for this request."
- uid: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
  id: "populateRequestOptions(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.RequestOptions,boolean)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "populateRequestOptions(RequestOptions modifiedOptions, RequestOptions clientOptions, boolean setStartTime)"
  nameWithType: "RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, RequestOptions clientOptions, boolean setStartTime)"
  fullName: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, RequestOptions clientOptions, boolean setStartTime)"
  overload: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Populates any null fields in the first requestOptions object with values from the second requestOptions object."
  syntax:
    content: "protected static void populateRequestOptions(RequestOptions modifiedOptions, RequestOptions clientOptions, boolean setStartTime)"
    parameters:
    - id: "modifiedOptions"
      type: "com.microsoft.azure.storage.RequestOptions"
    - id: "clientOptions"
      type: "com.microsoft.azure.storage.RequestOptions"
    - id: "setStartTime"
      type: "boolean"
- uid: "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
  id: "requireEncryption()"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "requireEncryption()"
  nameWithType: "RequestOptions.requireEncryption()"
  fullName: "com.microsoft.azure.storage.RequestOptions.requireEncryption()"
  overload: "com.microsoft.azure.storage.RequestOptions.requireEncryption*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets a value to indicate whether all data written and read must be encrypted. Use `true` to encrypt/decrypt data for transactions; otherwise, `false`. For more information about require encryption defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)\" data-throw-if-not-resolved=\"false\">#setRequireEncryption(Boolean)</xref>."
  syntax:
    content: "public Boolean requireEncryption()"
    return:
      type: "java.lang.Boolean"
      description: "A value to indicate whether all data written and read must be encrypted."
- uid: "com.microsoft.azure.storage.RequestOptions.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  id: "setLocationMode(com.microsoft.azure.storage.LocationMode)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "setLocationMode(LocationMode locationMode)"
  nameWithType: "RequestOptions.setLocationMode(LocationMode locationMode)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setLocationMode(LocationMode locationMode)"
  overload: "com.microsoft.azure.storage.RequestOptions.setLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\">LocationMode</xref> for this request.\n\nThe default <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\">LocationMode</xref> is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY\" data-throw-if-not-resolved=\"false\">LocationMode#PRIMARY_ONLY</xref>. You can change the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\">LocationMode</xref> on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\">LocationMode</xref>."
  syntax:
    content: "public void setLocationMode(LocationMode locationMode)"
    parameters:
    - id: "locationMode"
      type: "com.microsoft.azure.storage.LocationMode"
      description: "the locationMode to set"
- uid: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(java.lang.Integer)"
  id: "setMaximumExecutionTimeInMs(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)"
  nameWithType: "RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)"
  overload: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the maximum execution time to use when making this request.\n\nThe maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown.\n\nThe default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use the maximum execution time."
  syntax:
    content: "public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)"
    parameters:
    - id: "maximumExecutionTimeInMs"
      type: "java.lang.Integer"
      description: "The maximum execution time, in milliseconds, to use for this request."
- uid: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(java.lang.Boolean)"
  id: "setRequireEncryption(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "setRequireEncryption(Boolean requireEncryption)"
  nameWithType: "RequestOptions.setRequireEncryption(Boolean requireEncryption)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)"
  overload: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets a value to indicate whether all data written and read must be encrypted. Use `true` to encrypt/decrypt data for transactions; otherwise, `false`.\n\nThe default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use the appropriate value."
  syntax:
    content: "public void setRequireEncryption(Boolean requireEncryption)"
    parameters:
    - id: "requireEncryption"
      type: "java.lang.Boolean"
      description: "A value to indicate whether all data written and read must be encrypted."
- uid: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
  id: "setRetryPolicyFactory(com.microsoft.azure.storage.RetryPolicyFactory)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "setRetryPolicyFactory(RetryPolicyFactory retryPolicyFactory)"
  nameWithType: "RequestOptions.setRetryPolicyFactory(RetryPolicyFactory retryPolicyFactory)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(RetryPolicyFactory retryPolicyFactory)"
  overload: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the RetryPolicyFactory object to use for this request.\n\nThe default RetryPolicyFactory is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.RetryExponentialRetry\" data-throw-if-not-resolved=\"false\">RetryExponentialRetry</xref>. You can change the RetryPolicyFactory on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that RetryPolicyFactory."
  syntax:
    content: "public final void setRetryPolicyFactory(RetryPolicyFactory retryPolicyFactory)"
    parameters:
    - id: "retryPolicyFactory"
      type: "com.microsoft.azure.storage.RetryPolicyFactory"
      description: "the RetryPolicyFactory object to use when making service requests."
- uid: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(java.lang.Integer)"
  id: "setTimeoutIntervalInMs(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.RequestOptions"
  langs:
  - "java"
  name: "setTimeoutIntervalInMs(Integer timeoutIntervalInMs)"
  nameWithType: "RequestOptions.setTimeoutIntervalInMs(Integer timeoutIntervalInMs)"
  fullName: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(Integer timeoutIntervalInMs)"
  overload: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the timeout to use when making this request.\n\nThe server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried.\n\nThe default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that server timeout."
  syntax:
    content: "public final void setTimeoutIntervalInMs(Integer timeoutIntervalInMs)"
    parameters:
    - id: "timeoutIntervalInMs"
      type: "java.lang.Integer"
      description: "The timeout, in milliseconds, to use for this request."
references:
- uid: "com.microsoft.azure.storage.RequestOptions.RequestOptions*"
  name: "RequestOptions"
  nameWithType: "RequestOptions.RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions.RequestOptions"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal*"
  name: "applyBaseDefaultsInternal"
  nameWithType: "RequestOptions.applyBaseDefaultsInternal"
  fullName: "com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal"
  package: "com.microsoft.azure.storage"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions*"
  name: "populateRequestOptions"
  nameWithType: "RequestOptions.populateRequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions.populateRequestOptions"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RetryPolicyFactory"
  name: "RetryPolicyFactory"
  nameWithType: "RetryPolicyFactory"
  fullName: "com.microsoft.azure.storage.RetryPolicyFactory"
- uid: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory*"
  name: "getRetryPolicyFactory"
  nameWithType: "RequestOptions.getRetryPolicyFactory"
  fullName: "com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs*"
  name: "getTimeoutIntervalInMs"
  nameWithType: "RequestOptions.getTimeoutIntervalInMs"
  fullName: "com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.LocationMode"
  name: "LocationMode"
  nameWithType: "LocationMode"
  fullName: "com.microsoft.azure.storage.LocationMode"
- uid: "com.microsoft.azure.storage.RequestOptions.getLocationMode*"
  name: "getLocationMode"
  nameWithType: "RequestOptions.getLocationMode"
  fullName: "com.microsoft.azure.storage.RequestOptions.getLocationMode"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs*"
  name: "getMaximumExecutionTimeInMs"
  nameWithType: "RequestOptions.getMaximumExecutionTimeInMs"
  fullName: "com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.storage.RequestOptions.requireEncryption*"
  name: "requireEncryption"
  nameWithType: "RequestOptions.requireEncryption"
  fullName: "com.microsoft.azure.storage.RequestOptions.requireEncryption"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs*"
  name: "getOperationExpiryTimeInMs"
  nameWithType: "RequestOptions.getOperationExpiryTimeInMs"
  fullName: "com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory*"
  name: "setRetryPolicyFactory"
  nameWithType: "RequestOptions.setRetryPolicyFactory"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs*"
  name: "setTimeoutIntervalInMs"
  nameWithType: "RequestOptions.setTimeoutIntervalInMs"
  fullName: "com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.setLocationMode*"
  name: "setLocationMode"
  nameWithType: "RequestOptions.setLocationMode"
  fullName: "com.microsoft.azure.storage.RequestOptions.setLocationMode"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs*"
  name: "setMaximumExecutionTimeInMs"
  nameWithType: "RequestOptions.setMaximumExecutionTimeInMs"
  fullName: "com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption*"
  name: "setRequireEncryption"
  nameWithType: "RequestOptions.setRequireEncryption"
  fullName: "com.microsoft.azure.storage.RequestOptions.setRequireEncryption"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
