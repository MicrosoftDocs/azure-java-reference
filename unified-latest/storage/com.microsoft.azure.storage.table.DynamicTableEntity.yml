### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity"
  id: "DynamicTableEntity"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  - "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "DynamicTableEntity"
  nameWithType: "DynamicTableEntity"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "A <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> type which allows callers direct access to the property map of the entity. This class extends <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> to eliminate the use of reflection for serialization and deserialization."
  syntax:
    content: "public class DynamicTableEntity extends TableServiceEntity"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.table.TableServiceEntity"
  inheritedMembers:
  - "com.microsoft.azure.storage.table.TableServiceEntity.getEtag()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()"
  - "com.microsoft.azure.storage.table.TableServiceEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(java.lang.Object,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.setEtag(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(java.util.Date)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(java.lang.Object)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()"
  id: "DynamicTableEntity()"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "DynamicTableEntity()"
  nameWithType: "DynamicTableEntity.DynamicTableEntity()"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity()"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Nullary default constructor."
  syntax:
    content: "public DynamicTableEntity()"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String)"
  id: "DynamicTableEntity(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "DynamicTableEntity(String partitionKey, String rowKey)"
  nameWithType: "DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> class with the specified partition key and row key."
  syntax:
    content: "public DynamicTableEntity(String partitionKey, String rowKey)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the partition key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the row key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  id: "DynamicTableEntity(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "DynamicTableEntity(String partitionKey, String rowKey, String etag, HashMap<String,EntityProperty> properties)"
  nameWithType: "DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, HashMap<String,EntityProperty> properties)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, String etag, HashMap<String,EntityProperty> properties)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> class with the specified partition key and row key."
  syntax:
    content: "public DynamicTableEntity(String partitionKey, String rowKey, String etag, HashMap<String,EntityProperty> properties)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the partition key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the row key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
    - id: "etag"
      type: "java.lang.String"
      description: "The ETag of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized. This value is used to determine if the table \n            entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value \n            on the service."
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to\n            <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values to store in the new <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  id: "DynamicTableEntity(java.lang.String,java.lang.String,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "DynamicTableEntity(String partitionKey, String rowKey, HashMap<String,EntityProperty> properties)"
  nameWithType: "DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, HashMap<String,EntityProperty> properties)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(String partitionKey, String rowKey, HashMap<String,EntityProperty> properties)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> class with the specified partition key and row key."
  syntax:
    content: "public DynamicTableEntity(String partitionKey, String rowKey, HashMap<String,EntityProperty> properties)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the partition key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the row key of the <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> to be initialized."
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to\n            <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values to store in the new <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  id: "DynamicTableEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "DynamicTableEntity(HashMap<String,EntityProperty> properties)"
  nameWithType: "DynamicTableEntity.DynamicTableEntity(HashMap<String,EntityProperty> properties)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity(HashMap<String,EntityProperty> properties)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance using the specified property map."
  syntax:
    content: "public DynamicTableEntity(HashMap<String,EntityProperty> properties)"
    parameters:
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing a map of <code>String</code> property names to\n            <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values to store in the new <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref>."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()"
  id: "getProperties()"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "DynamicTableEntity.getProperties()"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties()"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the property map for this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
  syntax:
    content: "public HashMap<String,EntityProperty> getProperties()"
    return:
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to\n         <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values for this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  id: "readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  nameWithType: "DynamicTableEntity.readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Populates this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance using the specified map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values."
  syntax:
    content: "public void readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
    parameters:
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>\n            data typed values to store in this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object used to track the execution of the operation."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  id: "setProperties(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "setProperties(HashMap<String,EntityProperty> properties)"
  nameWithType: "DynamicTableEntity.setProperties(HashMap<String,EntityProperty> properties)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties(HashMap<String,EntityProperty> properties)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the property map for this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
  syntax:
    content: "public void setProperties(HashMap<String,EntityProperty> properties)"
    parameters:
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to\n            <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values to set in this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  id: "writeEntity(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.DynamicTableEntity"
  langs:
  - "java"
  name: "writeEntity(OperationContext opContext)"
  nameWithType: "DynamicTableEntity.writeEntity(OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity(OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns the map of property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data values from this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
  syntax:
    content: "public HashMap<String,EntityProperty> writeEntity(OperationContext opContext)"
    parameters:
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object used to track the execution of the operation."
    return:
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> containing the map of <code>String</code> property names to\n         <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values stored in this <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> instance."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if a Storage service error occurs."
references:
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity*"
  name: "DynamicTableEntity"
  nameWithType: "DynamicTableEntity.DynamicTableEntity"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.DynamicTableEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.table.EntityProperty"
    name: "EntityProperty"
    fullName: "com.microsoft.azure.storage.table.EntityProperty"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties*"
  name: "getProperties"
  nameWithType: "DynamicTableEntity.getProperties"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.getProperties"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity*"
  name: "readEntity"
  nameWithType: "DynamicTableEntity.readEntity"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.readEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties*"
  name: "setProperties"
  nameWithType: "DynamicTableEntity.setProperties"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.setProperties"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity*"
  name: "writeEntity"
  nameWithType: "DynamicTableEntity.writeEntity"
  fullName: "com.microsoft.azure.storage.table.DynamicTableEntity.writeEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity"
  name: "TableServiceEntity"
  nameWithType: "TableServiceEntity"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.setEtag(java.lang.String)"
  name: "TableServiceEntity.setEtag(String)"
  nameWithType: "TableServiceEntity.setEtag(String)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.setEtag(java.lang.String)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()"
  name: "TableServiceEntity.getReflectedEntityCache()"
  nameWithType: "TableServiceEntity.getReflectedEntityCache()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.getReflectedEntityCache()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean)"
  name: "TableServiceEntity.setReflectedEntityCacheDisabled(boolean)"
  nameWithType: "TableServiceEntity.setReflectedEntityCacheDisabled(boolean)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.setReflectedEntityCacheDisabled(boolean)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(java.lang.String)"
  name: "TableServiceEntity.setRowKey(String)"
  nameWithType: "TableServiceEntity.setRowKey(String)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.setRowKey(java.lang.String)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.getEtag()"
  name: "TableServiceEntity.getEtag()"
  nameWithType: "TableServiceEntity.getEtag()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.getEtag()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  name: "TableServiceEntity.writeEntity(OperationContext)"
  nameWithType: "TableServiceEntity.writeEntity(OperationContext)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()"
  name: "TableServiceEntity.getPartitionKey()"
  nameWithType: "TableServiceEntity.getPartitionKey()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.getPartitionKey()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()"
  name: "TableServiceEntity.isReflectedEntityCacheDisabled()"
  nameWithType: "TableServiceEntity.isReflectedEntityCacheDisabled()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.isReflectedEntityCacheDisabled()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(java.util.Date)"
  name: "TableServiceEntity.setTimestamp(Date)"
  nameWithType: "TableServiceEntity.setTimestamp(Date)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.setTimestamp(java.util.Date)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(java.lang.Object)"
  name: "TableServiceEntity.writeEntityWithReflection(Object)"
  nameWithType: "TableServiceEntity.writeEntityWithReflection(Object)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(java.lang.Object)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()"
  name: "TableServiceEntity.getTimestamp()"
  nameWithType: "TableServiceEntity.getTimestamp()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.getTimestamp()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(java.lang.Object,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  name: "TableServiceEntity.readEntityWithReflection(Object,HashMap<String,EntityProperty>,OperationContext)"
  nameWithType: "TableServiceEntity.readEntityWithReflection(Object,HashMap<String,EntityProperty>,OperationContext)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(java.lang.Object,java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()"
  name: "TableServiceEntity.getRowKey()"
  nameWithType: "TableServiceEntity.getRowKey()"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.getRowKey()"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  name: "TableServiceEntity.readEntity(HashMap<String,EntityProperty>,OperationContext)"
  nameWithType: "TableServiceEntity.readEntity(HashMap<String,EntityProperty>,OperationContext)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(java.lang.String)"
  name: "TableServiceEntity.setPartitionKey(String)"
  nameWithType: "TableServiceEntity.setPartitionKey(String)"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.setPartitionKey(java.lang.String)"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
  name: "String,EntityProperty"
  nameWithType: "String,EntityProperty"
  fullName: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
- uid: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  name: "String,EntityProperty>,OperationContext)"
  nameWithType: "String,EntityProperty>,OperationContext)"
  fullName: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(java.lang.Object,java.util.HashMap"
  name: "TableServiceEntity.readEntityWithReflection(Object,HashMap"
  nameWithType: "TableServiceEntity.readEntityWithReflection(Object,HashMap"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(java.lang.Object,java.util.HashMap"
- uid: "com.microsoft.azure.storage.table.TableServiceEntity.readEntity(java.util.HashMap"
  name: "TableServiceEntity.readEntity(HashMap"
  nameWithType: "TableServiceEntity.readEntity(HashMap"
  fullName: "com.microsoft.azure.storage.table.TableServiceEntity.readEntity(java.util.HashMap"
