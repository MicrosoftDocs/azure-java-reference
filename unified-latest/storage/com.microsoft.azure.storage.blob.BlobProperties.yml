### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobProperties"
  id: "BlobProperties"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties()"
  - "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  - "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(com.microsoft.azure.storage.blob.BlobType)"
  - "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getBlobType()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getContentType()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getCopyState()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getEtag()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getLastModified()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getLength()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier()"
  - "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime()"
  - "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred()"
  - "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy()"
  - "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted()"
  - "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount(java.lang.Integer)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred(java.lang.Boolean)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setBlobType(com.microsoft.azure.storage.blob.BlobType)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setContentType(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setCopyState(com.microsoft.azure.storage.blob.CopyState)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime(java.util.Date)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime(java.util.Date)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setEtag(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy(boolean)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setLastModified(java.util.Date)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setLength(long)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber(java.lang.Long)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier(com.microsoft.azure.storage.blob.PremiumPageBlobTier)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus(com.microsoft.azure.storage.blob.RehydrationStatus)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays(java.lang.Integer)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted(boolean)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  - "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime(java.util.Date)"
  langs:
  - "java"
  name: "BlobProperties"
  nameWithType: "BlobProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents the system properties for a blob."
  syntax:
    content: "public final class BlobProperties"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties()"
  id: "BlobProperties()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "BlobProperties()"
  nameWithType: "BlobProperties.BlobProperties()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `BlobProperties` class."
  syntax:
    content: "public BlobProperties()"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  id: "BlobProperties(com.microsoft.azure.storage.blob.BlobProperties)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "BlobProperties(BlobProperties other)"
  nameWithType: "BlobProperties.BlobProperties(BlobProperties other)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(BlobProperties other)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `BlobProperties` class by copying values from another instance of the `BlobProperties` class."
  syntax:
    content: "public BlobProperties(BlobProperties other)"
    parameters:
    - id: "other"
      type: "com.microsoft.azure.storage.blob.BlobProperties"
      description: "A <code>BlobProperties</code> object which represents the blob properties to copy."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(com.microsoft.azure.storage.blob.BlobType)"
  id: "BlobProperties(com.microsoft.azure.storage.blob.BlobType)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "BlobProperties(BlobType type)"
  nameWithType: "BlobProperties.BlobProperties(BlobType type)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties(BlobType type)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `BlobProperties` class."
  syntax:
    content: "public BlobProperties(BlobType type)"
    parameters:
    - id: "type"
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <code>BlobType</code> object which represents the blob type."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount()"
  id: "getAppendBlobCommittedBlockCount()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getAppendBlobCommittedBlockCount()"
  nameWithType: "BlobProperties.getAppendBlobCommittedBlockCount()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If the blob is an append blob, gets the number of committed blocks."
  syntax:
    content: "public Integer getAppendBlobCommittedBlockCount()"
    return:
      type: "java.lang.Integer"
      description: "A <code>Integer</code> value that represents the number of committed blocks."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getBlobType()"
  id: "getBlobType()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getBlobType()"
  nameWithType: "BlobProperties.getBlobType()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getBlobType()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getBlobType*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the blob type for the blob."
  syntax:
    content: "public BlobType getBlobType()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobType\" data-throw-if-not-resolved=\"false\">BlobType</xref> value that represents the blob type."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl()"
  id: "getCacheControl()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getCacheControl()"
  nameWithType: "BlobProperties.getCacheControl()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the cache control value for the blob."
  syntax:
    content: "public String getCacheControl()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content cache control value for the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition()"
  id: "getContentDisposition()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getContentDisposition()"
  nameWithType: "BlobProperties.getContentDisposition()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the content disposition value for the blob."
  syntax:
    content: "public String getContentDisposition()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content disposition, or <code>null</code> if content disposition has not been set\n         on the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding()"
  id: "getContentEncoding()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getContentEncoding()"
  nameWithType: "BlobProperties.getContentEncoding()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the content encoding value for the blob."
  syntax:
    content: "public String getContentEncoding()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content encoding, or <code>null</code> if content encoding has not been set\n         on the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage()"
  id: "getContentLanguage()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getContentLanguage()"
  nameWithType: "BlobProperties.getContentLanguage()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the content language value for the blob."
  syntax:
    content: "public String getContentLanguage()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content language, or <code>null</code> if content language has not been set on\n         the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5()"
  id: "getContentMD5()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getContentMD5()"
  nameWithType: "BlobProperties.getContentMD5()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the content MD5 value for the blob."
  syntax:
    content: "public String getContentMD5()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content MD5 value."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentType()"
  id: "getContentType()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getContentType()"
  nameWithType: "BlobProperties.getContentType()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentType()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getContentType*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the content type value for the blob."
  syntax:
    content: "public String getContentType()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the content type, or <code>null</code> if the content type has not be set for the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCopyState()"
  id: "getCopyState()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getCopyState()"
  nameWithType: "BlobProperties.getCopyState()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCopyState()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getCopyState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the blob's copy state."
  syntax:
    content: "public CopyState getCopyState()"
    return:
      type: "com.microsoft.azure.storage.blob.CopyState"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CopyState\" data-throw-if-not-resolved=\"false\">CopyState</xref> object which represents the copy state of the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime()"
  id: "getCreatedTime()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getCreatedTime()"
  nameWithType: "BlobProperties.getCreatedTime()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the time when the blob was created."
  syntax:
    content: "public Date getCreatedTime()"
    return:
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which represents the time when the blob was created."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime()"
  id: "getDeletedTime()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getDeletedTime()"
  nameWithType: "BlobProperties.getDeletedTime()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the time when the blob was deleted."
  syntax:
    content: "public Date getDeletedTime()"
    return:
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which represents the time when the blob was deleted. It returns null if the blob has not been deleted."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getEtag()"
  id: "getEtag()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getEtag()"
  nameWithType: "BlobProperties.getEtag()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getEtag()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the ETag value for the blob.\n\nThe ETag value is a unique identifier that is updated when a write operation is performed against the container. It may be used to perform operations conditionally, providing concurrency control and improved efficiency.\n\nThe <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfMatchCondition(java.lang.String)\" data-throw-if-not-resolved=\"false\">AccessCondition#generateIfMatchCondition(String)</xref> and <xref uid=\"com.microsoft.azure.storage.AccessCondition.generateIfNoneMatchCondition(java.lang.String)\" data-throw-if-not-resolved=\"false\">AccessCondition#generateIfNoneMatchCondition(String)</xref> methods take an ETag value and return an <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that may be specified on the request."
  syntax:
    content: "public String getEtag()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ETag value."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLastModified()"
  id: "getLastModified()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getLastModified()"
  nameWithType: "BlobProperties.getLastModified()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLastModified()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getLastModified*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the last modified time for the blob."
  syntax:
    content: "public Date getLastModified()"
    return:
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which represents the last modified time."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration()"
  id: "getLeaseDuration()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getLeaseDuration()"
  nameWithType: "BlobProperties.getLeaseDuration()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease duration for the blob."
  syntax:
    content: "public LeaseDuration getLeaseDuration()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseDuration"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseDuration\" data-throw-if-not-resolved=\"false\">LeaseDuration</xref> object which represents the lease duration."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState()"
  id: "getLeaseState()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getLeaseState()"
  nameWithType: "BlobProperties.getLeaseState()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease state for the blob."
  syntax:
    content: "public LeaseState getLeaseState()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseState"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseState\" data-throw-if-not-resolved=\"false\">LeaseState</xref> object which represents the lease state."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus()"
  id: "getLeaseStatus()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getLeaseStatus()"
  nameWithType: "BlobProperties.getLeaseStatus()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the lease status for the blob."
  syntax:
    content: "public LeaseStatus getLeaseStatus()"
    return:
      type: "com.microsoft.azure.storage.blob.LeaseStatus"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseStatus\" data-throw-if-not-resolved=\"false\">LeaseStatus</xref> object which represents the lease status."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLength()"
  id: "getLength()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "BlobProperties.getLength()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLength()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getLength*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the size, in bytes, of the blob."
  syntax:
    content: "public long getLength()"
    return:
      type: "long"
      description: "A <code>long</code> which represents the length of the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber()"
  id: "getPageBlobSequenceNumber()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getPageBlobSequenceNumber()"
  nameWithType: "BlobProperties.getPageBlobSequenceNumber()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If the blob is a page blob, gets the page blob's current sequence number."
  syntax:
    content: "public Long getPageBlobSequenceNumber()"
    return:
      type: "java.lang.Long"
      description: "A <code>Long</code> containing the page blob's current sequence number."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier()"
  id: "getPremiumPageBlobTier()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getPremiumPageBlobTier()"
  nameWithType: "BlobProperties.getPremiumPageBlobTier()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If using a premium account and the blob is a page blob, gets the tier of the blob."
  syntax:
    content: "public PremiumPageBlobTier getPremiumPageBlobTier()"
    return:
      type: "com.microsoft.azure.storage.blob.PremiumPageBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.PremiumPageBlobTier\" data-throw-if-not-resolved=\"false\">PremiumPageBlobTier</xref> object which represents the tier of the blob\n or <code>null</code> if the tier has not been set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus()"
  id: "getRehydrationStatus()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getRehydrationStatus()"
  nameWithType: "BlobProperties.getRehydrationStatus()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "The rehydration status if the blob is being rehydrated and the tier of the blob once the rehydration from archive has completed."
  syntax:
    content: "public RehydrationStatus getRehydrationStatus()"
    return:
      type: "com.microsoft.azure.storage.blob.RehydrationStatus"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays()"
  id: "getRemainingRetentionDays()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getRemainingRetentionDays()"
  nameWithType: "BlobProperties.getRemainingRetentionDays()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the number of days that the deleted blob will be kept by the service."
  syntax:
    content: "public Integer getRemainingRetentionDays()"
    return:
      type: "java.lang.Integer"
      description: "A <code>Integer</code> value that represents the number of days that the deleted blob will be kept by the service."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier()"
  id: "getStandardBlobTier()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getStandardBlobTier()"
  nameWithType: "BlobProperties.getStandardBlobTier()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If using a standard account and the blob is a block blob, gets the tier of the blob."
  syntax:
    content: "public StandardBlobTier getStandardBlobTier()"
    return:
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object which represents the tier of the blob\n or <code>null</code> if the tier has not been set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime()"
  id: "getTierChangeTime()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "getTierChangeTime()"
  nameWithType: "BlobProperties.getTierChangeTime()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets a value indicating the last time the tier was changed on the blob."
  syntax:
    content: "public Date getTierChangeTime()"
    return:
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which represents the last time the tier was changed."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred()"
  id: "isBlobTierInferred()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "isBlobTierInferred()"
  nameWithType: "BlobProperties.isBlobTierInferred()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets a value indicating if the tier of the blob has been inferred."
  syntax:
    content: "public Boolean isBlobTierInferred()"
    return:
      type: "java.lang.Boolean"
      description: "A <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\">java.lang.Boolean</xref> object which represents if the blob tier was inferred."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy()"
  id: "isIncrementalCopy()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "isIncrementalCopy()"
  nameWithType: "BlobProperties.isIncrementalCopy()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets if the blob is an incremental copy"
  syntax:
    content: "public boolean isIncrementalCopy()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> which specifies if the blob is an incremental copy."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted()"
  id: "isServerEncrypted()"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "isServerEncrypted()"
  nameWithType: "BlobProperties.isServerEncrypted()"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted()"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Gets the blob's server-side encryption status;"
  syntax:
    content: "public boolean isServerEncrypted()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> which specifies the blob's encryption status."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount(java.lang.Integer)"
  id: "setAppendBlobCommittedBlockCount(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setAppendBlobCommittedBlockCount(Integer appendBlobCommittedBlockCount)"
  nameWithType: "BlobProperties.setAppendBlobCommittedBlockCount(Integer appendBlobCommittedBlockCount)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount(Integer appendBlobCommittedBlockCount)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If the blob is an append blob, sets the number of committed blocks."
  syntax:
    content: "protected void setAppendBlobCommittedBlockCount(Integer appendBlobCommittedBlockCount)"
    parameters:
    - id: "appendBlobCommittedBlockCount"
      type: "java.lang.Integer"
      description: "A <code>Integer</code> value that represents the number of committed blocks."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred(java.lang.Boolean)"
  id: "setBlobTierInferred(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setBlobTierInferred(Boolean isBlobTierInferredTier)"
  nameWithType: "BlobProperties.setBlobTierInferred(Boolean isBlobTierInferredTier)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred(Boolean isBlobTierInferredTier)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets whether the blob tier is inferred."
  syntax:
    content: "protected void setBlobTierInferred(Boolean isBlobTierInferredTier)"
    parameters:
    - id: "isBlobTierInferredTier"
      type: "java.lang.Boolean"
      description: "A <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\">java.lang.Boolean</xref> which specifies if the blob tier is inferred."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setBlobType(com.microsoft.azure.storage.blob.BlobType)"
  id: "setBlobType(com.microsoft.azure.storage.blob.BlobType)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setBlobType(BlobType blobType)"
  nameWithType: "BlobProperties.setBlobType(BlobType blobType)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setBlobType(BlobType blobType)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setBlobType*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the blob type."
  syntax:
    content: "protected void setBlobType(BlobType blobType)"
    parameters:
    - id: "blobType"
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobType\" data-throw-if-not-resolved=\"false\">BlobType</xref> object which specifies the blob type to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl(java.lang.String)"
  id: "setCacheControl(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setCacheControl(String cacheControl)"
  nameWithType: "BlobProperties.setCacheControl(String cacheControl)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl(String cacheControl)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the cache control value for the blob."
  syntax:
    content: "public void setCacheControl(String cacheControl)"
    parameters:
    - id: "cacheControl"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the cache control value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition(java.lang.String)"
  id: "setContentDisposition(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setContentDisposition(String contentDisposition)"
  nameWithType: "BlobProperties.setContentDisposition(String contentDisposition)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition(String contentDisposition)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content disposition value for the blob."
  syntax:
    content: "public void setContentDisposition(String contentDisposition)"
    parameters:
    - id: "contentDisposition"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the content disposition value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding(java.lang.String)"
  id: "setContentEncoding(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setContentEncoding(String contentEncoding)"
  nameWithType: "BlobProperties.setContentEncoding(String contentEncoding)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding(String contentEncoding)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content encoding value for the blob."
  syntax:
    content: "public void setContentEncoding(String contentEncoding)"
    parameters:
    - id: "contentEncoding"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the content encoding value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage(java.lang.String)"
  id: "setContentLanguage(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setContentLanguage(String contentLanguage)"
  nameWithType: "BlobProperties.setContentLanguage(String contentLanguage)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage(String contentLanguage)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content language for the blob."
  syntax:
    content: "public void setContentLanguage(String contentLanguage)"
    parameters:
    - id: "contentLanguage"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the content language value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5(java.lang.String)"
  id: "setContentMD5(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setContentMD5(String contentMD5)"
  nameWithType: "BlobProperties.setContentMD5(String contentMD5)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5(String contentMD5)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content MD5 value for the blob."
  syntax:
    content: "public void setContentMD5(String contentMD5)"
    parameters:
    - id: "contentMD5"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the content MD5 value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentType(java.lang.String)"
  id: "setContentType(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setContentType(String contentType)"
  nameWithType: "BlobProperties.setContentType(String contentType)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentType(String contentType)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setContentType*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content type value for the blob."
  syntax:
    content: "public void setContentType(String contentType)"
    parameters:
    - id: "contentType"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the content type value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCopyState(com.microsoft.azure.storage.blob.CopyState)"
  id: "setCopyState(com.microsoft.azure.storage.blob.CopyState)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setCopyState(CopyState copyState)"
  nameWithType: "BlobProperties.setCopyState(CopyState copyState)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCopyState(CopyState copyState)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setCopyState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the copy state value for the blob"
  syntax:
    content: "protected void setCopyState(CopyState copyState)"
    parameters:
    - id: "copyState"
      type: "com.microsoft.azure.storage.blob.CopyState"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CopyState\" data-throw-if-not-resolved=\"false\">CopyState</xref> object which specifies the copy state value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime(java.util.Date)"
  id: "setCreatedTime(java.util.Date)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setCreatedTime(Date createdTime)"
  nameWithType: "BlobProperties.setCreatedTime(Date createdTime)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime(Date createdTime)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the createdTime value for the blob"
  syntax:
    content: "protected void setCreatedTime(Date createdTime)"
    parameters:
    - id: "createdTime"
      type: "java.util.Date"
      description: "A <code>Date</code> which represents the time when the blob was created."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime(java.util.Date)"
  id: "setDeletedTime(java.util.Date)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setDeletedTime(Date deletedTime)"
  nameWithType: "BlobProperties.setDeletedTime(Date deletedTime)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime(Date deletedTime)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the time when the blob was deleted."
  syntax:
    content: "protected void setDeletedTime(Date deletedTime)"
    parameters:
    - id: "deletedTime"
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which represents the time when the blob was deleted."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setEtag(java.lang.String)"
  id: "setEtag(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setEtag(String etag)"
  nameWithType: "BlobProperties.setEtag(String etag)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setEtag(String etag)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the ETag value for the blob."
  syntax:
    content: "protected void setEtag(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the ETag value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy(boolean)"
  id: "setIncrementalCopy(boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setIncrementalCopy(boolean isIncrementalCopy)"
  nameWithType: "BlobProperties.setIncrementalCopy(boolean isIncrementalCopy)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy(boolean isIncrementalCopy)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets whether the blob is an incremental copy."
  syntax:
    content: "protected void setIncrementalCopy(boolean isIncrementalCopy)"
    parameters:
    - id: "isIncrementalCopy"
      type: "boolean"
      description: "A <code>boolean</code> which specifies if the blob is an incremental copy."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLastModified(java.util.Date)"
  id: "setLastModified(java.util.Date)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setLastModified(Date lastModified)"
  nameWithType: "BlobProperties.setLastModified(Date lastModified)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLastModified(Date lastModified)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setLastModified*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the last modified time for the blob."
  syntax:
    content: "protected void setLastModified(Date lastModified)"
    parameters:
    - id: "lastModified"
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> object which specifies the last modified time to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  id: "setLeaseDuration(com.microsoft.azure.storage.blob.LeaseDuration)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setLeaseDuration(LeaseDuration leaseDuration)"
  nameWithType: "BlobProperties.setLeaseDuration(LeaseDuration leaseDuration)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration(LeaseDuration leaseDuration)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease duration for the blob."
  syntax:
    content: "protected void setLeaseDuration(LeaseDuration leaseDuration)"
    parameters:
    - id: "leaseDuration"
      type: "com.microsoft.azure.storage.blob.LeaseDuration"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseDuration\" data-throw-if-not-resolved=\"false\">LeaseDuration</xref> object which specifies the lease duration value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  id: "setLeaseState(com.microsoft.azure.storage.blob.LeaseState)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setLeaseState(LeaseState leaseState)"
  nameWithType: "BlobProperties.setLeaseState(LeaseState leaseState)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState(LeaseState leaseState)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease state for the blob."
  syntax:
    content: "protected void setLeaseState(LeaseState leaseState)"
    parameters:
    - id: "leaseState"
      type: "com.microsoft.azure.storage.blob.LeaseState"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseState\" data-throw-if-not-resolved=\"false\">LeaseState</xref> object which specifies the lease state value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  id: "setLeaseStatus(com.microsoft.azure.storage.blob.LeaseStatus)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setLeaseStatus(LeaseStatus leaseStatus)"
  nameWithType: "BlobProperties.setLeaseStatus(LeaseStatus leaseStatus)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus(LeaseStatus leaseStatus)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the lease status for the blob."
  syntax:
    content: "protected void setLeaseStatus(LeaseStatus leaseStatus)"
    parameters:
    - id: "leaseStatus"
      type: "com.microsoft.azure.storage.blob.LeaseStatus"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.LeaseStatus\" data-throw-if-not-resolved=\"false\">LeaseStatus</xref> object which specifies the lease status value to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLength(long)"
  id: "setLength(long)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setLength(long length)"
  nameWithType: "BlobProperties.setLength(long length)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLength(long length)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setLength*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the content length, in bytes, for the blob."
  syntax:
    content: "protected void setLength(long length)"
    parameters:
    - id: "length"
      type: "long"
      description: "A <code>long</code> which specifies the length to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber(java.lang.Long)"
  id: "setPageBlobSequenceNumber(java.lang.Long)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setPageBlobSequenceNumber(Long pageBlobSequenceNumber)"
  nameWithType: "BlobProperties.setPageBlobSequenceNumber(Long pageBlobSequenceNumber)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber(Long pageBlobSequenceNumber)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "If the blob is a page blob, sets the blob's current sequence number."
  syntax:
    content: "protected void setPageBlobSequenceNumber(Long pageBlobSequenceNumber)"
    parameters:
    - id: "pageBlobSequenceNumber"
      type: "java.lang.Long"
      description: "A long containing the blob's current sequence number."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier(com.microsoft.azure.storage.blob.PremiumPageBlobTier)"
  id: "setPremiumPageBlobTier(com.microsoft.azure.storage.blob.PremiumPageBlobTier)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)"
  nameWithType: "BlobProperties.setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the tier of the page blob. This is only supported for premium accounts."
  syntax:
    content: "protected void setPremiumPageBlobTier(PremiumPageBlobTier premiumPageBlobTier)"
    parameters:
    - id: "premiumPageBlobTier"
      type: "com.microsoft.azure.storage.blob.PremiumPageBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.PremiumPageBlobTier\" data-throw-if-not-resolved=\"false\">PremiumPageBlobTier</xref> object which represents the tier of the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus(com.microsoft.azure.storage.blob.RehydrationStatus)"
  id: "setRehydrationStatus(com.microsoft.azure.storage.blob.RehydrationStatus)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setRehydrationStatus(RehydrationStatus rehydrationStatus)"
  nameWithType: "BlobProperties.setRehydrationStatus(RehydrationStatus rehydrationStatus)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus(RehydrationStatus rehydrationStatus)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the rehydration status of the blob."
  syntax:
    content: "protected void setRehydrationStatus(RehydrationStatus rehydrationStatus)"
    parameters:
    - id: "rehydrationStatus"
      type: "com.microsoft.azure.storage.blob.RehydrationStatus"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.RehydrationStatus\" data-throw-if-not-resolved=\"false\">RehydrationStatus</xref> which specifies the rehydration status of the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays(java.lang.Integer)"
  id: "setRemainingRetentionDays(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setRemainingRetentionDays(Integer remainingRetentionDays)"
  nameWithType: "BlobProperties.setRemainingRetentionDays(Integer remainingRetentionDays)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays(Integer remainingRetentionDays)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the number days that the deleted blob will be kept by the service."
  syntax:
    content: "protected void setRemainingRetentionDays(Integer remainingRetentionDays)"
    parameters:
    - id: "remainingRetentionDays"
      type: "java.lang.Integer"
      description: "A <code>Integer</code> value that represents the number days that the deleted blob will be kept by the service."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted(boolean)"
  id: "setServerEncrypted(boolean)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setServerEncrypted(boolean serverEncrypted)"
  nameWithType: "BlobProperties.setServerEncrypted(boolean serverEncrypted)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted(boolean serverEncrypted)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the blob's server-side encryption status."
  syntax:
    content: "protected void setServerEncrypted(boolean serverEncrypted)"
    parameters:
    - id: "serverEncrypted"
      type: "boolean"
      description: "A <code>boolean</code> which specifies the encryption status to set."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  id: "setStandardBlobTier(com.microsoft.azure.storage.blob.StandardBlobTier)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setStandardBlobTier(StandardBlobTier standardBlobTier)"
  nameWithType: "BlobProperties.setStandardBlobTier(StandardBlobTier standardBlobTier)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier(StandardBlobTier standardBlobTier)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the tier of the block blob. This is only supported for standard storage accounts."
  syntax:
    content: "protected void setStandardBlobTier(StandardBlobTier standardBlobTier)"
    parameters:
    - id: "standardBlobTier"
      type: "com.microsoft.azure.storage.blob.StandardBlobTier"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.StandardBlobTier\" data-throw-if-not-resolved=\"false\">StandardBlobTier</xref> object which represents the tier of the blob."
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime(java.util.Date)"
  id: "setTierChangeTime(java.util.Date)"
  parent: "com.microsoft.azure.storage.blob.BlobProperties"
  langs:
  - "java"
  name: "setTierChangeTime(Date tierChangeTime)"
  nameWithType: "BlobProperties.setTierChangeTime(Date tierChangeTime)"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime(Date tierChangeTime)"
  overload: "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the last time the tier was modified on the blob."
  syntax:
    content: "protected void setTierChangeTime(Date tierChangeTime)"
    parameters:
    - id: "tierChangeTime"
      type: "java.util.Date"
      description: "A <xref uid=\"java.util.Date\" data-throw-if-not-resolved=\"false\">java.util.Date</xref> which specifies the last time the tier was modified."
references:
- uid: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties*"
  name: "BlobProperties"
  nameWithType: "BlobProperties.BlobProperties"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.BlobProperties"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobType"
  name: "BlobType"
  nameWithType: "BlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobType"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount*"
  name: "getAppendBlobCommittedBlockCount"
  nameWithType: "BlobProperties.getAppendBlobCommittedBlockCount"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getAppendBlobCommittedBlockCount"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getBlobType*"
  name: "getBlobType"
  nameWithType: "BlobProperties.getBlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getBlobType"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl*"
  name: "getCacheControl"
  nameWithType: "BlobProperties.getCacheControl"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCacheControl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition*"
  name: "getContentDisposition"
  nameWithType: "BlobProperties.getContentDisposition"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentDisposition"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding*"
  name: "getContentEncoding"
  nameWithType: "BlobProperties.getContentEncoding"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentEncoding"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage*"
  name: "getContentLanguage"
  nameWithType: "BlobProperties.getContentLanguage"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentLanguage"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5*"
  name: "getContentMD5"
  nameWithType: "BlobProperties.getContentMD5"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentMD5"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getContentType*"
  name: "getContentType"
  nameWithType: "BlobProperties.getContentType"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getContentType"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CopyState"
  name: "CopyState"
  nameWithType: "CopyState"
  fullName: "com.microsoft.azure.storage.blob.CopyState"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCopyState*"
  name: "getCopyState"
  nameWithType: "BlobProperties.getCopyState"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCopyState"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime*"
  name: "getCreatedTime"
  nameWithType: "BlobProperties.getCreatedTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getCreatedTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getEtag*"
  name: "getEtag"
  nameWithType: "BlobProperties.getEtag"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getEtag"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLastModified*"
  name: "getLastModified"
  nameWithType: "BlobProperties.getLastModified"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLastModified"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred*"
  name: "isBlobTierInferred"
  nameWithType: "BlobProperties.isBlobTierInferred"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isBlobTierInferred"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime*"
  name: "getTierChangeTime"
  nameWithType: "BlobProperties.getTierChangeTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getTierChangeTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseStatus"
  name: "LeaseStatus"
  nameWithType: "LeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.LeaseStatus"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus*"
  name: "getLeaseStatus"
  nameWithType: "BlobProperties.getLeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseState"
  name: "LeaseState"
  nameWithType: "LeaseState"
  fullName: "com.microsoft.azure.storage.blob.LeaseState"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState*"
  name: "getLeaseState"
  nameWithType: "BlobProperties.getLeaseState"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.LeaseDuration"
  name: "LeaseDuration"
  nameWithType: "LeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.LeaseDuration"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration*"
  name: "getLeaseDuration"
  nameWithType: "BlobProperties.getLeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLeaseDuration"
  package: "com.microsoft.azure.storage.blob"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getLength*"
  name: "getLength"
  nameWithType: "BlobProperties.getLength"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getLength"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber*"
  name: "getPageBlobSequenceNumber"
  nameWithType: "BlobProperties.getPageBlobSequenceNumber"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getPageBlobSequenceNumber"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.PremiumPageBlobTier"
  name: "PremiumPageBlobTier"
  nameWithType: "PremiumPageBlobTier"
  fullName: "com.microsoft.azure.storage.blob.PremiumPageBlobTier"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier*"
  name: "getPremiumPageBlobTier"
  nameWithType: "BlobProperties.getPremiumPageBlobTier"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getPremiumPageBlobTier"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.StandardBlobTier"
  name: "StandardBlobTier"
  nameWithType: "StandardBlobTier"
  fullName: "com.microsoft.azure.storage.blob.StandardBlobTier"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier*"
  name: "getStandardBlobTier"
  nameWithType: "BlobProperties.getStandardBlobTier"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getStandardBlobTier"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.RehydrationStatus"
  name: "RehydrationStatus"
  nameWithType: "RehydrationStatus"
  fullName: "com.microsoft.azure.storage.blob.RehydrationStatus"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus*"
  name: "getRehydrationStatus"
  nameWithType: "BlobProperties.getRehydrationStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getRehydrationStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted*"
  name: "isServerEncrypted"
  nameWithType: "BlobProperties.isServerEncrypted"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isServerEncrypted"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy*"
  name: "isIncrementalCopy"
  nameWithType: "BlobProperties.isIncrementalCopy"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.isIncrementalCopy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime*"
  name: "getDeletedTime"
  nameWithType: "BlobProperties.getDeletedTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getDeletedTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays*"
  name: "getRemainingRetentionDays"
  nameWithType: "BlobProperties.getRemainingRetentionDays"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.getRemainingRetentionDays"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl*"
  name: "setCacheControl"
  nameWithType: "BlobProperties.setCacheControl"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCacheControl"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition*"
  name: "setContentDisposition"
  nameWithType: "BlobProperties.setContentDisposition"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentDisposition"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding*"
  name: "setContentEncoding"
  nameWithType: "BlobProperties.setContentEncoding"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentEncoding"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage*"
  name: "setContentLanguage"
  nameWithType: "BlobProperties.setContentLanguage"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentLanguage"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5*"
  name: "setContentMD5"
  nameWithType: "BlobProperties.setContentMD5"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentMD5"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setContentType*"
  name: "setContentType"
  nameWithType: "BlobProperties.setContentType"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setContentType"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount*"
  name: "setAppendBlobCommittedBlockCount"
  nameWithType: "BlobProperties.setAppendBlobCommittedBlockCount"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setAppendBlobCommittedBlockCount"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setBlobType*"
  name: "setBlobType"
  nameWithType: "BlobProperties.setBlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setBlobType"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCopyState*"
  name: "setCopyState"
  nameWithType: "BlobProperties.setCopyState"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCopyState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime*"
  name: "setCreatedTime"
  nameWithType: "BlobProperties.setCreatedTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setCreatedTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setEtag*"
  name: "setEtag"
  nameWithType: "BlobProperties.setEtag"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setEtag"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLastModified*"
  name: "setLastModified"
  nameWithType: "BlobProperties.setLastModified"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLastModified"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus*"
  name: "setLeaseStatus"
  nameWithType: "BlobProperties.setLeaseStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState*"
  name: "setLeaseState"
  nameWithType: "BlobProperties.setLeaseState"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseState"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration*"
  name: "setLeaseDuration"
  nameWithType: "BlobProperties.setLeaseDuration"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLeaseDuration"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setLength*"
  name: "setLength"
  nameWithType: "BlobProperties.setLength"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setLength"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber*"
  name: "setPageBlobSequenceNumber"
  nameWithType: "BlobProperties.setPageBlobSequenceNumber"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setPageBlobSequenceNumber"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted*"
  name: "setServerEncrypted"
  nameWithType: "BlobProperties.setServerEncrypted"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setServerEncrypted"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy*"
  name: "setIncrementalCopy"
  nameWithType: "BlobProperties.setIncrementalCopy"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setIncrementalCopy"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier*"
  name: "setPremiumPageBlobTier"
  nameWithType: "BlobProperties.setPremiumPageBlobTier"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setPremiumPageBlobTier"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier*"
  name: "setStandardBlobTier"
  nameWithType: "BlobProperties.setStandardBlobTier"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setStandardBlobTier"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred*"
  name: "setBlobTierInferred"
  nameWithType: "BlobProperties.setBlobTierInferred"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setBlobTierInferred"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime*"
  name: "setTierChangeTime"
  nameWithType: "BlobProperties.setTierChangeTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setTierChangeTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus*"
  name: "setRehydrationStatus"
  nameWithType: "BlobProperties.setRehydrationStatus"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setRehydrationStatus"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime*"
  name: "setDeletedTime"
  nameWithType: "BlobProperties.setDeletedTime"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setDeletedTime"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays*"
  name: "setRemainingRetentionDays"
  nameWithType: "BlobProperties.setRemainingRetentionDays"
  fullName: "com.microsoft.azure.storage.blob.BlobProperties.setRemainingRetentionDays"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
