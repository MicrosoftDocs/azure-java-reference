### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.TableEntity"
  id: "TableEntity"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.TableEntity.getEtag()"
  - "com.microsoft.azure.storage.table.TableEntity.getPartitionKey()"
  - "com.microsoft.azure.storage.table.TableEntity.getRowKey()"
  - "com.microsoft.azure.storage.table.TableEntity.getTimestamp()"
  - "com.microsoft.azure.storage.table.TableEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.TableEntity.setEtag(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableEntity.setPartitionKey(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableEntity.setRowKey(java.lang.String)"
  - "com.microsoft.azure.storage.table.TableEntity.setTimestamp(java.util.Date)"
  - "com.microsoft.azure.storage.table.TableEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "TableEntity"
  nameWithType: "TableEntity"
  fullName: "com.microsoft.azure.storage.table.TableEntity"
  type: "Interface"
  package: "com.microsoft.azure.storage.table"
  summary: "An interface required for table entity types. The <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> interface declares getter and setter methods for the common entity properties, and `writeEntity` and `readEntity` methods for serialization and deserialization of all entity properties using a property map. Create classes implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> to customize property storage, retrieval, serialization and deserialization, and to provide additional custom logic for a table entity.\n\nThe Storage client library includes two implementations of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that provide for simple property access and serialization:\n\n<xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> and provides a simple property map to store and retrieve properties. Use a <xref uid=\"com.microsoft.azure.storage.table.DynamicTableEntity\" data-throw-if-not-resolved=\"false\">DynamicTableEntity</xref> for simple access to entity properties when only a subset of properties are returned (for example, by a select clause in a query), or for when your query can return multiple entity types with different properties. You can also use this type to perform bulk table updates of heterogeneous entities without losing property information.\n\n<xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> is an implementation of <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that uses reflection-based serialization and deserialization behavior in its `writeEntity` and `readEntity` methods. <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref>\\-derived classes with methods that follow a convention for types and naming are serialized and deserialized automatically.\n\nAny class that implements <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> can take advantage of the automatic reflection-based serialization and deserialization behavior in <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> by invoking the static methods `TableServiceEntity.readEntityWithReflection` in `readEntity` and `TableServiceEntity.writeEntityWithReflection` in `writeEntity`. The class must provide methods that follow the type and naming convention to be serialized and deserialized automatically. When both a getter method and setter method are found for a given property name and data type, then the appropriate method is invoked automatically to serialize or deserialize the data. The reflection code looks for getter and setter methods in pairs of the form\n\n`public type getPropertyName() { ... }`\n\nand\n\n`public void setPropertyName(type parameter) { ... }`\n\nwhere *PropertyName* is a property name for the table entity, and *type* is a Java type compatible with the EDM data type of the property. See the table in the class description for <xref uid=\"com.microsoft.azure.storage.table.TableServiceEntity\" data-throw-if-not-resolved=\"false\">TableServiceEntity</xref> for a map of property types to their Java equivalents. The <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation may be applied with a `name` attribute to specify a property name for reflection on getter and setter methods that do not follow the property name convention. Method names and the `name` attribute of <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotations are case sensitive for matching property names with reflection. Use the <xref uid=\"com.microsoft.azure.storage.table.Ignore\" data-throw-if-not-resolved=\"false\">Ignore</xref> annotation to prevent methods from being used by reflection for automatic serialization and deserialization. Note that the names \"PartitionKey\", \"RowKey\", \"Timestamp\", and \"Etag\" are reserved and will be ignored if set with the <xref uid=\"com.microsoft.azure.storage.table.StoreAs\" data-throw-if-not-resolved=\"false\">StoreAs</xref> annotation in a subclass that uses the reflection methods."
  syntax:
    content: "public interface TableEntity"
- uid: "com.microsoft.azure.storage.table.TableEntity.getEtag()"
  id: "getEtag()"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "getEtag()"
  nameWithType: "TableEntity.getEtag()"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getEtag()"
  overload: "com.microsoft.azure.storage.table.TableEntity.getEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service."
  syntax:
    content: "public abstract String getEtag()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ETag for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.getPartitionKey()"
  id: "getPartitionKey()"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "getPartitionKey()"
  nameWithType: "TableEntity.getPartitionKey()"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getPartitionKey()"
  overload: "com.microsoft.azure.storage.table.TableEntity.getPartitionKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the PartitionKey value for the entity."
  syntax:
    content: "public abstract String getPartitionKey()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the PartitionKey value for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.getRowKey()"
  id: "getRowKey()"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "getRowKey()"
  nameWithType: "TableEntity.getRowKey()"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getRowKey()"
  overload: "com.microsoft.azure.storage.table.TableEntity.getRowKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the RowKey value for the entity."
  syntax:
    content: "public abstract String getRowKey()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the RowKey value for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.getTimestamp()"
  id: "getTimestamp()"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "getTimestamp()"
  nameWithType: "TableEntity.getTimestamp()"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getTimestamp()"
  overload: "com.microsoft.azure.storage.table.TableEntity.getTimestamp*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the Timestamp for the entity. The server manages the value of Timestamp, which cannot be modified."
  syntax:
    content: "public abstract Date getTimestamp()"
    return:
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> object which represents the Timestamp value for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  id: "readEntity(java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  nameWithType: "TableEntity.readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.TableEntity.readEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Populates an instance of the object implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> using the specified properties parameter, which represents a map of `String` property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values."
  syntax:
    content: "public abstract void readEntity(HashMap<String,EntityProperty> properties, OperationContext opContext)"
    parameters:
    - id: "properties"
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "The <code>java.util.HashMap</code> of <code>String</code> to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values\n            to use to populate the table entity instance."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object used to track the execution of the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an error occurs during the operation."
- uid: "com.microsoft.azure.storage.table.TableEntity.setEtag(java.lang.String)"
  id: "setEtag(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "setEtag(String etag)"
  nameWithType: "TableEntity.setEtag(String etag)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setEtag(String etag)"
  overload: "com.microsoft.azure.storage.table.TableEntity.setEtag*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the ETag value to verify for the entity. This value is used to determine if the table entity has changed since it was last read from Microsoft Azure storage. The client cannot update this value on the service."
  syntax:
    content: "public abstract void setEtag(String etag)"
    parameters:
    - id: "etag"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the ETag to set for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.setPartitionKey(java.lang.String)"
  id: "setPartitionKey(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "setPartitionKey(String partitionKey)"
  nameWithType: "TableEntity.setPartitionKey(String partitionKey)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setPartitionKey(String partitionKey)"
  overload: "com.microsoft.azure.storage.table.TableEntity.setPartitionKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the PartitionKey value for the entity."
  syntax:
    content: "public abstract void setPartitionKey(String partitionKey)"
    parameters:
    - id: "partitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the PartitionKey value to set for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.setRowKey(java.lang.String)"
  id: "setRowKey(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "setRowKey(String rowKey)"
  nameWithType: "TableEntity.setRowKey(String rowKey)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setRowKey(String rowKey)"
  overload: "com.microsoft.azure.storage.table.TableEntity.setRowKey*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the RowKey value for the entity."
  syntax:
    content: "public abstract void setRowKey(String rowKey)"
    parameters:
    - id: "rowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which specifies the RowKey value to set for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.setTimestamp(java.util.Date)"
  id: "setTimestamp(java.util.Date)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "setTimestamp(Date timeStamp)"
  nameWithType: "TableEntity.setTimestamp(Date timeStamp)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setTimestamp(Date timeStamp)"
  overload: "com.microsoft.azure.storage.table.TableEntity.setTimestamp*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets the Timestamp value for the entity. Note that timestamp is a read-only property on the service and should not be set by the user."
  syntax:
    content: "public abstract void setTimestamp(Date timeStamp)"
    parameters:
    - id: "timeStamp"
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> which specifies the Timestamp value to set for the entity."
- uid: "com.microsoft.azure.storage.table.TableEntity.writeEntity(com.microsoft.azure.storage.OperationContext)"
  id: "writeEntity(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.TableEntity"
  langs:
  - "java"
  name: "writeEntity(OperationContext opContext)"
  nameWithType: "TableEntity.writeEntity(OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.TableEntity.writeEntity*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns a map of `String` property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data typed values that represents the serialized content of the table entity instance."
  syntax:
    content: "public abstract HashMap<String,EntityProperty> writeEntity(OperationContext opContext)"
    parameters:
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object used to track the execution of the operation."
    return:
      type: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
      description: "A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> data\n         typed values representing the properties of the table entity."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an error occurs during the operation."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.table.TableEntity.getEtag*"
  name: "getEtag"
  nameWithType: "TableEntity.getEtag"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getEtag"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.getPartitionKey*"
  name: "getPartitionKey"
  nameWithType: "TableEntity.getPartitionKey"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getPartitionKey"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.getRowKey*"
  name: "getRowKey"
  nameWithType: "TableEntity.getRowKey"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getRowKey"
  package: "com.microsoft.azure.storage.table"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "com.microsoft.azure.storage.table.TableEntity.getTimestamp*"
  name: "getTimestamp"
  nameWithType: "TableEntity.getTimestamp"
  fullName: "com.microsoft.azure.storage.table.TableEntity.getTimestamp"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.util.HashMap<java.lang.String,com.microsoft.azure.storage.table.EntityProperty>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.storage.table.EntityProperty"
    name: "EntityProperty"
    fullName: "com.microsoft.azure.storage.table.EntityProperty"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.table.TableEntity.readEntity*"
  name: "readEntity"
  nameWithType: "TableEntity.readEntity"
  fullName: "com.microsoft.azure.storage.table.TableEntity.readEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.setEtag*"
  name: "setEtag"
  nameWithType: "TableEntity.setEtag"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setEtag"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.setPartitionKey*"
  name: "setPartitionKey"
  nameWithType: "TableEntity.setPartitionKey"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setPartitionKey"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.setRowKey*"
  name: "setRowKey"
  nameWithType: "TableEntity.setRowKey"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setRowKey"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.setTimestamp*"
  name: "setTimestamp"
  nameWithType: "TableEntity.setTimestamp"
  fullName: "com.microsoft.azure.storage.table.TableEntity.setTimestamp"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableEntity.writeEntity*"
  name: "writeEntity"
  nameWithType: "TableEntity.writeEntity"
  fullName: "com.microsoft.azure.storage.table.TableEntity.writeEntity"
  package: "com.microsoft.azure.storage.table"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
  name: "String,EntityProperty"
  nameWithType: "String,EntityProperty"
  fullName: "java.lang.String,com.microsoft.azure.storage.table.EntityProperty"
