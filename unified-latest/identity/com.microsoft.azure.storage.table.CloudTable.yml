### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.CloudTable"
  id: "CloudTable"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.CloudTable.<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>)"
  - "com.microsoft.azure.storage.table.CloudTable.<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation)"
  - "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.<T>execute(com.microsoft.azure.storage.table.TableQuery<T>)"
  - "com.microsoft.azure.storage.table.CloudTable.<T>execute(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation)"
  - "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.CloudTable(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.table.CloudTable.CloudTable(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.lang.String,com.microsoft.azure.storage.table.CloudTableClient)"
  - "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.net.URI)"
  - "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.table.CloudTable.create()"
  - "com.microsoft.azure.storage.table.CloudTable.create(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.createIfNotExists()"
  - "com.microsoft.azure.storage.table.CloudTable.createIfNotExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.delete()"
  - "com.microsoft.azure.storage.table.CloudTable.delete(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.deleteIfExists()"
  - "com.microsoft.azure.storage.table.CloudTable.deleteIfExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.downloadPermissions()"
  - "com.microsoft.azure.storage.table.CloudTable.downloadPermissions(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableBatchOperation)"
  - "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableBatchOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)"
  - "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.exists()"
  - "com.microsoft.azure.storage.table.CloudTable.exists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.table.CloudTable.getName()"
  - "com.microsoft.azure.storage.table.CloudTable.getServiceClient()"
  - "com.microsoft.azure.storage.table.CloudTable.getStorageUri()"
  - "com.microsoft.azure.storage.table.CloudTable.getUri()"
  - "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(com.microsoft.azure.storage.table.TablePermissions)"
  - "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(com.microsoft.azure.storage.table.TablePermissions,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudTable"
  nameWithType: "CloudTable"
  fullName: "com.microsoft.azure.storage.table.CloudTable"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "Represents a table in the Microsoft Azure Table service."
  syntax:
    content: "public final class CloudTable"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.CloudTable.<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>)"
  id: "<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<R>execute(TableQuery<?> query, EntityResolver<R> resolver)"
  nameWithType: "CloudTable.<R>execute(TableQuery<?> query, EntityResolver<R> resolver)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<R>execute(TableQuery<?> query, EntityResolver<R> resolver)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query, applying the specified <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> to the result.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public Iterable<R> <R>execute(TableQuery<?> query, EntityResolver<R> resolver)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<?>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use."
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<R>"
      description: "An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance which creates a projection of the table query result entities into\n            the specified type <code>R</code>."
    return:
      type: "java.lang.Iterable<R>"
      description: "A collection implementing the <code>Iterable</code> interface containing the projection into type\n         <code>R</code> of the results of executing the query."
- uid: "com.microsoft.azure.storage.table.CloudTable.<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "<R>execute(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<R>execute(TableQuery<?> query, EntityResolver<R> resolver, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.<R>execute(TableQuery<?> query, EntityResolver<R> resolver, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<R>execute(TableQuery<?> query, EntityResolver<R> resolver, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query, applying the specified <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> to the result, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public Iterable<R> <R>execute(TableQuery<?> query, EntityResolver<R> resolver, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<?>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use."
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<R>"
      description: "An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance which creates a projection of the table query result entities into\n            the specified type <code>R</code>."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "java.lang.Iterable<R>"
      description: "A collection implementing the <code>Iterable</code> interface containing the projection into type\n         <code>R</code> of the results of executing the query."
- uid: "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation)"
  id: "<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken)"
  nameWithType: "CloudTable.<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken)"
  overload: "com.microsoft.azure.storage.table.CloudTable.executeSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query in segmented mode with the specified <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> continuation token, applying the <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> to the result. Executing a query with `executeSegmented` allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public ResultSegment<R> <R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<?>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use."
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<R>"
      description: "An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance which creates a projection of the table query result entities into\n            the specified type <code>R</code>."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object representing a continuation token from the server when the\n            operation returns a partial result. Specify <code>null</code> on the initial call. Call the\n            <xref uid=\"com.microsoft.azure.storage.ResultSegment.getContinuationToken()\" data-throw-if-not-resolved=\"false\">ResultSegment#getContinuationToken()</xref> method on the result to obtain the\n            <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object to use in the next call to resume the query."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<R>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> containing the projection into type <code>R</code> of the results of executing\n         the query."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "<R>executeSegmented(com.microsoft.azure.storage.table.TableQuery<?>,com.microsoft.azure.storage.table.EntityResolver<R>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.executeSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query in segmented mode with the specified <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> continuation token, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>, applying the <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> to the result. Executing a query with `executeSegmented` allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public ResultSegment<R> <R>executeSegmented(TableQuery<?> query, EntityResolver<R> resolver, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<?>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use."
    - id: "resolver"
      type: "com.microsoft.azure.storage.table.EntityResolver<R>"
      description: "An <xref uid=\"com.microsoft.azure.storage.table.EntityResolver\" data-throw-if-not-resolved=\"false\">EntityResolver</xref> instance which creates a projection of the table query result entities into\n            the specified type <code>R</code>."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object representing a continuation token from the server when the\n            operation returns a partial result. Specify <code>null</code> on the initial call. Call the\n            <xref uid=\"com.microsoft.azure.storage.ResultSegment.getContinuationToken()\" data-throw-if-not-resolved=\"false\">ResultSegment#getContinuationToken()</xref> method on the result to obtain the\n            <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object to use in the next call to resume the query."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<R>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> containing the projection into type <code>R</code> of the results of executing\n         the query."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.<T>execute(com.microsoft.azure.storage.table.TableQuery<T>)"
  id: "<T>execute(com.microsoft.azure.storage.table.TableQuery<T>)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<T>execute(TableQuery<T> query)"
  nameWithType: "CloudTable.<T>execute(TableQuery<T> query)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<T>execute(TableQuery<T> query)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public Iterable<T> <T>execute(TableQuery<T> query)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use,\n            specialized for a type T implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>."
    return:
      type: "java.lang.Iterable<T>"
      description: "A collection implementing the <code>Iterable</code> interface specialized for type T of the results of\n         executing the query."
- uid: "com.microsoft.azure.storage.table.CloudTable.<T>execute(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "<T>execute(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<T>execute(TableQuery<T> query, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.<T>execute(TableQuery<T> query, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<T>execute(TableQuery<T> query, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public Iterable<T> <T>execute(TableQuery<T> query, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use,\n            specialized for a type T implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "java.lang.Iterable<T>"
      description: "A collection implementing the <code>Iterable</code> interface specialized for type T of the results of\n         executing the query."
- uid: "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation)"
  id: "<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken)"
  nameWithType: "CloudTable.<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken)"
  overload: "com.microsoft.azure.storage.table.CloudTable.executeSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query in segmented mode with a <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> continuation token. Executing a query with `executeSegmented` allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public ResultSegment<T> <T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use,\n            specialized for a type T implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object representing a continuation token from the server when the\n            operation returns a partial result. Specify <code>null</code> on the initial call. Call the\n            <xref uid=\"com.microsoft.azure.storage.ResultSegment.getContinuationToken()\" data-throw-if-not-resolved=\"false\">ResultSegment#getContinuationToken()</xref> method on the result to obtain the\n            <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object to use in the next call to resume the query."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> specialized for type T of the results of executing the query."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "<T>executeSegmented(com.microsoft.azure.storage.table.TableQuery<T>,com.microsoft.azure.storage.ResultContinuation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.executeSegmented*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes a query in segmented mode with a <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> continuation token, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>. Executing a query with `executeSegmented` allows the query to be resumed after returning partial results, using information returned by the server in the <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> object.\n\nThis method will invoke a [Query Entities][] operation on the [Table Service REST API][] to query the table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Query Entities]: http://msdn.microsoft.com/en-us/library/azure/dd179421.aspx\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public ResultSegment<T> <T>executeSegmented(TableQuery<T> query, ResultContinuation continuationToken, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "query"
      type: "com.microsoft.azure.storage.table.TableQuery<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableQuery\" data-throw-if-not-resolved=\"false\">TableQuery</xref> instance specifying the table to query and the query parameters to use,\n            specialized for a type T implementing <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref>."
    - id: "continuationToken"
      type: "com.microsoft.azure.storage.ResultContinuation"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object representing a continuation token from the server when the\n            operation returns a partial result. Specify <code>null</code> on the initial call. Call the\n            <xref uid=\"com.microsoft.azure.storage.ResultSegment.getContinuationToken()\" data-throw-if-not-resolved=\"false\">ResultSegment#getContinuationToken()</xref> method on the result to obtain the\n            <xref uid=\"com.microsoft.azure.storage.ResultContinuation\" data-throw-if-not-resolved=\"false\">ResultContinuation</xref> object to use in the next call to resume the query."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "com.microsoft.azure.storage.ResultSegment<T>"
      description: "A <xref uid=\"com.microsoft.azure.storage.ResultSegment\" data-throw-if-not-resolved=\"false\">ResultSegment</xref> specialized for type T of the results of executing the query."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable(com.microsoft.azure.storage.StorageUri)"
  id: "CloudTable(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "CloudTable(StorageUri uri)"
  nameWithType: "CloudTable.CloudTable(StorageUri uri)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable(StorageUri uri)"
  overload: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates an instance of the `CloudTable` class using the specified table URI. The table URI must include a SAS token."
  syntax:
    content: "public CloudTable(StorageUri uri)"
    parameters:
    - id: "uri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the absolute URI of the table."
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudTable(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "CloudTable(StorageUri uri, StorageCredentials credentials)"
  nameWithType: "CloudTable.CloudTable(StorageUri uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable(StorageUri uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates an instance of the `CloudTable` class using the specified table StorageUri and credentials."
  syntax:
    content: "public CloudTable(StorageUri uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the absolute StorageUri of the table."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.lang.String,com.microsoft.azure.storage.table.CloudTableClient)"
  id: "CloudTable(java.lang.String,com.microsoft.azure.storage.table.CloudTableClient)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "CloudTable(String tableName, CloudTableClient client)"
  nameWithType: "CloudTable.CloudTable(String tableName, CloudTableClient client)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable(String tableName, CloudTableClient client)"
  overload: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates an instance of the `CloudTable` class using the specified name and client."
  syntax:
    content: "protected CloudTable(String tableName, CloudTableClient client)"
    parameters:
    - id: "tableName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the table, which must adhere to table naming rules.\n            The table name should not include any path separator characters (/).\n            Table names are case insensitive, must be unique within an account and must be between 3-63 characters\n            long. Table names must start with an cannot begin with a numeric character and may only contain\n            alphanumeric characters. Some table names are reserved, including \"table\"."
    - id: "client"
      type: "com.microsoft.azure.storage.table.CloudTableClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> object that represents the associated service client, and that specifies\n            the endpoint for the Table service."
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.net.URI)"
  id: "CloudTable(java.net.URI)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "CloudTable(URI uri)"
  nameWithType: "CloudTable.CloudTable(URI uri)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable(URI uri)"
  overload: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates an instance of the `CloudTable` class using the specified table URI. The table URI must include a SAS token."
  syntax:
    content: "public CloudTable(URI uri)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the table."
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudTable(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "CloudTable(URI uri, StorageCredentials credentials)"
  nameWithType: "CloudTable.CloudTable(URI uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable(URI uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates an instance of the `CloudTable` class using the specified table URI and credentials."
  syntax:
    content: "public CloudTable(URI uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the table."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.table.CloudTable.create()"
  id: "create()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "create()"
  nameWithType: "CloudTable.create()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.create()"
  overload: "com.microsoft.azure.storage.table.CloudTable.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates the table in the storage service with default request options.\n\nThis method invokes the [Create Table][] REST API to create the specified table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Create Table]: http://msdn.microsoft.com/en-us/library/azure/dd135729.aspx"
  syntax:
    content: "public void create()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.create(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "create(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "create(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.create(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.create(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates the table in the storage service, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method invokes the [Create Table][] REST API to create the specified table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Create Table]: http://msdn.microsoft.com/en-us/library/azure/dd135729.aspx"
  syntax:
    content: "public void create(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an error occurs accessing the storage service, or because the table cannot be\n             created, or already exists."
- uid: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists()"
  id: "createIfNotExists()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "createIfNotExists()"
  nameWithType: "CloudTable.createIfNotExists()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists()"
  overload: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates the table in the storage service using default request options if it does not already exist."
  syntax:
    content: "public boolean createIfNotExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the table is created in the storage service; otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createIfNotExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "createIfNotExists(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.createIfNotExists(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates the table in the storage service with the specified request options and operation context, if it does not already exist."
  syntax:
    content: "public boolean createIfNotExists(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the table did not already exist and was created; otherwise <code>false</code> ."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.delete()"
  id: "delete()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CloudTable.delete()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.delete()"
  overload: "com.microsoft.azure.storage.table.CloudTable.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Deletes the table from the storage service."
  syntax:
    content: "public void delete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.delete(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "delete(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.delete(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.delete(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Deletes the table from the storage service, using the specified request options and operation context."
  syntax:
    content: "public void delete(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists()"
  id: "deleteIfExists()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "deleteIfExists()"
  nameWithType: "CloudTable.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists()"
  overload: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Deletes the table from the storage service, if it exists."
  syntax:
    content: "public boolean deleteIfExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the table existed in the storage service and has been deleted; otherwise\n         <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "deleteIfExists(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.deleteIfExists(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Deletes the table from the storage service using the specified request options and operation context, if it exists."
  syntax:
    content: "public boolean deleteIfExists(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "A value of <code>true</code> if the table existed in the storage service and has been deleted, otherwise\n         <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions()"
  id: "downloadPermissions()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "downloadPermissions()"
  nameWithType: "CloudTable.downloadPermissions()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions()"
  overload: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Downloads the permission settings for the table."
  syntax:
    content: "public TablePermissions downloadPermissions()"
    return:
      type: "com.microsoft.azure.storage.table.TablePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TablePermissions\" data-throw-if-not-resolved=\"false\">TablePermissions</xref> object that represents the container's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadPermissions(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "downloadPermissions(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.downloadPermissions(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Downloads the permissions settings for the table using the specified request options and operation context."
  syntax:
    content: "public TablePermissions downloadPermissions(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.table.TablePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TablePermissions\" data-throw-if-not-resolved=\"false\">TablePermissions</xref> object that represents the table's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableBatchOperation)"
  id: "execute(com.microsoft.azure.storage.table.TableBatchOperation)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "execute(TableBatchOperation batch)"
  nameWithType: "CloudTable.execute(TableBatchOperation batch)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.execute(TableBatchOperation batch)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes the specified batch operation on a table as an atomic operation. A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. Only one retrieve operation is allowed per batch. Note that the total payload of a batch operation is limited to 4MB.\n\nThis method invokes an [Entity Group Transaction][] on the REST API to execute the specified batch operation on the table as an atomic unit, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Entity Group Transaction]: http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx"
  syntax:
    content: "public ArrayList<TableResult> execute(TableBatchOperation batch)"
    parameters:
    - id: "batch"
      type: "com.microsoft.azure.storage.table.TableBatchOperation"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref> object representing the operations to execute on the table."
    return:
      type: "java.util.ArrayList<com.microsoft.azure.storage.table.TableResult>"
      description: "A <code>java.util.ArrayList</code> of <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> that contains the results, in order, of\n         each <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> in the <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref> on the named table."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs accessing the storage service, or the operation fails."
- uid: "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableBatchOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "execute(com.microsoft.azure.storage.table.TableBatchOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "execute(TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.execute(TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.execute(TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes the specified batch operation on a table as an atomic operation, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>. A batch operation may contain up to 100 individual table operations, with the requirement that each operation entity must have same partition key. Only one retrieve operation is allowed per batch. Note that the total payload of a batch operation is limited to 4MB.\n\nThis method invokes an [Entity Group Transaction][] on the REST API to execute the specified batch operation on the table as an atomic unit, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Entity Group Transaction]: http://msdn.microsoft.com/en-us/library/azure/dd894038.aspx"
  syntax:
    content: "public ArrayList<TableResult> execute(TableBatchOperation batch, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "batch"
      type: "com.microsoft.azure.storage.table.TableBatchOperation"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref> object representing the operations to execute on the table."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "java.util.ArrayList<com.microsoft.azure.storage.table.TableResult>"
      description: "A <code>java.util.ArrayList</code> of <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> that contains the results, in order, of\n         each <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> in the <xref uid=\"com.microsoft.azure.storage.table.TableBatchOperation\" data-throw-if-not-resolved=\"false\">TableBatchOperation</xref> on the named table."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs accessing the storage service, or the operation fails."
- uid: "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation)"
  id: "execute(com.microsoft.azure.storage.table.TableOperation)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "execute(TableOperation operation)"
  nameWithType: "CloudTable.execute(TableOperation operation)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.execute(TableOperation operation)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes the operation on a table.\n\nThis method will invoke the [Table Service REST API][] to execute the specified operation on the table, using the Table service endpoint and storage account credentials of this instance.\n\n\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public TableResult execute(TableOperation operation)"
    parameters:
    - id: "operation"
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> object representing the operation to execute on the table."
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> containing the result of executing the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on the table."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs accessing the storage service, or the operation fails."
- uid: "com.microsoft.azure.storage.table.CloudTable.execute(com.microsoft.azure.storage.table.TableOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "execute(com.microsoft.azure.storage.table.TableOperation,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "execute(TableOperation operation, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.execute(TableOperation operation, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.execute(TableOperation operation, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.execute*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Executes the operation on a table, using the specified <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> and <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref>.\n\nThis method will invoke the [Table Service REST API][] to execute the specified operation on the table, using the Table service endpoint and storage account credentials of this instance. Use the <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> to override execution options such as the timeout or retry policy for the operation.\n\n\n[Table Service REST API]: http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx"
  syntax:
    content: "public TableResult execute(TableOperation operation, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "operation"
      type: "com.microsoft.azure.storage.table.TableOperation"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> object representing the operation to execute on the table."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies execution options such as retry policy and timeout\n            settings for the operation. Specify <code>null</code> to use the request options specified on the\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object for tracking the current operation. Specify <code>null</code> to\n            safely ignore operation context."
    return:
      type: "com.microsoft.azure.storage.table.TableResult"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableResult\" data-throw-if-not-resolved=\"false\">TableResult</xref> containing the result of executing the <xref uid=\"com.microsoft.azure.storage.table.TableOperation\" data-throw-if-not-resolved=\"false\">TableOperation</xref> on the table."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if an error occurs accessing the storage service, or the operation fails."
- uid: "com.microsoft.azure.storage.table.CloudTable.exists()"
  id: "exists()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "exists()"
  nameWithType: "CloudTable.exists()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.exists()"
  overload: "com.microsoft.azure.storage.table.CloudTable.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns a value that indicates whether the table exists in the storage service."
  syntax:
    content: "public boolean exists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the table exists in the storage service; otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.exists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "exists(com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "exists(TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.exists(TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.exists(TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns a value that indicates whether the table exists in the storage service, using the specified request options and operation context."
  syntax:
    content: "public boolean exists(TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the table exists in the storage service, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred during the operation."
- uid: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey)"
  nameWithType: "CloudTable.generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey)"
  overload: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates a shared access signature for the table."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.table.SharedAccessTablePolicy"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.SharedAccessTablePolicy\" data-throw-if-not-resolved=\"false\">SharedAccessTablePolicy</xref> object which represents the access policy for the shared access\n            signature."
    - id: "accessPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents a table-level access policy."
    - id: "startPartitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the starting partition key."
    - id: "startRowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the starting row key."
    - id: "endPartitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ending partition key."
    - id: "endRowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ending end key."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> containing the shared access signature for the table."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If an invalid key was passed."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an invalid key was passed."
- uid: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.table.SharedAccessTablePolicy,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudTable.generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Creates a shared access signature for the table."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessTablePolicy policy, String accessPolicyIdentifier, String startPartitionKey, String startRowKey, String endPartitionKey, String endRowKey, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.table.SharedAccessTablePolicy"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.SharedAccessTablePolicy\" data-throw-if-not-resolved=\"false\">SharedAccessTablePolicy</xref> object which represents the access policy for the shared access\n            signature."
    - id: "accessPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents a table-level access policy."
    - id: "startPartitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the starting partition key."
    - id: "startRowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the starting row key."
    - id: "endPartitionKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ending partition key."
    - id: "endRowKey"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the ending end key."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> containing the shared access signature for the table."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If an invalid key was passed."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an invalid key was passed."
- uid: "com.microsoft.azure.storage.table.CloudTable.getName()"
  id: "getName()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CloudTable.getName()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getName()"
  overload: "com.microsoft.azure.storage.table.CloudTable.getName*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the name of the table."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the name of the table."
- uid: "com.microsoft.azure.storage.table.CloudTable.getServiceClient()"
  id: "getServiceClient()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "getServiceClient()"
  nameWithType: "CloudTable.getServiceClient()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getServiceClient()"
  overload: "com.microsoft.azure.storage.table.CloudTable.getServiceClient*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the table service client associated with this queue."
  syntax:
    content: "public CloudTableClient getServiceClient()"
    return:
      type: "com.microsoft.azure.storage.table.CloudTableClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref> object that represents the service client associated with this table."
- uid: "com.microsoft.azure.storage.table.CloudTable.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "CloudTable.getStorageUri()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getStorageUri()"
  overload: "com.microsoft.azure.storage.table.CloudTable.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Returns the list of URIs for all locations."
  syntax:
    content: "public final StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> that represents the list of URIs for all locations.."
- uid: "com.microsoft.azure.storage.table.CloudTable.getUri()"
  id: "getUri()"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "getUri()"
  nameWithType: "CloudTable.getUri()"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getUri()"
  overload: "com.microsoft.azure.storage.table.CloudTable.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the absolute URI for this table."
  syntax:
    content: "public URI getUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the URI for this table."
- uid: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(com.microsoft.azure.storage.table.TablePermissions)"
  id: "uploadPermissions(com.microsoft.azure.storage.table.TablePermissions)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "uploadPermissions(TablePermissions permissions)"
  nameWithType: "CloudTable.uploadPermissions(TablePermissions permissions)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(TablePermissions permissions)"
  overload: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Uploads the table's permissions."
  syntax:
    content: "public void uploadPermissions(TablePermissions permissions)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.table.TablePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TablePermissions\" data-throw-if-not-resolved=\"false\">TablePermissions</xref> object that represents the permissions to upload."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(com.microsoft.azure.storage.table.TablePermissions,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadPermissions(com.microsoft.azure.storage.table.TablePermissions,com.microsoft.azure.storage.table.TableRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.table.CloudTable"
  langs:
  - "java"
  name: "uploadPermissions(TablePermissions permissions, TableRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudTable.uploadPermissions(TablePermissions permissions, TableRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions(TablePermissions permissions, TableRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Uploads the table's permissions using the specified request options and operation context."
  syntax:
    content: "public void uploadPermissions(TablePermissions permissions, TableRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.table.TablePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TablePermissions\" data-throw-if-not-resolved=\"false\">TablePermissions</xref> object that represents the permissions to upload."
    - id: "options"
      type: "com.microsoft.azure.storage.table.TableRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.table.TableRequestOptions\" data-throw-if-not-resolved=\"false\">TableRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.table.CloudTableClient\" data-throw-if-not-resolved=\"false\">CloudTableClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.table.CloudTable.CloudTable*"
  name: "CloudTable"
  nameWithType: "CloudTable.CloudTable"
  fullName: "com.microsoft.azure.storage.table.CloudTable.CloudTable"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.table.CloudTableClient"
  name: "CloudTableClient"
  nameWithType: "CloudTableClient"
  fullName: "com.microsoft.azure.storage.table.CloudTableClient"
- uid: "com.microsoft.azure.storage.table.CloudTable.getName*"
  name: "getName"
  nameWithType: "CloudTable.getName"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getName"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.getServiceClient*"
  name: "getServiceClient"
  nameWithType: "CloudTable.getServiceClient"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getServiceClient"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "CloudTable.getStorageUri"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getStorageUri"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.getUri*"
  name: "getUri"
  nameWithType: "CloudTable.getUri"
  fullName: "com.microsoft.azure.storage.table.CloudTable.getUri"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.table.CloudTable.create*"
  name: "create"
  nameWithType: "CloudTable.create"
  fullName: "com.microsoft.azure.storage.table.CloudTable.create"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableRequestOptions"
  name: "TableRequestOptions"
  nameWithType: "TableRequestOptions"
  fullName: "com.microsoft.azure.storage.table.TableRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists*"
  name: "createIfNotExists"
  nameWithType: "CloudTable.createIfNotExists"
  fullName: "com.microsoft.azure.storage.table.CloudTable.createIfNotExists"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.delete*"
  name: "delete"
  nameWithType: "CloudTable.delete"
  fullName: "com.microsoft.azure.storage.table.CloudTable.delete"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists*"
  name: "deleteIfExists"
  nameWithType: "CloudTable.deleteIfExists"
  fullName: "com.microsoft.azure.storage.table.CloudTable.deleteIfExists"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableBatchOperation"
  name: "TableBatchOperation"
  nameWithType: "TableBatchOperation"
  fullName: "com.microsoft.azure.storage.table.TableBatchOperation"
- uid: "java.util.ArrayList<com.microsoft.azure.storage.table.TableResult>"
  spec.java:
  - uid: "java.util.ArrayList"
    name: "ArrayList"
    fullName: "java.util.ArrayList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.storage.table.TableResult"
    name: "TableResult"
    fullName: "com.microsoft.azure.storage.table.TableResult"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.CloudTable.execute*"
  name: "execute"
  nameWithType: "CloudTable.execute"
  fullName: "com.microsoft.azure.storage.table.CloudTable.execute"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TableOperation"
  name: "TableOperation"
  nameWithType: "TableOperation"
  fullName: "com.microsoft.azure.storage.table.TableOperation"
- uid: "com.microsoft.azure.storage.table.TableResult"
  name: "TableResult"
  nameWithType: "TableResult"
  fullName: "com.microsoft.azure.storage.table.TableResult"
- uid: "com.microsoft.azure.storage.table.TableQuery<?>"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.TableQuery"
    name: "TableQuery"
    fullName: "com.microsoft.azure.storage.table.TableQuery"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.EntityResolver<R>"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.EntityResolver"
    name: "EntityResolver"
    fullName: "com.microsoft.azure.storage.table.EntityResolver"
  - name: "<"
    fullName: "<"
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Iterable<R>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.TableQuery<T>"
  spec.java:
  - uid: "com.microsoft.azure.storage.table.TableQuery"
    name: "TableQuery"
    fullName: "com.microsoft.azure.storage.table.TableQuery"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Iterable<T>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.ResultContinuation"
  name: "ResultContinuation"
  nameWithType: "ResultContinuation"
  fullName: "com.microsoft.azure.storage.ResultContinuation"
- uid: "com.microsoft.azure.storage.ResultSegment<R>"
  spec.java:
  - uid: "com.microsoft.azure.storage.ResultSegment"
    name: "ResultSegment"
    fullName: "com.microsoft.azure.storage.ResultSegment"
  - name: "<"
    fullName: "<"
  - uid: "R"
    name: "R"
    fullName: "R"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.CloudTable.executeSegmented*"
  name: "<R>executeSegmented"
  nameWithType: "CloudTable.<R>executeSegmented"
  fullName: "com.microsoft.azure.storage.table.CloudTable.<R>executeSegmented"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.ResultSegment<T>"
  spec.java:
  - uid: "com.microsoft.azure.storage.ResultSegment"
    name: "ResultSegment"
    fullName: "com.microsoft.azure.storage.ResultSegment"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.CloudTable.exists*"
  name: "exists"
  nameWithType: "CloudTable.exists"
  fullName: "com.microsoft.azure.storage.table.CloudTable.exists"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.TablePermissions"
  name: "TablePermissions"
  nameWithType: "TablePermissions"
  fullName: "com.microsoft.azure.storage.table.TablePermissions"
- uid: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions*"
  name: "uploadPermissions"
  nameWithType: "CloudTable.uploadPermissions"
  fullName: "com.microsoft.azure.storage.table.CloudTable.uploadPermissions"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions*"
  name: "downloadPermissions"
  nameWithType: "CloudTable.downloadPermissions"
  fullName: "com.microsoft.azure.storage.table.CloudTable.downloadPermissions"
  package: "com.microsoft.azure.storage.table"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.table.SharedAccessTablePolicy"
  name: "SharedAccessTablePolicy"
  nameWithType: "SharedAccessTablePolicy"
  fullName: "com.microsoft.azure.storage.table.SharedAccessTablePolicy"
- uid: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudTable.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.table.CloudTable.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.IPRange"
  name: "IPRange"
  nameWithType: "IPRange"
  fullName: "com.microsoft.azure.storage.IPRange"
- uid: "com.microsoft.azure.storage.SharedAccessProtocols"
  name: "SharedAccessProtocols"
  nameWithType: "SharedAccessProtocols"
  fullName: "com.microsoft.azure.storage.SharedAccessProtocols"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.ArrayList"
  name: "ArrayList"
  nameWithType: "ArrayList"
  fullName: "java.util.ArrayList"
- uid: "com.microsoft.azure.storage.table.TableQuery"
  name: "TableQuery"
  nameWithType: "TableQuery"
  fullName: "com.microsoft.azure.storage.table.TableQuery"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "R"
  name: "R"
  nameWithType: "R"
  fullName: "R"
- uid: "com.microsoft.azure.storage.table.EntityResolver"
  name: "EntityResolver"
  nameWithType: "EntityResolver"
  fullName: "com.microsoft.azure.storage.table.EntityResolver"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "T"
  name: "T"
  nameWithType: "T"
  fullName: "T"
- uid: "com.microsoft.azure.storage.ResultSegment"
  name: "ResultSegment"
  nameWithType: "ResultSegment"
  fullName: "com.microsoft.azure.storage.ResultSegment"
