### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  id: "BlobEncryptStream"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudAppendBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudPageBlob,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.close()"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.flush()"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.opContext"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.options"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.write(byte[],int,int)"
  - "com.microsoft.azure.storage.blob.BlobEncryptStream.write(java.io.InputStream,long)"
  langs:
  - "java"
  name: "BlobEncryptStream"
  nameWithType: "BlobEncryptStream"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Stream that will be used for encrypting blobs."
  syntax:
    content: "final class BlobEncryptStream extends BlobOutputStream"
  inheritance:
  - "java.lang.Object"
  - "java.io.OutputStream"
  - "com.microsoft.azure.storage.blob.BlobOutputStream"
  inheritedMembers:
  - "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[])"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[],int,int)"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(int)"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(java.io.InputStream,long)"
  - "java.io.OutputStream.nullOutputStream()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudAppendBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  id: "BlobEncryptStream(com.microsoft.azure.storage.blob.CloudAppendBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "BlobEncryptStream(CloudAppendBlob appendBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  nameWithType: "BlobEncryptStream.BlobEncryptStream(CloudAppendBlob appendBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(CloudAppendBlob appendBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Initializes a new instance of the BlobEncryptStream class for a CloudPageBlob"
  syntax:
    content: "protected BlobEncryptStream(CloudAppendBlob appendBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
    parameters:
    - id: "appendBlob"
      type: "com.microsoft.azure.storage.blob.CloudAppendBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudAppendBlob\" data-throw-if-not-resolved=\"false\">CloudAppendBlob</xref> object which represents the blob that this stream is associated with."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object which represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object which specifies any additional options for the request"
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object which is used to track the execution of the operation"
    - id: "cipher"
      type: "javax.crypto.Cipher"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">Cipher</xref> object used to encrypt the stream."
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  id: "BlobEncryptStream(com.microsoft.azure.storage.blob.CloudBlockBlob,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "BlobEncryptStream(CloudBlockBlob blockBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  nameWithType: "BlobEncryptStream.BlobEncryptStream(CloudBlockBlob blockBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(CloudBlockBlob blockBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Initializes a new instance of the BlobEncryptStream class for a CloudBlockBlob"
  syntax:
    content: "protected BlobEncryptStream(CloudBlockBlob blockBlob, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
    parameters:
    - id: "blockBlob"
      type: "com.microsoft.azure.storage.blob.CloudBlockBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\">CloudBlockBlob</xref> object which represents the blob that this stream is associated with."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object which represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object which specifies any additional options for the request."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object which is used to track the execution of the operation."
    - id: "cipher"
      type: "javax.crypto.Cipher"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">Cipher</xref> object used to encrypt the stream."
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(com.microsoft.azure.storage.blob.CloudPageBlob,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  id: "BlobEncryptStream(com.microsoft.azure.storage.blob.CloudPageBlob,long,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.blob.BlobRequestOptions,com.microsoft.azure.storage.OperationContext,javax.crypto.Cipher)"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "BlobEncryptStream(CloudPageBlob pageBlob, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  nameWithType: "BlobEncryptStream.BlobEncryptStream(CloudPageBlob pageBlob, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream(CloudPageBlob pageBlob, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Initializes a new instance of the BlobEncryptStream class for a CloudPageBlob"
  syntax:
    content: "protected BlobEncryptStream(CloudPageBlob pageBlob, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext, Cipher cipher)"
    parameters:
    - id: "pageBlob"
      type: "com.microsoft.azure.storage.blob.CloudPageBlob"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\">CloudPageBlob</xref> object which represents the blob that this stream is associated with."
    - id: "length"
      type: "long"
      description: "A <code>long</code> which represents the length of the page blob in bytes, which must be a multiple of\n            512."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object which represents the access conditions for the blob."
    - id: "options"
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.BlobRequestOptions\" data-throw-if-not-resolved=\"false\">BlobRequestOptions</xref> object which specifies any additional options for the request"
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object which is used to track the execution of the operation"
    - id: "cipher"
      type: "javax.crypto.Cipher"
      description: "A <xref uid=\"\" data-throw-if-not-resolved=\"false\">Cipher</xref> object used to encrypt the stream."
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.close()"
  id: "close()"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "close()"
  nameWithType: "BlobEncryptStream.close()"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.close()"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.close*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public void close()"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.flush()"
  id: "flush()"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "flush()"
  nameWithType: "BlobEncryptStream.flush()"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.flush()"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.flush*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public void flush()"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.opContext"
  id: "opContext"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "opContext"
  nameWithType: "BlobEncryptStream.opContext"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.opContext"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the OperationContext for the current stream."
  syntax:
    content: " OperationContext opContext"
    return:
      type: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.options"
  id: "options"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "options"
  nameWithType: "BlobEncryptStream.options"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.options"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Holds the options for the current stream."
  syntax:
    content: " BlobRequestOptions options"
    return:
      type: "com.microsoft.azure.storage.blob.BlobRequestOptions"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.write(byte[],int,int)"
  id: "write(byte[],int,int)"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "write(byte[] data, int offset, int length)"
  nameWithType: "BlobEncryptStream.write(byte[] data, int offset, int length)"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.write(byte[] data, int offset, int length)"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public void write(byte[] data, int offset, int length)"
    parameters:
    - id: "data"
      type: "byte[]"
    - id: "offset"
      type: "int"
    - id: "length"
      type: "int"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.write(java.io.InputStream,long)"
  id: "write(java.io.InputStream,long)"
  parent: "com.microsoft.azure.storage.blob.BlobEncryptStream"
  langs:
  - "java"
  name: "write(InputStream sourceStream, long writeLength)"
  nameWithType: "BlobEncryptStream.write(InputStream sourceStream, long writeLength)"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.write(InputStream sourceStream, long writeLength)"
  overload: "com.microsoft.azure.storage.blob.BlobEncryptStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public void write(InputStream sourceStream, long writeLength)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
    - id: "writeLength"
      type: "long"
  exceptions:
  - type: "java.io.IOException"
  - type: "com.microsoft.azure.storage.StorageException"
references:
- uid: "com.microsoft.azure.storage.blob.CloudBlockBlob"
  name: "CloudBlockBlob"
  nameWithType: "CloudBlockBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudBlockBlob"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.blob.BlobRequestOptions"
  name: "BlobRequestOptions"
  nameWithType: "BlobRequestOptions"
  fullName: "com.microsoft.azure.storage.blob.BlobRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "javax.crypto.Cipher"
  spec.java:
  - uid: "javax.crypto.Cipher"
    name: "Cipher"
    fullName: "javax.crypto.Cipher"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream*"
  name: "BlobEncryptStream"
  nameWithType: "BlobEncryptStream.BlobEncryptStream"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.BlobEncryptStream"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.CloudPageBlob"
  name: "CloudPageBlob"
  nameWithType: "CloudPageBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudPageBlob"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.CloudAppendBlob"
  name: "CloudAppendBlob"
  nameWithType: "CloudAppendBlob"
  fullName: "com.microsoft.azure.storage.blob.CloudAppendBlob"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.write*"
  name: "write"
  nameWithType: "BlobEncryptStream.write"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.write"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.flush*"
  name: "flush"
  nameWithType: "BlobEncryptStream.flush"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.flush"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobEncryptStream.close*"
  name: "close"
  nameWithType: "BlobEncryptStream.close"
  fullName: "com.microsoft.azure.storage.blob.BlobEncryptStream.close"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream"
  name: "BlobOutputStream"
  nameWithType: "BlobOutputStream"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(java.io.InputStream,long)"
  name: "BlobOutputStream.write(InputStream,long)"
  nameWithType: "BlobOutputStream.write(InputStream,long)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(java.io.InputStream,long)"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[])"
  name: "BlobOutputStream.write(byte[])"
  nameWithType: "BlobOutputStream.write(byte[])"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[])"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
  name: "BlobOutputStream.close()"
  nameWithType: "BlobOutputStream.close()"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.io.OutputStream.nullOutputStream()"
  name: "OutputStream.nullOutputStream()"
  nameWithType: "OutputStream.nullOutputStream()"
  fullName: "java.io.OutputStream.nullOutputStream()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(int)"
  name: "BlobOutputStream.write(int)"
  nameWithType: "BlobOutputStream.write(int)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(int)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[],int,int)"
  name: "BlobOutputStream.write(byte[],int,int)"
  nameWithType: "BlobOutputStream.write(byte[],int,int)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[],int,int)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
  name: "BlobOutputStream.flush()"
  nameWithType: "BlobOutputStream.flush()"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
