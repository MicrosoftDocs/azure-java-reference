### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobType"
  id: "BlobType"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobType.APPEND_BLOB"
  - "com.microsoft.azure.storage.blob.BlobType.BLOCK_BLOB"
  - "com.microsoft.azure.storage.blob.BlobType.PAGE_BLOB"
  - "com.microsoft.azure.storage.blob.BlobType.UNSPECIFIED"
  - "com.microsoft.azure.storage.blob.BlobType.parse(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobType.valueOf(java.lang.String)"
  - "com.microsoft.azure.storage.blob.BlobType.values()"
  langs:
  - "java"
  name: "BlobType"
  nameWithType: "BlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobType"
  type: "Enum"
  package: "com.microsoft.azure.storage.blob"
  summary: "Specifies the type of a blob."
  syntax:
    content: "public enum BlobType extends Enum<BlobType>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobType.APPEND_BLOB"
  id: "APPEND_BLOB"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "APPEND_BLOB"
  nameWithType: "BlobType.APPEND_BLOB"
  fullName: "com.microsoft.azure.storage.blob.BlobType.APPEND_BLOB"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Specifies the blob is an append blob."
  syntax:
    content: "public static final BlobType APPEND_BLOB"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
- uid: "com.microsoft.azure.storage.blob.BlobType.BLOCK_BLOB"
  id: "BLOCK_BLOB"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "BLOCK_BLOB"
  nameWithType: "BlobType.BLOCK_BLOB"
  fullName: "com.microsoft.azure.storage.blob.BlobType.BLOCK_BLOB"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Specifies the blob is a block blob."
  syntax:
    content: "public static final BlobType BLOCK_BLOB"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
- uid: "com.microsoft.azure.storage.blob.BlobType.BlobType()"
  id: "BlobType()"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "BlobType()"
  nameWithType: "BlobType.BlobType()"
  fullName: "com.microsoft.azure.storage.blob.BlobType.BlobType()"
  overload: "com.microsoft.azure.storage.blob.BlobType.BlobType*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "private BlobType()"
- uid: "com.microsoft.azure.storage.blob.BlobType.PAGE_BLOB"
  id: "PAGE_BLOB"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "PAGE_BLOB"
  nameWithType: "BlobType.PAGE_BLOB"
  fullName: "com.microsoft.azure.storage.blob.BlobType.PAGE_BLOB"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Specifies the blob is a page blob."
  syntax:
    content: "public static final BlobType PAGE_BLOB"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
- uid: "com.microsoft.azure.storage.blob.BlobType.UNSPECIFIED"
  id: "UNSPECIFIED"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "UNSPECIFIED"
  nameWithType: "BlobType.UNSPECIFIED"
  fullName: "com.microsoft.azure.storage.blob.BlobType.UNSPECIFIED"
  type: "Field"
  package: "com.microsoft.azure.storage.blob"
  summary: "Specifies the blob type is not specified."
  syntax:
    content: "public static final BlobType UNSPECIFIED"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
- uid: "com.microsoft.azure.storage.blob.BlobType.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "parse(String typeString)"
  nameWithType: "BlobType.parse(String typeString)"
  fullName: "com.microsoft.azure.storage.blob.BlobType.parse(String typeString)"
  overload: "com.microsoft.azure.storage.blob.BlobType.parse*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Returns the enum value representing the blob type for the specified string."
  syntax:
    content: "protected static BlobType parse(String typeString)"
    parameters:
    - id: "typeString"
      type: "java.lang.String"
      description: "A <code>String</code> that represents a blob type, such as \"blockblob\" or \"pageblob\"."
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
      description: "A <code>BlobType</code> value corresponding to the string specified by <code>typeString</code>."
- uid: "com.microsoft.azure.storage.blob.BlobType.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "BlobType.valueOf(String name)"
  fullName: "com.microsoft.azure.storage.blob.BlobType.valueOf(String name)"
  overload: "com.microsoft.azure.storage.blob.BlobType.valueOf*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public static BlobType valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType"
- uid: "com.microsoft.azure.storage.blob.BlobType.values()"
  id: "values()"
  parent: "com.microsoft.azure.storage.blob.BlobType"
  langs:
  - "java"
  name: "values()"
  nameWithType: "BlobType.values()"
  fullName: "com.microsoft.azure.storage.blob.BlobType.values()"
  overload: "com.microsoft.azure.storage.blob.BlobType.values*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public static BlobType[] values()"
    return:
      type: "com.microsoft.azure.storage.blob.BlobType[]"
references:
- uid: "com.microsoft.azure.storage.blob.BlobType.BlobType*"
  name: "BlobType"
  nameWithType: "BlobType.BlobType"
  fullName: "com.microsoft.azure.storage.blob.BlobType.BlobType"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobType[]"
  spec.java:
  - uid: "com.microsoft.azure.storage.blob.BlobType"
    name: "BlobType"
    fullName: "com.microsoft.azure.storage.blob.BlobType"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.storage.blob.BlobType.values*"
  name: "values"
  nameWithType: "BlobType.values"
  fullName: "com.microsoft.azure.storage.blob.BlobType.values"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.blob.BlobType.valueOf*"
  name: "valueOf"
  nameWithType: "BlobType.valueOf"
  fullName: "com.microsoft.azure.storage.blob.BlobType.valueOf"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobType.parse*"
  name: "parse"
  nameWithType: "BlobType.parse"
  fullName: "com.microsoft.azure.storage.blob.BlobType.parse"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.lang.Enum<com.microsoft.azure.storage.blob.BlobType>"
  name: "Enum<BlobType>"
  nameWithType: "Enum<BlobType>"
  fullName: "java.lang.Enum<com.microsoft.azure.storage.blob.BlobType>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
