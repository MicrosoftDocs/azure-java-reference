### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.PathUtility"
  id: "PathUtility"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.PathUtility.addToQuery(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.addToQuery(java.net.URI,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery(java.net.URI,java.util.HashMap<java.lang.String,java.lang.String[]>)"
  - "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(java.net.URI,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(java.net.URI,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials(com.microsoft.azure.storage.StorageCredentials,java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getContainerURI(com.microsoft.azure.storage.StorageUri,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(com.microsoft.azure.storage.StorageUri,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getShareURI(com.microsoft.azure.storage.StorageUri,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri(java.net.URI,boolean)"
  - "com.microsoft.azure.storage.core.PathUtility.parseQueryString(java.lang.String)"
  - "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment(java.net.URI)"
  - "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment(com.microsoft.azure.storage.StorageUri)"
  langs:
  - "java"
  name: "PathUtility"
  nameWithType: "PathUtility"
  fullName: "com.microsoft.azure.storage.core.PathUtility"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. A class to help modify paths"
  syntax:
    content: "public final class PathUtility"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.PathUtility.PathUtility()"
  id: "PathUtility()"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "PathUtility()"
  nameWithType: "PathUtility.PathUtility()"
  fullName: "com.microsoft.azure.storage.core.PathUtility.PathUtility()"
  overload: "com.microsoft.azure.storage.core.PathUtility.PathUtility*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Private Default Ctor."
  syntax:
    content: "private PathUtility()"
- uid: "com.microsoft.azure.storage.core.PathUtility.addToQuery(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  id: "addToQuery(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "addToQuery(StorageUri resourceURI, String queryString)"
  nameWithType: "PathUtility.addToQuery(StorageUri resourceURI, String queryString)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.addToQuery(StorageUri resourceURI, String queryString)"
  overload: "com.microsoft.azure.storage.core.PathUtility.addToQuery*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Adds a queryString to an URI."
  syntax:
    content: "public static StorageUri addToQuery(StorageUri resourceURI, String queryString)"
    parameters:
    - id: "resourceURI"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the URI of the resource"
    - id: "queryString"
      type: "java.lang.String"
      description: "the query string to add"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "an appended URI."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "if the resulting URI is invalid."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if the resulting URI is invalid."
- uid: "com.microsoft.azure.storage.core.PathUtility.addToQuery(java.net.URI,java.lang.String)"
  id: "addToQuery(java.net.URI,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "addToQuery(URI resourceURI, String queryString)"
  nameWithType: "PathUtility.addToQuery(URI resourceURI, String queryString)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.addToQuery(URI resourceURI, String queryString)"
  overload: "com.microsoft.azure.storage.core.PathUtility.addToQuery*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Adds a queryString to an URI."
  syntax:
    content: "public static URI addToQuery(URI resourceURI, String queryString)"
    parameters:
    - id: "resourceURI"
      type: "java.net.URI"
      description: "the URI of the resource"
    - id: "queryString"
      type: "java.lang.String"
      description: "the query string to add"
    return:
      type: "java.net.URI"
      description: "an appended URI."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "if the resulting URI is invalid."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if the resulting URI is invalid."
- uid: "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery(java.net.URI,java.util.HashMap<java.lang.String,java.lang.String[]>)"
  id: "addToSingleUriQuery(java.net.URI,java.util.HashMap<java.lang.String,java.lang.String[]>)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "addToSingleUriQuery(URI resourceURI, HashMap<String,String[]> fieldCollection)"
  nameWithType: "PathUtility.addToSingleUriQuery(URI resourceURI, HashMap<String,String[]> fieldCollection)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery(URI resourceURI, HashMap<String,String[]> fieldCollection)"
  overload: "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Adds a queryString to an URI."
  syntax:
    content: "public static URI addToSingleUriQuery(URI resourceURI, HashMap<String,String[]> fieldCollection)"
    parameters:
    - id: "resourceURI"
      type: "java.net.URI"
      description: "the URI of the resource"
    - id: "fieldCollection"
      type: "java.util.HashMap<java.lang.String,java.lang.String[]>"
      description: "the key/ values collection to append."
    return:
      type: "java.net.URI"
      description: "an appended URI."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "if the resulting URI is invalid."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "if the resulting URI is invalid."
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(java.net.URI,java.lang.String)"
  id: "appendPathToSingleUri(java.net.URI,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "appendPathToSingleUri(URI uri, String relativeOrAbsoluteUri)"
  nameWithType: "PathUtility.appendPathToSingleUri(URI uri, String relativeOrAbsoluteUri)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(URI uri, String relativeOrAbsoluteUri)"
  overload: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Appends a path to a URI correctly using \"/\" as separator."
  syntax:
    content: "public static URI appendPathToSingleUri(URI uri, String relativeOrAbsoluteUri)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "The base Uri."
    - id: "relativeOrAbsoluteUri"
      type: "java.lang.String"
      description: "The relative or absloute URI."
    return:
      type: "java.net.URI"
      description: "The appended Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(java.net.URI,java.lang.String,java.lang.String)"
  id: "appendPathToSingleUri(java.net.URI,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "appendPathToSingleUri(URI uri, String relativeUri, String separator)"
  nameWithType: "PathUtility.appendPathToSingleUri(URI uri, String relativeUri, String separator)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri(URI uri, String relativeUri, String separator)"
  overload: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Appends a path to a URI correctly using the given separator."
  syntax:
    content: "public static URI appendPathToSingleUri(URI uri, String relativeUri, String separator)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "The base Uri."
    - id: "relativeUri"
      type: "java.lang.String"
      description: "The relative URI."
    - id: "separator"
      type: "java.lang.String"
      description: "the separator to use."
    return:
      type: "java.net.URI"
      description: "The appended Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "a valid Uri cannot be constructed"
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  id: "appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri)"
  nameWithType: "PathUtility.appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri)"
  overload: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Appends a path to a list of URIs correctly using \"/\" as separator."
  syntax:
    content: "public static StorageUri appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri)"
    parameters:
    - id: "uriList"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "The base Uri."
    - id: "relativeOrAbsoluteUri"
      type: "java.lang.String"
      description: "The relative or absolute URI."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "The appended Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String,java.lang.String)"
  id: "appendPathToUri(com.microsoft.azure.storage.StorageUri,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri, String separator)"
  nameWithType: "PathUtility.appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri, String separator)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri, String separator)"
  overload: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Appends a path to a list of URIs correctly using \"/\" as separator."
  syntax:
    content: "public static StorageUri appendPathToUri(StorageUri uriList, String relativeOrAbsoluteUri, String separator)"
    parameters:
    - id: "uriList"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "The base Uri."
    - id: "relativeOrAbsoluteUri"
      type: "java.lang.String"
      description: "The relative or absolute URI."
    - id: "separator"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "The appended Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI(java.net.URI,boolean)"
  id: "getBlobNameFromURI(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getBlobNameFromURI(URI inURI, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getBlobNameFromURI(URI inURI, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI(URI inURI, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the blob name from the URI."
  syntax:
    content: "public static String getBlobNameFromURI(URI inURI, boolean usePathStyleUris)"
    parameters:
    - id: "inURI"
      type: "java.net.URI"
      description: "the resource address"
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "java.lang.String"
      description: "the blobs name"
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials(com.microsoft.azure.storage.StorageCredentials,java.lang.String)"
  id: "getCanonicalPathFromCredentials(com.microsoft.azure.storage.StorageCredentials,java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getCanonicalPathFromCredentials(StorageCredentials credentials, String absolutePath)"
  nameWithType: "PathUtility.getCanonicalPathFromCredentials(StorageCredentials credentials, String absolutePath)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials(StorageCredentials credentials, String absolutePath)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the canonical path for an object from the credentials."
  syntax:
    content: "public static String getCanonicalPathFromCredentials(StorageCredentials credentials, String absolutePath)"
    parameters:
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "the credentials to use."
    - id: "absolutePath"
      type: "java.lang.String"
      description: "the Absolute path of the object."
    return:
      type: "java.lang.String"
      description: "the canonical path for an object from the credentials"
- uid: "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri(java.net.URI,boolean)"
  id: "getContainerNameFromUri(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getContainerNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getContainerNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the container name from address from the URI."
  syntax:
    content: "public static String getContainerNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
    parameters:
    - id: "resourceAddress"
      type: "java.net.URI"
      description: "The container Uri."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "java.lang.String"
      description: "container name from address from the URI."
- uid: "com.microsoft.azure.storage.core.PathUtility.getContainerURI(com.microsoft.azure.storage.StorageUri,boolean)"
  id: "getContainerURI(com.microsoft.azure.storage.StorageUri,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getContainerURI(StorageUri blobAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getContainerURI(StorageUri blobAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getContainerURI(StorageUri blobAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getContainerURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the container URI from a blob address"
  syntax:
    content: "public static StorageUri getContainerURI(StorageUri blobAddress, boolean usePathStyleUris)"
    parameters:
    - id: "blobAddress"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the blob address"
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the container URI from a blob address"
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI(java.net.URI,boolean)"
  id: "getDirectoryNameFromURI(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getDirectoryNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getDirectoryNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the name of the lowest level directory from the given directory address."
  syntax:
    content: "public static String getDirectoryNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
    parameters:
    - id: "resourceAddress"
      type: "java.net.URI"
      description: "the directory URI"
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style URI"
    return:
      type: "java.lang.String"
      description: "directory name from address from the URI"
- uid: "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI(java.net.URI,boolean)"
  id: "getFileNameFromURI(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getFileNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getFileNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the file name from the URI."
  syntax:
    content: "public static String getFileNameFromURI(URI resourceAddress, boolean usePathStyleUris)"
    parameters:
    - id: "resourceAddress"
      type: "java.net.URI"
      description: "the file URI"
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style URI"
    return:
      type: "java.lang.String"
      description: "the file's name"
- uid: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(com.microsoft.azure.storage.StorageUri,boolean)"
  id: "getServiceClientBaseAddress(com.microsoft.azure.storage.StorageUri,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getServiceClientBaseAddress(StorageUri addressUri, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getServiceClientBaseAddress(StorageUri addressUri, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(StorageUri addressUri, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the service client address from a complete Uri."
  syntax:
    content: "public static StorageUri getServiceClientBaseAddress(StorageUri addressUri, boolean usePathStyleUris)"
    parameters:
    - id: "addressUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "Complete address of the resource."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the service client address from a complete Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(java.net.URI,boolean)"
  id: "getServiceClientBaseAddress(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getServiceClientBaseAddress(URI address, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getServiceClientBaseAddress(URI address, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress(URI address, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the service client address from a complete Uri."
  syntax:
    content: "public static String getServiceClientBaseAddress(URI address, boolean usePathStyleUris)"
    parameters:
    - id: "address"
      type: "java.net.URI"
      description: "Complete address of the resource."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "java.lang.String"
      description: "the service client address from a complete Uri."
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri(java.net.URI,boolean)"
  id: "getShareNameFromUri(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getShareNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getShareNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the share name from address from the URI."
  syntax:
    content: "public static String getShareNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
    parameters:
    - id: "resourceAddress"
      type: "java.net.URI"
      description: "The share Uri."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "java.lang.String"
      description: "share name from address from the URI."
- uid: "com.microsoft.azure.storage.core.PathUtility.getShareURI(com.microsoft.azure.storage.StorageUri,boolean)"
  id: "getShareURI(com.microsoft.azure.storage.StorageUri,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getShareURI(StorageUri fileAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getShareURI(StorageUri fileAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getShareURI(StorageUri fileAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getShareURI*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Gets the share URI from a file address"
  syntax:
    content: "public static StorageUri getShareURI(StorageUri fileAddress, boolean usePathStyleUris)"
    parameters:
    - id: "fileAddress"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the file address"
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the share URI from a file address"
  exceptions:
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri(java.net.URI,boolean)"
  id: "getTableNameFromUri(java.net.URI,boolean)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "getTableNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  nameWithType: "PathUtility.getTableNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
  overload: "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Get the table name from address from the URI."
  syntax:
    content: "public static String getTableNameFromUri(URI resourceAddress, boolean usePathStyleUris)"
    parameters:
    - id: "resourceAddress"
      type: "java.net.URI"
      description: "The table Uri."
    - id: "usePathStyleUris"
      type: "boolean"
      description: "a value indicating if the address is a path style uri."
    return:
      type: "java.lang.String"
      description: "table name from address from the URI."
- uid: "com.microsoft.azure.storage.core.PathUtility.parseQueryString(java.lang.String)"
  id: "parseQueryString(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "parseQueryString(String parseString)"
  nameWithType: "PathUtility.parseQueryString(String parseString)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.parseQueryString(String parseString)"
  overload: "com.microsoft.azure.storage.core.PathUtility.parseQueryString*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Parses a query string into a one to many hashmap."
  syntax:
    content: "public static HashMap<String,String[]> parseQueryString(String parseString)"
    parameters:
    - id: "parseString"
      type: "java.lang.String"
      description: "the string to parse"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String[]>"
      description: "a HashMap&lt;String, String[]&gt; of the key values."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment(java.net.URI)"
  id: "stripSingleURIQueryAndFragment(java.net.URI)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "stripSingleURIQueryAndFragment(URI inUri)"
  nameWithType: "PathUtility.stripSingleURIQueryAndFragment(URI inUri)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment(URI inUri)"
  overload: "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Strips the Query and Fragment from the uri."
  syntax:
    content: "public static URI stripSingleURIQueryAndFragment(URI inUri)"
    parameters:
    - id: "inUri"
      type: "java.net.URI"
      description: "the uri to alter"
    return:
      type: "java.net.URI"
      description: "the stripped uri."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment(com.microsoft.azure.storage.StorageUri)"
  id: "stripURIQueryAndFragment(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.core.PathUtility"
  langs:
  - "java"
  name: "stripURIQueryAndFragment(StorageUri inUri)"
  nameWithType: "PathUtility.stripURIQueryAndFragment(StorageUri inUri)"
  fullName: "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment(StorageUri inUri)"
  overload: "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Strips the Query and Fragment from the uri."
  syntax:
    content: "public static StorageUri stripURIQueryAndFragment(StorageUri inUri)"
    parameters:
    - id: "inUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the uri to alter"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the stripped uri."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
references:
- uid: "com.microsoft.azure.storage.core.PathUtility.PathUtility*"
  name: "PathUtility"
  nameWithType: "PathUtility.PathUtility"
  fullName: "com.microsoft.azure.storage.core.PathUtility.PathUtility"
  package: "com.microsoft.azure.storage.core"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "java.util.HashMap<java.lang.String,java.lang.String[]>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: "[]"
    fullName: "[]"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery*"
  name: "addToSingleUriQuery"
  nameWithType: "PathUtility.addToSingleUriQuery"
  fullName: "com.microsoft.azure.storage.core.PathUtility.addToSingleUriQuery"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.core.PathUtility.addToQuery*"
  name: "addToQuery"
  nameWithType: "PathUtility.addToQuery"
  fullName: "com.microsoft.azure.storage.core.PathUtility.addToQuery"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri*"
  name: "appendPathToUri"
  nameWithType: "PathUtility.appendPathToUri"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri*"
  name: "appendPathToSingleUri"
  nameWithType: "PathUtility.appendPathToSingleUri"
  fullName: "com.microsoft.azure.storage.core.PathUtility.appendPathToSingleUri"
  package: "com.microsoft.azure.storage.core"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI*"
  name: "getBlobNameFromURI"
  nameWithType: "PathUtility.getBlobNameFromURI"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getBlobNameFromURI"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials*"
  name: "getCanonicalPathFromCredentials"
  nameWithType: "PathUtility.getCanonicalPathFromCredentials"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getCanonicalPathFromCredentials"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri*"
  name: "getContainerNameFromUri"
  nameWithType: "PathUtility.getContainerNameFromUri"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getContainerNameFromUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI*"
  name: "getFileNameFromURI"
  nameWithType: "PathUtility.getFileNameFromURI"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getFileNameFromURI"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI*"
  name: "getDirectoryNameFromURI"
  nameWithType: "PathUtility.getDirectoryNameFromURI"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getDirectoryNameFromURI"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri*"
  name: "getShareNameFromUri"
  nameWithType: "PathUtility.getShareNameFromUri"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getShareNameFromUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri*"
  name: "getTableNameFromUri"
  nameWithType: "PathUtility.getTableNameFromUri"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getTableNameFromUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getContainerURI*"
  name: "getContainerURI"
  nameWithType: "PathUtility.getContainerURI"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getContainerURI"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getShareURI*"
  name: "getShareURI"
  nameWithType: "PathUtility.getShareURI"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getShareURI"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress*"
  name: "getServiceClientBaseAddress"
  nameWithType: "PathUtility.getServiceClientBaseAddress"
  fullName: "com.microsoft.azure.storage.core.PathUtility.getServiceClientBaseAddress"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.parseQueryString*"
  name: "parseQueryString"
  nameWithType: "PathUtility.parseQueryString"
  fullName: "com.microsoft.azure.storage.core.PathUtility.parseQueryString"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment*"
  name: "stripSingleURIQueryAndFragment"
  nameWithType: "PathUtility.stripSingleURIQueryAndFragment"
  fullName: "com.microsoft.azure.storage.core.PathUtility.stripSingleURIQueryAndFragment"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment*"
  name: "stripURIQueryAndFragment"
  nameWithType: "PathUtility.stripURIQueryAndFragment"
  fullName: "com.microsoft.azure.storage.core.PathUtility.stripURIQueryAndFragment"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.String[]"
  name: "String,String[]"
  nameWithType: "String,String[]"
  fullName: "java.lang.String,java.lang.String[]"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
