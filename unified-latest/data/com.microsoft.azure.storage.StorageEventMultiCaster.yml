### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster"
  id: "StorageEventMultiCaster"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.StorageEventMultiCaster.StorageEventMultiCaster()"
  - "com.microsoft.azure.storage.StorageEventMultiCaster.addListener(EVENT_LISTENER_TYPE)"
  - "com.microsoft.azure.storage.StorageEventMultiCaster.fireEvent(EVENT_TYPE)"
  - "com.microsoft.azure.storage.StorageEventMultiCaster.hasListeners()"
  - "com.microsoft.azure.storage.StorageEventMultiCaster.removeListener(EVENT_LISTENER_TYPE)"
  langs:
  - "java"
  name: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents a generic event multi-caster that allows event listeners to be dynamically added and removed."
  syntax:
    content: "public final class StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>"
    typeParameters:
    - id: "EVENT_TYPE"
    - id: "EVENT_LISTENER_TYPE"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.StorageEventMultiCaster()"
  id: "StorageEventMultiCaster()"
  parent: "com.microsoft.azure.storage.StorageEventMultiCaster"
  langs:
  - "java"
  name: "StorageEventMultiCaster()"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.StorageEventMultiCaster()"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.StorageEventMultiCaster()"
  overload: "com.microsoft.azure.storage.StorageEventMultiCaster.StorageEventMultiCaster*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  syntax:
    content: "public StorageEventMultiCaster()"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.addListener(EVENT_LISTENER_TYPE)"
  id: "addListener(EVENT_LISTENER_TYPE)"
  parent: "com.microsoft.azure.storage.StorageEventMultiCaster"
  langs:
  - "java"
  name: "addListener(EVENT_LISTENER_TYPE listener)"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.addListener(EVENT_LISTENER_TYPE listener)"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.addListener(EVENT_LISTENER_TYPE listener)"
  overload: "com.microsoft.azure.storage.StorageEventMultiCaster.addListener*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Adds a listener to the event chain."
  syntax:
    content: "public void addListener(EVENT_LISTENER_TYPE listener)"
    parameters:
    - id: "listener"
      type: "EVENT_LISTENER_TYPE"
      description: "An <code>EventListenerType</code> object that represents the listener to add."
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.fireEvent(EVENT_TYPE)"
  id: "fireEvent(EVENT_TYPE)"
  parent: "com.microsoft.azure.storage.StorageEventMultiCaster"
  langs:
  - "java"
  name: "fireEvent(EVENT_TYPE event)"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.fireEvent(EVENT_TYPE event)"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.fireEvent(EVENT_TYPE event)"
  overload: "com.microsoft.azure.storage.StorageEventMultiCaster.fireEvent*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Fires the event to all subscribed event listeners."
  syntax:
    content: "public void fireEvent(EVENT_TYPE event)"
    parameters:
    - id: "event"
      type: "EVENT_TYPE"
      description: "An <code>EVENTTYPE</code>object that represents the event being multi-casted."
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.hasListeners()"
  id: "hasListeners()"
  parent: "com.microsoft.azure.storage.StorageEventMultiCaster"
  langs:
  - "java"
  name: "hasListeners()"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.hasListeners()"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.hasListeners()"
  overload: "com.microsoft.azure.storage.StorageEventMultiCaster.hasListeners*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a value that indicates whether any event listeners are registered for events."
  syntax:
    content: "public boolean hasListeners()"
    return:
      type: "boolean"
      description: "<code>true</code> if any event listeners are registered; otherwise, <code>false</code>."
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.removeListener(EVENT_LISTENER_TYPE)"
  id: "removeListener(EVENT_LISTENER_TYPE)"
  parent: "com.microsoft.azure.storage.StorageEventMultiCaster"
  langs:
  - "java"
  name: "removeListener(EVENT_LISTENER_TYPE listener)"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.removeListener(EVENT_LISTENER_TYPE listener)"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.removeListener(EVENT_LISTENER_TYPE listener)"
  overload: "com.microsoft.azure.storage.StorageEventMultiCaster.removeListener*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Removes an event listener from the event chain."
  syntax:
    content: "public void removeListener(EVENT_LISTENER_TYPE listener)"
    parameters:
    - id: "listener"
      type: "EVENT_LISTENER_TYPE"
      description: "An <code>EventListenerType</code> object that represents the listener to remove."
references:
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.StorageEventMultiCaster*"
  name: "StorageEventMultiCaster"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.StorageEventMultiCaster"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.StorageEventMultiCaster"
  package: "com.microsoft.azure.storage"
- uid: "EVENT_LISTENER_TYPE"
  spec.java:
  - uid: "EVENT_LISTENER_TYPE"
    name: "EVENT_LISTENER_TYPE"
    fullName: "EVENT_LISTENER_TYPE"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.addListener*"
  name: "addListener"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.addListener"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.addListener"
  package: "com.microsoft.azure.storage"
- uid: "EVENT_TYPE"
  spec.java:
  - uid: "EVENT_TYPE"
    name: "EVENT_TYPE"
    fullName: "EVENT_TYPE"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.fireEvent*"
  name: "fireEvent"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.fireEvent"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.fireEvent"
  package: "com.microsoft.azure.storage"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.hasListeners*"
  name: "hasListeners"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.hasListeners"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.hasListeners"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageEventMultiCaster.removeListener*"
  name: "removeListener"
  nameWithType: "StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.removeListener"
  fullName: "com.microsoft.azure.storage.StorageEventMultiCaster<EVENT_TYPE,EVENT_LISTENER_TYPE>.removeListener"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
