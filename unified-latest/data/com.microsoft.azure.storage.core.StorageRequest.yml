### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.core.StorageRequest"
  id: "StorageRequest"
  parent: "com.microsoft.azure.storage.core"
  children:
  - "com.microsoft.azure.storage.core.StorageRequest.StorageRequest()"
  - "com.microsoft.azure.storage.core.StorageRequest.StorageRequest(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.core.StorageRequest.applyLocationModeToRequest()"
  - "com.microsoft.azure.storage.core.StorageRequest.buildRequest(C,P,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.getArePropertiesPopulated()"
  - "com.microsoft.azure.storage.core.StorageRequest.getConnection()"
  - "com.microsoft.azure.storage.core.StorageRequest.getContentMD5()"
  - "com.microsoft.azure.storage.core.StorageRequest.getCurrentDescriptor()"
  - "com.microsoft.azure.storage.core.StorageRequest.getCurrentLocation()"
  - "com.microsoft.azure.storage.core.StorageRequest.getCurrentRequestByteCount()"
  - "com.microsoft.azure.storage.core.StorageRequest.getETagLockCondition()"
  - "com.microsoft.azure.storage.core.StorageRequest.getException()"
  - "com.microsoft.azure.storage.core.StorageRequest.getLength()"
  - "com.microsoft.azure.storage.core.StorageRequest.getLocationMode()"
  - "com.microsoft.azure.storage.core.StorageRequest.getLockedETag()"
  - "com.microsoft.azure.storage.core.StorageRequest.getOffset()"
  - "com.microsoft.azure.storage.core.StorageRequest.getRequestLocationMode()"
  - "com.microsoft.azure.storage.core.StorageRequest.getRequestOptions()"
  - "com.microsoft.azure.storage.core.StorageRequest.getResult()"
  - "com.microsoft.azure.storage.core.StorageRequest.getSendStream()"
  - "com.microsoft.azure.storage.core.StorageRequest.getStorageUri()"
  - "com.microsoft.azure.storage.core.StorageRequest.initialize(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.initializeLocation()"
  - "com.microsoft.azure.storage.core.StorageRequest.isNonExceptionedRetryableFailure()"
  - "com.microsoft.azure.storage.core.StorageRequest.isSent()"
  - "com.microsoft.azure.storage.core.StorageRequest.materializeException(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.parseErrorDetails()"
  - "com.microsoft.azure.storage.core.StorageRequest.postProcessResponse(java.net.HttpURLConnection,P,C,com.microsoft.azure.storage.OperationContext,R)"
  - "com.microsoft.azure.storage.core.StorageRequest.preProcessResponse(P,C,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.recoveryAction(com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.setArePropertiesPopulated(boolean)"
  - "com.microsoft.azure.storage.core.StorageRequest.setConnection(java.net.HttpURLConnection)"
  - "com.microsoft.azure.storage.core.StorageRequest.setContentMD5(java.lang.String)"
  - "com.microsoft.azure.storage.core.StorageRequest.setCurrentDescriptor(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  - "com.microsoft.azure.storage.core.StorageRequest.setCurrentLocation(com.microsoft.azure.storage.StorageLocation)"
  - "com.microsoft.azure.storage.core.StorageRequest.setCurrentRequestByteCount(long)"
  - "com.microsoft.azure.storage.core.StorageRequest.setETagLockCondition(com.microsoft.azure.storage.AccessCondition)"
  - "com.microsoft.azure.storage.core.StorageRequest.setException(com.microsoft.azure.storage.StorageException)"
  - "com.microsoft.azure.storage.core.StorageRequest.setHeaders(java.net.HttpURLConnection,P,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.setIsSent(boolean)"
  - "com.microsoft.azure.storage.core.StorageRequest.setLength(java.lang.Long)"
  - "com.microsoft.azure.storage.core.StorageRequest.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  - "com.microsoft.azure.storage.core.StorageRequest.setLockedETag(java.lang.String)"
  - "com.microsoft.azure.storage.core.StorageRequest.setNonExceptionedRetryableFailure(boolean)"
  - "com.microsoft.azure.storage.core.StorageRequest.setOffset(java.lang.Long)"
  - "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode()"
  - "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode(com.microsoft.azure.storage.core.RequestLocationMode)"
  - "com.microsoft.azure.storage.core.StorageRequest.setRequestOptions(com.microsoft.azure.storage.RequestOptions)"
  - "com.microsoft.azure.storage.core.StorageRequest.setResult(com.microsoft.azure.storage.RequestResult)"
  - "com.microsoft.azure.storage.core.StorageRequest.setSendStream(java.io.InputStream)"
  - "com.microsoft.azure.storage.core.StorageRequest.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.core.StorageRequest.signBlobQueueAndFileRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.signRequest(java.net.HttpURLConnection,C,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.signTableRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.core.StorageRequest.validateLocation()"
  - "com.microsoft.azure.storage.core.StorageRequest.validateStreamWrite(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  langs:
  - "java"
  name: "StorageRequest<C,P,R>"
  nameWithType: "StorageRequest<C,P,R>"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>"
  type: "Class"
  package: "com.microsoft.azure.storage.core"
  summary: "RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation."
  syntax:
    content: "public abstract class StorageRequest<C,P,R>"
    typeParameters:
    - id: "C"
    - id: "P"
    - id: "R"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.core.StorageRequest.StorageRequest()"
  id: "StorageRequest()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "StorageRequest()"
  nameWithType: "StorageRequest<C,P,R>.StorageRequest()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.StorageRequest()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.StorageRequest*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Default Ctor."
  syntax:
    content: "protected StorageRequest()"
- uid: "com.microsoft.azure.storage.core.StorageRequest.StorageRequest(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.StorageUri)"
  id: "StorageRequest(com.microsoft.azure.storage.RequestOptions,com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "StorageRequest(RequestOptions options, StorageUri storageUri)"
  nameWithType: "StorageRequest<C,P,R>.StorageRequest(RequestOptions options, StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.StorageRequest(RequestOptions options, StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.StorageRequest*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.core"
  summary: "Initializes a new instance of the StorageRequest class."
  syntax:
    content: "public StorageRequest(RequestOptions options, StorageUri storageUri)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "the RequestOptions to use"
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.core.StorageRequest.applyLocationModeToRequest()"
  id: "applyLocationModeToRequest()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "applyLocationModeToRequest()"
  nameWithType: "StorageRequest<C,P,R>.applyLocationModeToRequest()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.applyLocationModeToRequest()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.applyLocationModeToRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void applyLocationModeToRequest()"
- uid: "com.microsoft.azure.storage.core.StorageRequest.buildRequest(C,P,com.microsoft.azure.storage.OperationContext)"
  id: "buildRequest(C,P,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "buildRequest(C client, P parentObject, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.buildRequest(C client, P parentObject, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.buildRequest(C client, P parentObject, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.buildRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Function to construct the request."
  syntax:
    content: "public abstract HttpURLConnection buildRequest(C client, P parentObject, OperationContext context)"
    parameters:
    - id: "client"
      type: "C"
    - id: "parentObject"
      type: "P"
      description: "Parent object, i.e. CloudBlobContainer for downloadAttributes etc."
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.net.HttpURLConnection"
      description: "a HttpURLConnection configured for the operation."
  exceptions:
  - type: "java.lang.Exception"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getArePropertiesPopulated()"
  id: "getArePropertiesPopulated()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getArePropertiesPopulated()"
  nameWithType: "StorageRequest<C,P,R>.getArePropertiesPopulated()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getArePropertiesPopulated()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getArePropertiesPopulated*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public boolean getArePropertiesPopulated()"
    return:
      type: "boolean"
      description: "the arePropertiesPopulated value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getConnection()"
  id: "getConnection()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getConnection()"
  nameWithType: "StorageRequest<C,P,R>.getConnection()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getConnection()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getConnection*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final HttpURLConnection getConnection()"
    return:
      type: "java.net.HttpURLConnection"
      description: "the URL connection"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getContentMD5()"
  id: "getContentMD5()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getContentMD5()"
  nameWithType: "StorageRequest<C,P,R>.getContentMD5()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getContentMD5()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getContentMD5*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final String getContentMD5()"
    return:
      type: "java.lang.String"
      description: "the ContentMD5"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentDescriptor()"
  id: "getCurrentDescriptor()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getCurrentDescriptor()"
  nameWithType: "StorageRequest<C,P,R>.getCurrentDescriptor()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentDescriptor()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getCurrentDescriptor*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected StreamMd5AndLength getCurrentDescriptor()"
    return:
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "the current descriptor which contains the stream length and MD5 hash."
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentLocation()"
  id: "getCurrentLocation()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getCurrentLocation()"
  nameWithType: "StorageRequest<C,P,R>.getCurrentLocation()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentLocation()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getCurrentLocation*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public StorageLocation getCurrentLocation()"
    return:
      type: "com.microsoft.azure.storage.StorageLocation"
      description: "the current location to which the request will be sent."
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentRequestByteCount()"
  id: "getCurrentRequestByteCount()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getCurrentRequestByteCount()"
  nameWithType: "StorageRequest<C,P,R>.getCurrentRequestByteCount()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentRequestByteCount()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getCurrentRequestByteCount*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public long getCurrentRequestByteCount()"
    return:
      type: "long"
      description: "the currentRequestByteCount"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getETagLockCondition()"
  id: "getETagLockCondition()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getETagLockCondition()"
  nameWithType: "StorageRequest<C,P,R>.getETagLockCondition()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getETagLockCondition()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getETagLockCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public AccessCondition getETagLockCondition()"
    return:
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "the locked ETag condition"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getException()"
  id: "getException()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getException()"
  nameWithType: "StorageRequest<C,P,R>.getException()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getException()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getException*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final StorageException getException()"
    return:
      type: "com.microsoft.azure.storage.StorageException"
      description: "the exception"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLength()"
  id: "getLength()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getLength()"
  nameWithType: "StorageRequest<C,P,R>.getLength()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLength()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getLength*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public Long getLength()"
    return:
      type: "java.lang.Long"
      description: "the length, in bytes, of the stream"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLocationMode()"
  id: "getLocationMode()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getLocationMode()"
  nameWithType: "StorageRequest<C,P,R>.getLocationMode()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLocationMode()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public LocationMode getLocationMode()"
    return:
      type: "com.microsoft.azure.storage.LocationMode"
      description: "the location mode used to decide which location the request should be sent to."
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLockedETag()"
  id: "getLockedETag()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getLockedETag()"
  nameWithType: "StorageRequest<C,P,R>.getLockedETag()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLockedETag()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getLockedETag*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final String getLockedETag()"
    return:
      type: "java.lang.String"
      description: "the locked ETag"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getOffset()"
  id: "getOffset()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getOffset()"
  nameWithType: "StorageRequest<C,P,R>.getOffset()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getOffset()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public Long getOffset()"
    return:
      type: "java.lang.Long"
      description: "the offset to start reading from"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getRequestLocationMode()"
  id: "getRequestLocationMode()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getRequestLocationMode()"
  nameWithType: "StorageRequest<C,P,R>.getRequestLocationMode()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getRequestLocationMode()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getRequestLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public RequestLocationMode getRequestLocationMode()"
    return:
      type: "com.microsoft.azure.storage.core.RequestLocationMode"
      description: "the location mode used to decide which location the request should be sent to."
- uid: "com.microsoft.azure.storage.core.StorageRequest.getRequestOptions()"
  id: "getRequestOptions()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getRequestOptions()"
  nameWithType: "StorageRequest<C,P,R>.getRequestOptions()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getRequestOptions()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getRequestOptions*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final RequestOptions getRequestOptions()"
    return:
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "the requestOptions"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getResult()"
  id: "getResult()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getResult()"
  nameWithType: "StorageRequest<C,P,R>.getResult()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getResult()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getResult*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final RequestResult getResult()"
    return:
      type: "com.microsoft.azure.storage.RequestResult"
      description: "the result"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getSendStream()"
  id: "getSendStream()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getSendStream()"
  nameWithType: "StorageRequest<C,P,R>.getSendStream()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getSendStream()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getSendStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final InputStream getSendStream()"
    return:
      type: "java.io.InputStream"
      description: "the stream to send to server"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "StorageRequest<C,P,R>.getStorageUri()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getStorageUri()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the URI to which the request will be sent."
- uid: "com.microsoft.azure.storage.core.StorageRequest.initialize(com.microsoft.azure.storage.OperationContext)"
  id: "initialize(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "initialize(OperationContext opContext)"
  nameWithType: "StorageRequest<C,P,R>.initialize(OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.initialize(OperationContext opContext)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.initialize*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Resets the operation status flags between operations."
  syntax:
    content: "protected final void initialize(OperationContext opContext)"
    parameters:
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.core.StorageRequest.initializeLocation()"
  id: "initializeLocation()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "initializeLocation()"
  nameWithType: "StorageRequest<C,P,R>.initializeLocation()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.initializeLocation()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.initializeLocation*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void initializeLocation()"
- uid: "com.microsoft.azure.storage.core.StorageRequest.isNonExceptionedRetryableFailure()"
  id: "isNonExceptionedRetryableFailure()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "isNonExceptionedRetryableFailure()"
  nameWithType: "StorageRequest<C,P,R>.isNonExceptionedRetryableFailure()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.isNonExceptionedRetryableFailure()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.isNonExceptionedRetryableFailure*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final boolean isNonExceptionedRetryableFailure()"
    return:
      type: "boolean"
      description: "the nonExceptionedRetryableFailure"
- uid: "com.microsoft.azure.storage.core.StorageRequest.isSent()"
  id: "isSent()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "isSent()"
  nameWithType: "StorageRequest<C,P,R>.isSent()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.isSent()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.isSent*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected boolean isSent()"
    return:
      type: "boolean"
      description: "the isSent value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.materializeException(com.microsoft.azure.storage.OperationContext)"
  id: "materializeException(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "materializeException(OperationContext opContext)"
  nameWithType: "StorageRequest<C,P,R>.materializeException(OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.materializeException(OperationContext opContext)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.materializeException*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns either the held exception from the operation if it is set, otherwise the translated exception."
  syntax:
    content: "protected final StorageException materializeException(OperationContext opContext)"
    parameters:
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "an object used to track the execution of the operation"
    return:
      type: "com.microsoft.azure.storage.StorageException"
      description: "the exception to throw."
- uid: "com.microsoft.azure.storage.core.StorageRequest.parseErrorDetails()"
  id: "parseErrorDetails()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "parseErrorDetails()"
  nameWithType: "StorageRequest<C,P,R>.parseErrorDetails()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.parseErrorDetails()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.parseErrorDetails*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Returns extended error information for this request."
  syntax:
    content: "public StorageExtendedErrorInformation parseErrorDetails()"
    return:
      type: "com.microsoft.azure.storage.StorageExtendedErrorInformation"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageExtendedErrorInformation\" data-throw-if-not-resolved=\"false\">StorageExtendedErrorInformation</xref> object that represents the error details for the specified\n         request."
- uid: "com.microsoft.azure.storage.core.StorageRequest.postProcessResponse(java.net.HttpURLConnection,P,C,com.microsoft.azure.storage.OperationContext,R)"
  id: "postProcessResponse(java.net.HttpURLConnection,P,C,com.microsoft.azure.storage.OperationContext,R)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "postProcessResponse(HttpURLConnection connection, P parentObject, C client, OperationContext context, R storageObject)"
  nameWithType: "StorageRequest<C,P,R>.postProcessResponse(HttpURLConnection connection, P parentObject, C client, OperationContext context, R storageObject)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.postProcessResponse(HttpURLConnection connection, P parentObject, C client, OperationContext context, R storageObject)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.postProcessResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Post-Stream Retrieval function."
  syntax:
    content: "public R postProcessResponse(HttpURLConnection connection, P parentObject, C client, OperationContext context, R storageObject)"
    parameters:
    - id: "connection"
      type: "java.net.HttpURLConnection"
      description: "HttpURLConnection configured for the operation."
    - id: "parentObject"
      type: "P"
    - id: "client"
      type: "C"
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
    - id: "storageObject"
      type: "R"
      description: "An object of the expected result's type."
    return:
      type: "R"
      description: "the expected result of the operation."
  exceptions:
  - type: "java.lang.Exception"
- uid: "com.microsoft.azure.storage.core.StorageRequest.preProcessResponse(P,C,com.microsoft.azure.storage.OperationContext)"
  id: "preProcessResponse(P,C,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "preProcessResponse(P parentObject, C client, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.preProcessResponse(P parentObject, C client, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.preProcessResponse(P parentObject, C client, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.preProcessResponse*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Pre-Stream Retrieval function."
  syntax:
    content: "public abstract R preProcessResponse(P parentObject, C client, OperationContext context)"
    parameters:
    - id: "parentObject"
      type: "P"
      description: "Parent object, i.e. CloudBlobContainer for downloadAttributes etc."
    - id: "client"
      type: "C"
      description: "The service client."
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "R"
      description: "an Object of the expected result's type."
  exceptions:
  - type: "java.lang.Exception"
- uid: "com.microsoft.azure.storage.core.StorageRequest.recoveryAction(com.microsoft.azure.storage.OperationContext)"
  id: "recoveryAction(com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "recoveryAction(OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.recoveryAction(OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.recoveryAction(OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.recoveryAction*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Recovery action for retries."
  syntax:
    content: "public void recoveryAction(OperationContext context)"
    parameters:
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setArePropertiesPopulated(boolean)"
  id: "setArePropertiesPopulated(boolean)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setArePropertiesPopulated(boolean arePropertiesPopulated)"
  nameWithType: "StorageRequest<C,P,R>.setArePropertiesPopulated(boolean arePropertiesPopulated)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setArePropertiesPopulated(boolean arePropertiesPopulated)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setArePropertiesPopulated*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setArePropertiesPopulated(boolean arePropertiesPopulated)"
    parameters:
    - id: "arePropertiesPopulated"
      type: "boolean"
      description: "the arePropertiesPopulated value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setConnection(java.net.HttpURLConnection)"
  id: "setConnection(java.net.HttpURLConnection)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setConnection(HttpURLConnection connection)"
  nameWithType: "StorageRequest<C,P,R>.setConnection(HttpURLConnection connection)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setConnection(HttpURLConnection connection)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setConnection*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final void setConnection(HttpURLConnection connection)"
    parameters:
    - id: "connection"
      type: "java.net.HttpURLConnection"
      description: "the connection to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setContentMD5(java.lang.String)"
  id: "setContentMD5(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setContentMD5(String contentMD5)"
  nameWithType: "StorageRequest<C,P,R>.setContentMD5(String contentMD5)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setContentMD5(String contentMD5)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setContentMD5*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setContentMD5(String contentMD5)"
    parameters:
    - id: "contentMD5"
      type: "java.lang.String"
      description: "the contentMD5"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentDescriptor(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  id: "setCurrentDescriptor(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setCurrentDescriptor(StreamMd5AndLength currentDescriptor)"
  nameWithType: "StorageRequest<C,P,R>.setCurrentDescriptor(StreamMd5AndLength currentDescriptor)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentDescriptor(StreamMd5AndLength currentDescriptor)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setCurrentDescriptor*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected void setCurrentDescriptor(StreamMd5AndLength currentDescriptor)"
    parameters:
    - id: "currentDescriptor"
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
      description: "the descriptor value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentLocation(com.microsoft.azure.storage.StorageLocation)"
  id: "setCurrentLocation(com.microsoft.azure.storage.StorageLocation)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setCurrentLocation(StorageLocation currentLocation)"
  nameWithType: "StorageRequest<C,P,R>.setCurrentLocation(StorageLocation currentLocation)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentLocation(StorageLocation currentLocation)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setCurrentLocation*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setCurrentLocation(StorageLocation currentLocation)"
    parameters:
    - id: "currentLocation"
      type: "com.microsoft.azure.storage.StorageLocation"
      description: "the currentLocation value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentRequestByteCount(long)"
  id: "setCurrentRequestByteCount(long)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setCurrentRequestByteCount(long currentRequestByteCount)"
  nameWithType: "StorageRequest<C,P,R>.setCurrentRequestByteCount(long currentRequestByteCount)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentRequestByteCount(long currentRequestByteCount)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setCurrentRequestByteCount*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setCurrentRequestByteCount(long currentRequestByteCount)"
    parameters:
    - id: "currentRequestByteCount"
      type: "long"
      description: "the currentRequestByteCount to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setETagLockCondition(com.microsoft.azure.storage.AccessCondition)"
  id: "setETagLockCondition(com.microsoft.azure.storage.AccessCondition)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setETagLockCondition(AccessCondition etagLockCondition)"
  nameWithType: "StorageRequest<C,P,R>.setETagLockCondition(AccessCondition etagLockCondition)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setETagLockCondition(AccessCondition etagLockCondition)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setETagLockCondition*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setETagLockCondition(AccessCondition etagLockCondition)"
    parameters:
    - id: "etagLockCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "the locked ETag condition"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setException(com.microsoft.azure.storage.StorageException)"
  id: "setException(com.microsoft.azure.storage.StorageException)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setException(StorageException exceptionReference)"
  nameWithType: "StorageRequest<C,P,R>.setException(StorageException exceptionReference)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setException(StorageException exceptionReference)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setException*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected final void setException(StorageException exceptionReference)"
    parameters:
    - id: "exceptionReference"
      type: "com.microsoft.azure.storage.StorageException"
      description: "the exception to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setHeaders(java.net.HttpURLConnection,P,com.microsoft.azure.storage.OperationContext)"
  id: "setHeaders(java.net.HttpURLConnection,P,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setHeaders(HttpURLConnection connection, P parentObject, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.setHeaders(HttpURLConnection connection, P parentObject, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setHeaders(HttpURLConnection connection, P parentObject, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setHeaders*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Function to set custom headers."
  syntax:
    content: "public void setHeaders(HttpURLConnection connection, P parentObject, OperationContext context)"
    parameters:
    - id: "connection"
      type: "java.net.HttpURLConnection"
      description: "HttpURLConnection configured for the operation."
    - id: "parentObject"
      type: "P"
      description: "Parent object, i.e. CloudBlobContainer for downloadAttributes etc."
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
- uid: "com.microsoft.azure.storage.core.StorageRequest.setIsSent(boolean)"
  id: "setIsSent(boolean)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setIsSent(boolean isSent)"
  nameWithType: "StorageRequest<C,P,R>.setIsSent(boolean isSent)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setIsSent(boolean isSent)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setIsSent*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected void setIsSent(boolean isSent)"
    parameters:
    - id: "isSent"
      type: "boolean"
      description: "the isSent value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLength(java.lang.Long)"
  id: "setLength(java.lang.Long)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setLength(Long length)"
  nameWithType: "StorageRequest<C,P,R>.setLength(Long length)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLength(Long length)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setLength*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setLength(Long length)"
    parameters:
    - id: "length"
      type: "java.lang.Long"
      description: "the length, in bytes, of the stream"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLocationMode(com.microsoft.azure.storage.LocationMode)"
  id: "setLocationMode(com.microsoft.azure.storage.LocationMode)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setLocationMode(LocationMode locationMode)"
  nameWithType: "StorageRequest<C,P,R>.setLocationMode(LocationMode locationMode)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLocationMode(LocationMode locationMode)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setLocationMode(LocationMode locationMode)"
    parameters:
    - id: "locationMode"
      type: "com.microsoft.azure.storage.LocationMode"
      description: "the locationMode value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLockedETag(java.lang.String)"
  id: "setLockedETag(java.lang.String)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setLockedETag(String lockedETag)"
  nameWithType: "StorageRequest<C,P,R>.setLockedETag(String lockedETag)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLockedETag(String lockedETag)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setLockedETag*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setLockedETag(String lockedETag)"
    parameters:
    - id: "lockedETag"
      type: "java.lang.String"
      description: "the locked ETag"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setNonExceptionedRetryableFailure(boolean)"
  id: "setNonExceptionedRetryableFailure(boolean)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setNonExceptionedRetryableFailure(boolean nonExceptionedRetryableFailure)"
  nameWithType: "StorageRequest<C,P,R>.setNonExceptionedRetryableFailure(boolean nonExceptionedRetryableFailure)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setNonExceptionedRetryableFailure(boolean nonExceptionedRetryableFailure)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setNonExceptionedRetryableFailure*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final void setNonExceptionedRetryableFailure(boolean nonExceptionedRetryableFailure)"
    parameters:
    - id: "nonExceptionedRetryableFailure"
      type: "boolean"
      description: "the nonExceptionedRetryableFailure to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setOffset(java.lang.Long)"
  id: "setOffset(java.lang.Long)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setOffset(Long offset)"
  nameWithType: "StorageRequest<C,P,R>.setOffset(Long offset)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setOffset(Long offset)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setOffset*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setOffset(Long offset)"
    parameters:
    - id: "offset"
      type: "java.lang.Long"
      description: "the stream offset to start copying from"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode()"
  id: "setRequestLocationMode()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setRequestLocationMode()"
  nameWithType: "StorageRequest<C,P,R>.setRequestLocationMode()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setRequestLocationMode()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Function to apply the location mode to the request."
  syntax:
    content: "public void setRequestLocationMode()"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode(com.microsoft.azure.storage.core.RequestLocationMode)"
  id: "setRequestLocationMode(com.microsoft.azure.storage.core.RequestLocationMode)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setRequestLocationMode(RequestLocationMode requestLocationMode)"
  nameWithType: "StorageRequest<C,P,R>.setRequestLocationMode(RequestLocationMode requestLocationMode)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setRequestLocationMode(RequestLocationMode requestLocationMode)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setRequestLocationMode(RequestLocationMode requestLocationMode)"
    parameters:
    - id: "requestLocationMode"
      type: "com.microsoft.azure.storage.core.RequestLocationMode"
      description: "the requestLocationMode value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setRequestOptions(com.microsoft.azure.storage.RequestOptions)"
  id: "setRequestOptions(com.microsoft.azure.storage.RequestOptions)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setRequestOptions(RequestOptions requestOptions)"
  nameWithType: "StorageRequest<C,P,R>.setRequestOptions(RequestOptions requestOptions)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setRequestOptions(RequestOptions requestOptions)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setRequestOptions*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "protected final void setRequestOptions(RequestOptions requestOptions)"
    parameters:
    - id: "requestOptions"
      type: "com.microsoft.azure.storage.RequestOptions"
      description: "the requestOptions to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setResult(com.microsoft.azure.storage.RequestResult)"
  id: "setResult(com.microsoft.azure.storage.RequestResult)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setResult(RequestResult result)"
  nameWithType: "StorageRequest<C,P,R>.setResult(RequestResult result)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setResult(RequestResult result)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setResult*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public final void setResult(RequestResult result)"
    parameters:
    - id: "result"
      type: "com.microsoft.azure.storage.RequestResult"
      description: "the result to set"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setSendStream(java.io.InputStream)"
  id: "setSendStream(java.io.InputStream)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setSendStream(InputStream sendStream)"
  nameWithType: "StorageRequest<C,P,R>.setSendStream(InputStream sendStream)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setSendStream(InputStream sendStream)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setSendStream*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setSendStream(InputStream sendStream)"
    parameters:
    - id: "sendStream"
      type: "java.io.InputStream"
      description: "the stream to send to the server"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setStorageUri(com.microsoft.azure.storage.StorageUri)"
  id: "setStorageUri(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "setStorageUri(StorageUri storageUri)"
  nameWithType: "StorageRequest<C,P,R>.setStorageUri(StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setStorageUri(StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.setStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void setStorageUri(StorageUri storageUri)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "the storageUri value"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signBlobQueueAndFileRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  id: "signBlobQueueAndFileRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "signBlobQueueAndFileRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.signBlobQueueAndFileRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signBlobQueueAndFileRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.signBlobQueueAndFileRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public static final String signBlobQueueAndFileRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
    - id: "client"
      type: "com.microsoft.azure.storage.ServiceClient"
    - id: "contentLength"
      type: "long"
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "java.security.InvalidKeyException"
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signRequest(java.net.HttpURLConnection,C,com.microsoft.azure.storage.OperationContext)"
  id: "signRequest(java.net.HttpURLConnection,C,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "signRequest(HttpURLConnection connection, C client, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.signRequest(HttpURLConnection connection, C client, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signRequest(HttpURLConnection connection, C client, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.signRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Function to Sign headers."
  syntax:
    content: "public abstract void signRequest(HttpURLConnection connection, C client, OperationContext context)"
    parameters:
    - id: "connection"
      type: "java.net.HttpURLConnection"
      description: "HttpURLConnection configured for the operation."
    - id: "client"
      type: "C"
      description: "The service client."
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "java.lang.Exception"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signTableRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  id: "signTableRequest(java.net.HttpURLConnection,com.microsoft.azure.storage.ServiceClient,long,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "signTableRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  nameWithType: "StorageRequest<C,P,R>.signTableRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signTableRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.signTableRequest*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public static final void signTableRequest(HttpURLConnection request, ServiceClient client, long contentLength, OperationContext context)"
    parameters:
    - id: "request"
      type: "java.net.HttpURLConnection"
    - id: "client"
      type: "com.microsoft.azure.storage.ServiceClient"
    - id: "contentLength"
      type: "long"
    - id: "context"
      type: "com.microsoft.azure.storage.OperationContext"
  exceptions:
  - type: "java.security.InvalidKeyException"
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.core.StorageRequest.validateLocation()"
  id: "validateLocation()"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "validateLocation()"
  nameWithType: "StorageRequest<C,P,R>.validateLocation()"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.validateLocation()"
  overload: "com.microsoft.azure.storage.core.StorageRequest.validateLocation*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  syntax:
    content: "public void validateLocation()"
- uid: "com.microsoft.azure.storage.core.StorageRequest.validateStreamWrite(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  id: "validateStreamWrite(com.microsoft.azure.storage.core.StreamMd5AndLength)"
  parent: "com.microsoft.azure.storage.core.StorageRequest"
  langs:
  - "java"
  name: "validateStreamWrite(StreamMd5AndLength descriptor)"
  nameWithType: "StorageRequest<C,P,R>.validateStreamWrite(StreamMd5AndLength descriptor)"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.validateStreamWrite(StreamMd5AndLength descriptor)"
  overload: "com.microsoft.azure.storage.core.StorageRequest.validateStreamWrite*"
  type: "Method"
  package: "com.microsoft.azure.storage.core"
  summary: "Validate the written stream length when length is provided."
  syntax:
    content: "public void validateStreamWrite(StreamMd5AndLength descriptor)"
    parameters:
    - id: "descriptor"
      type: "com.microsoft.azure.storage.core.StreamMd5AndLength"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
references:
- uid: "com.microsoft.azure.storage.core.StorageRequest.StorageRequest*"
  name: "StorageRequest"
  nameWithType: "StorageRequest<C,P,R>.StorageRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.StorageRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.microsoft.azure.storage.RequestOptions"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getException*"
  name: "getException"
  nameWithType: "StorageRequest<C,P,R>.getException"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getException"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getRequestOptions*"
  name: "getRequestOptions"
  nameWithType: "StorageRequest<C,P,R>.getRequestOptions"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getRequestOptions"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.RequestResult"
  name: "RequestResult"
  nameWithType: "RequestResult"
  fullName: "com.microsoft.azure.storage.RequestResult"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getResult*"
  name: "getResult"
  nameWithType: "StorageRequest<C,P,R>.getResult"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getResult"
  package: "com.microsoft.azure.storage.core"
- uid: "java.net.HttpURLConnection"
  spec.java:
  - uid: "java.net.HttpURLConnection"
    name: "HttpURLConnection"
    fullName: "java.net.HttpURLConnection"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getConnection*"
  name: "getConnection"
  nameWithType: "StorageRequest<C,P,R>.getConnection"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getConnection"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getSendStream*"
  name: "getSendStream"
  nameWithType: "StorageRequest<C,P,R>.getSendStream"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getSendStream"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getOffset*"
  name: "getOffset"
  nameWithType: "StorageRequest<C,P,R>.getOffset"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getOffset"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLength*"
  name: "getLength"
  nameWithType: "StorageRequest<C,P,R>.getLength"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLength"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLockedETag*"
  name: "getLockedETag"
  nameWithType: "StorageRequest<C,P,R>.getLockedETag"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLockedETag"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getContentMD5*"
  name: "getContentMD5"
  nameWithType: "StorageRequest<C,P,R>.getContentMD5"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getContentMD5"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StreamMd5AndLength"
  name: "StreamMd5AndLength"
  nameWithType: "StreamMd5AndLength"
  fullName: "com.microsoft.azure.storage.core.StreamMd5AndLength"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentDescriptor*"
  name: "getCurrentDescriptor"
  nameWithType: "StorageRequest<C,P,R>.getCurrentDescriptor"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentDescriptor"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.LocationMode"
  name: "LocationMode"
  nameWithType: "LocationMode"
  fullName: "com.microsoft.azure.storage.LocationMode"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getLocationMode*"
  name: "getLocationMode"
  nameWithType: "StorageRequest<C,P,R>.getLocationMode"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getLocationMode"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.RequestLocationMode"
  name: "RequestLocationMode"
  nameWithType: "RequestLocationMode"
  fullName: "com.microsoft.azure.storage.core.RequestLocationMode"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getRequestLocationMode*"
  name: "getRequestLocationMode"
  nameWithType: "StorageRequest<C,P,R>.getRequestLocationMode"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getRequestLocationMode"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.StorageLocation"
  name: "StorageLocation"
  nameWithType: "StorageLocation"
  fullName: "com.microsoft.azure.storage.StorageLocation"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentLocation*"
  name: "getCurrentLocation"
  nameWithType: "StorageRequest<C,P,R>.getCurrentLocation"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentLocation"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getETagLockCondition*"
  name: "getETagLockCondition"
  nameWithType: "StorageRequest<C,P,R>.getETagLockCondition"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getETagLockCondition"
  package: "com.microsoft.azure.storage.core"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getArePropertiesPopulated*"
  name: "getArePropertiesPopulated"
  nameWithType: "StorageRequest<C,P,R>.getArePropertiesPopulated"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getArePropertiesPopulated"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "StorageRequest<C,P,R>.getStorageUri"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getStorageUri"
  package: "com.microsoft.azure.storage.core"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.core.StorageRequest.getCurrentRequestByteCount*"
  name: "getCurrentRequestByteCount"
  nameWithType: "StorageRequest<C,P,R>.getCurrentRequestByteCount"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.getCurrentRequestByteCount"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.isSent*"
  name: "isSent"
  nameWithType: "StorageRequest<C,P,R>.isSent"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.isSent"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "com.microsoft.azure.storage.core.StorageRequest.initialize*"
  name: "initialize"
  nameWithType: "StorageRequest<C,P,R>.initialize"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.initialize"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.isNonExceptionedRetryableFailure*"
  name: "isNonExceptionedRetryableFailure"
  nameWithType: "StorageRequest<C,P,R>.isNonExceptionedRetryableFailure"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.isNonExceptionedRetryableFailure"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.materializeException*"
  name: "materializeException"
  nameWithType: "StorageRequest<C,P,R>.materializeException"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.materializeException"
  package: "com.microsoft.azure.storage.core"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.ServiceClient"
  name: "ServiceClient"
  nameWithType: "ServiceClient"
  fullName: "com.microsoft.azure.storage.ServiceClient"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signBlobQueueAndFileRequest*"
  name: "signBlobQueueAndFileRequest"
  nameWithType: "StorageRequest<C,P,R>.signBlobQueueAndFileRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signBlobQueueAndFileRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signTableRequest*"
  name: "signTableRequest"
  nameWithType: "StorageRequest<C,P,R>.signTableRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signTableRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.applyLocationModeToRequest*"
  name: "applyLocationModeToRequest"
  nameWithType: "StorageRequest<C,P,R>.applyLocationModeToRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.applyLocationModeToRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.initializeLocation*"
  name: "initializeLocation"
  nameWithType: "StorageRequest<C,P,R>.initializeLocation"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.initializeLocation"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.validateLocation*"
  name: "validateLocation"
  nameWithType: "StorageRequest<C,P,R>.validateLocation"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.validateLocation"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setException*"
  name: "setException"
  nameWithType: "StorageRequest<C,P,R>.setException"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setException"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setNonExceptionedRetryableFailure*"
  name: "setNonExceptionedRetryableFailure"
  nameWithType: "StorageRequest<C,P,R>.setNonExceptionedRetryableFailure"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setNonExceptionedRetryableFailure"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setRequestOptions*"
  name: "setRequestOptions"
  nameWithType: "StorageRequest<C,P,R>.setRequestOptions"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setRequestOptions"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setResult*"
  name: "setResult"
  nameWithType: "StorageRequest<C,P,R>.setResult"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setResult"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setConnection*"
  name: "setConnection"
  nameWithType: "StorageRequest<C,P,R>.setConnection"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setConnection"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setSendStream*"
  name: "setSendStream"
  nameWithType: "StorageRequest<C,P,R>.setSendStream"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setSendStream"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setOffset*"
  name: "setOffset"
  nameWithType: "StorageRequest<C,P,R>.setOffset"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setOffset"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLength*"
  name: "setLength"
  nameWithType: "StorageRequest<C,P,R>.setLength"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLength"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLockedETag*"
  name: "setLockedETag"
  nameWithType: "StorageRequest<C,P,R>.setLockedETag"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLockedETag"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setContentMD5*"
  name: "setContentMD5"
  nameWithType: "StorageRequest<C,P,R>.setContentMD5"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setContentMD5"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentDescriptor*"
  name: "setCurrentDescriptor"
  nameWithType: "StorageRequest<C,P,R>.setCurrentDescriptor"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentDescriptor"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setETagLockCondition*"
  name: "setETagLockCondition"
  nameWithType: "StorageRequest<C,P,R>.setETagLockCondition"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setETagLockCondition"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setArePropertiesPopulated*"
  name: "setArePropertiesPopulated"
  nameWithType: "StorageRequest<C,P,R>.setArePropertiesPopulated"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setArePropertiesPopulated"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setLocationMode*"
  name: "setLocationMode"
  nameWithType: "StorageRequest<C,P,R>.setLocationMode"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setLocationMode"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setRequestLocationMode*"
  name: "setRequestLocationMode"
  nameWithType: "StorageRequest<C,P,R>.setRequestLocationMode"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setRequestLocationMode"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentLocation*"
  name: "setCurrentLocation"
  nameWithType: "StorageRequest<C,P,R>.setCurrentLocation"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentLocation"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setStorageUri*"
  name: "setStorageUri"
  nameWithType: "StorageRequest<C,P,R>.setStorageUri"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setStorageUri"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setCurrentRequestByteCount*"
  name: "setCurrentRequestByteCount"
  nameWithType: "StorageRequest<C,P,R>.setCurrentRequestByteCount"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setCurrentRequestByteCount"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setIsSent*"
  name: "setIsSent"
  nameWithType: "StorageRequest<C,P,R>.setIsSent"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setIsSent"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Exception"
  spec.java:
  - uid: "java.lang.Exception"
    name: "Exception"
    fullName: "java.lang.Exception"
- uid: "C"
  spec.java:
  - uid: "C"
    name: "C"
    fullName: "C"
- uid: "P"
  spec.java:
  - uid: "P"
    name: "P"
    fullName: "P"
- uid: "com.microsoft.azure.storage.core.StorageRequest.buildRequest*"
  name: "buildRequest"
  nameWithType: "StorageRequest<C,P,R>.buildRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.buildRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.setHeaders*"
  name: "setHeaders"
  nameWithType: "StorageRequest<C,P,R>.setHeaders"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.setHeaders"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.signRequest*"
  name: "signRequest"
  nameWithType: "StorageRequest<C,P,R>.signRequest"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.signRequest"
  package: "com.microsoft.azure.storage.core"
- uid: "R"
  spec.java:
  - uid: "R"
    name: "R"
    fullName: "R"
- uid: "com.microsoft.azure.storage.core.StorageRequest.preProcessResponse*"
  name: "preProcessResponse"
  nameWithType: "StorageRequest<C,P,R>.preProcessResponse"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.preProcessResponse"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.postProcessResponse*"
  name: "postProcessResponse"
  nameWithType: "StorageRequest<C,P,R>.postProcessResponse"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.postProcessResponse"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.core.StorageRequest.validateStreamWrite*"
  name: "validateStreamWrite"
  nameWithType: "StorageRequest<C,P,R>.validateStreamWrite"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.validateStreamWrite"
  package: "com.microsoft.azure.storage.core"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.microsoft.azure.storage.core.StorageRequest.recoveryAction*"
  name: "recoveryAction"
  nameWithType: "StorageRequest<C,P,R>.recoveryAction"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.recoveryAction"
  package: "com.microsoft.azure.storage.core"
- uid: "com.microsoft.azure.storage.StorageExtendedErrorInformation"
  name: "StorageExtendedErrorInformation"
  nameWithType: "StorageExtendedErrorInformation"
  fullName: "com.microsoft.azure.storage.StorageExtendedErrorInformation"
- uid: "com.microsoft.azure.storage.core.StorageRequest.parseErrorDetails*"
  name: "parseErrorDetails"
  nameWithType: "StorageRequest<C,P,R>.parseErrorDetails"
  fullName: "com.microsoft.azure.storage.core.StorageRequest<C,P,R>.parseErrorDetails"
  package: "com.microsoft.azure.storage.core"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
