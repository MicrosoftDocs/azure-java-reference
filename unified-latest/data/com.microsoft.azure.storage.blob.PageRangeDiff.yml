### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff"
  id: "PageRangeDiff"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(long,long,boolean)"
  - "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared()"
  - "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared(boolean)"
  langs:
  - "java"
  name: "PageRangeDiff"
  nameWithType: "PageRangeDiff"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  summary: "Represents a range of pages in a page blob which have changed since the previous snapshot specified."
  syntax:
    content: "public final class PageRangeDiff extends PageRange"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.storage.blob.PageRange"
  inheritedMembers:
  - "com.microsoft.azure.storage.blob.PageRange.getEndOffset()"
  - "com.microsoft.azure.storage.blob.PageRange.getStartOffset()"
  - "com.microsoft.azure.storage.blob.PageRange.setEndOffset(long)"
  - "com.microsoft.azure.storage.blob.PageRange.setStartOffset(long)"
  - "com.microsoft.azure.storage.blob.PageRange.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(long,long,boolean)"
  id: "PageRangeDiff(long,long,boolean)"
  parent: "com.microsoft.azure.storage.blob.PageRangeDiff"
  langs:
  - "java"
  name: "PageRangeDiff(long start, long end, boolean isCleared)"
  nameWithType: "PageRangeDiff.PageRangeDiff(long start, long end, boolean isCleared)"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(long start, long end, boolean isCleared)"
  overload: "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  summary: "Creates an instance of the `PageRangeDiff` class."
  syntax:
    content: "protected PageRangeDiff(long start, long end, boolean isCleared)"
    parameters:
    - id: "start"
      type: "long"
      description: "A <code>long</code> which represents the starting offset."
    - id: "end"
      type: "long"
      description: "A <code>long</code> which represents the ending offset."
    - id: "isCleared"
      type: "boolean"
      description: "<code>True</code> if the page range is a cleared range, <code>false</code> otherwise."
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared()"
  id: "isCleared()"
  parent: "com.microsoft.azure.storage.blob.PageRangeDiff"
  langs:
  - "java"
  name: "isCleared()"
  nameWithType: "PageRangeDiff.isCleared()"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared()"
  overload: "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Indicates whether the page range was cleared."
  syntax:
    content: "public boolean isCleared()"
    return:
      type: "boolean"
      description: "<code>True</code> if the page range is a cleared range, <code>false</code> otherwise."
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared(boolean)"
  id: "setIsCleared(boolean)"
  parent: "com.microsoft.azure.storage.blob.PageRangeDiff"
  langs:
  - "java"
  name: "setIsCleared(boolean isCleared)"
  nameWithType: "PageRangeDiff.setIsCleared(boolean isCleared)"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared(boolean isCleared)"
  overload: "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Sets the ending offset."
  syntax:
    content: "protected void setIsCleared(boolean isCleared)"
    parameters:
    - id: "isCleared"
      type: "boolean"
      description: "<code>True</code> if the page range is a cleared range, <code>false</code> otherwise."
references:
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff*"
  name: "PageRangeDiff"
  nameWithType: "PageRangeDiff.PageRangeDiff"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared*"
  name: "isCleared"
  nameWithType: "PageRangeDiff.isCleared"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.isCleared"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared*"
  name: "setIsCleared"
  nameWithType: "PageRangeDiff.setIsCleared"
  fullName: "com.microsoft.azure.storage.blob.PageRangeDiff.setIsCleared"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.PageRange"
  name: "PageRange"
  nameWithType: "PageRange"
  fullName: "com.microsoft.azure.storage.blob.PageRange"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.storage.blob.PageRange.setEndOffset(long)"
  name: "PageRange.setEndOffset(long)"
  nameWithType: "PageRange.setEndOffset(long)"
  fullName: "com.microsoft.azure.storage.blob.PageRange.setEndOffset(long)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.microsoft.azure.storage.blob.PageRange.getEndOffset()"
  name: "PageRange.getEndOffset()"
  nameWithType: "PageRange.getEndOffset()"
  fullName: "com.microsoft.azure.storage.blob.PageRange.getEndOffset()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.azure.storage.blob.PageRange.setStartOffset(long)"
  name: "PageRange.setStartOffset(long)"
  nameWithType: "PageRange.setStartOffset(long)"
  fullName: "com.microsoft.azure.storage.blob.PageRange.setStartOffset(long)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.microsoft.azure.storage.blob.PageRange.toString()"
  name: "PageRange.toString()"
  nameWithType: "PageRange.toString()"
  fullName: "com.microsoft.azure.storage.blob.PageRange.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.PageRange.getStartOffset()"
  name: "PageRange.getStartOffset()"
  nameWithType: "PageRange.getStartOffset()"
  fullName: "com.microsoft.azure.storage.blob.PageRange.getStartOffset()"
