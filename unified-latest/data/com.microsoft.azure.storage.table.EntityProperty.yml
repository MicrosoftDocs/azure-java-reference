### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.table.EntityProperty"
  id: "EntityProperty"
  parent: "com.microsoft.azure.storage.table"
  children:
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(byte[])"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(double)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(int)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Byte[])"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Double)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Integer)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Long)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Object,java.lang.Class<?>)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String,com.microsoft.azure.storage.table.EdmType)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String,java.lang.Class<?>)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.util.Date)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.util.UUID)"
  - "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(long)"
  - "com.microsoft.azure.storage.table.EntityProperty.getEdmType()"
  - "com.microsoft.azure.storage.table.EntityProperty.getIsNull()"
  - "com.microsoft.azure.storage.table.EntityProperty.getType()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsString()"
  - "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID()"
  - "com.microsoft.azure.storage.table.EntityProperty.isEncrypted()"
  - "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility(boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted(boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(byte[])"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(double)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(int)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Boolean)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Byte[])"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Double)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Integer)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Long)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.String)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.util.Date)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(java.util.UUID)"
  - "com.microsoft.azure.storage.table.EntityProperty.setValue(long)"
  langs:
  - "java"
  name: "EntityProperty"
  nameWithType: "EntityProperty"
  fullName: "com.microsoft.azure.storage.table.EntityProperty"
  type: "Class"
  package: "com.microsoft.azure.storage.table"
  summary: "A class which represents a single typed property value in a table entity. An <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> stores the data type as an <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref>. The value, which may be `null` for object types, but not for primitive types, is serialized and stored as a `String`.\n\n<xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> provides overloaded constructors and overloads of the `setValue` method for supported value types. Each overloaded constructor or `setValue` method sets the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> and serializes the value appropriately based on the parameter type.\n\nUse one of the `getValueAs`*Type* methods to deserialize an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as the appropriate Java type. The method will throw a <xref uid=\"\" data-throw-if-not-resolved=\"false\">ParseException</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> if the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> cannot be deserialized as the Java type."
  syntax:
    content: "public final class EntityProperty"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(boolean)"
  id: "EntityProperty(boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(boolean value)"
  nameWithType: "EntityProperty.EntityProperty(boolean value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(boolean value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `boolean` value."
  syntax:
    content: "public EntityProperty(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The <code>boolean</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(byte[])"
  id: "EntityProperty(byte[])"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(byte[] value)"
  nameWithType: "EntityProperty.EntityProperty(byte[] value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(byte[] value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `byte[]` value."
  syntax:
    content: "public EntityProperty(byte[] value)"
    parameters:
    - id: "value"
      type: "byte[]"
      description: "The <code>byte[]</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(double)"
  id: "EntityProperty(double)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(double value)"
  nameWithType: "EntityProperty.EntityProperty(double value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(double value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `double` value."
  syntax:
    content: "public EntityProperty(double value)"
    parameters:
    - id: "value"
      type: "double"
      description: "The <code>double</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(int)"
  id: "EntityProperty(int)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(int value)"
  nameWithType: "EntityProperty.EntityProperty(int value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(int value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from an `int` value."
  syntax:
    content: "public EntityProperty(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The <code>int</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Boolean)"
  id: "EntityProperty(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Boolean value)"
  nameWithType: "EntityProperty.EntityProperty(Boolean value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Boolean value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Boolean` value."
  syntax:
    content: "public EntityProperty(Boolean value)"
    parameters:
    - id: "value"
      type: "java.lang.Boolean"
      description: "The <code>Boolean</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Byte[])"
  id: "EntityProperty(java.lang.Byte[])"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Byte[] value)"
  nameWithType: "EntityProperty.EntityProperty(Byte[] value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Byte[] value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Byte[]`."
  syntax:
    content: "public EntityProperty(Byte[] value)"
    parameters:
    - id: "value"
      type: "java.lang.Byte[]"
      description: "The <code>Byte[]</code> to set as the entity property value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Double)"
  id: "EntityProperty(java.lang.Double)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Double value)"
  nameWithType: "EntityProperty.EntityProperty(Double value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Double value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Double` value."
  syntax:
    content: "public EntityProperty(Double value)"
    parameters:
    - id: "value"
      type: "java.lang.Double"
      description: "The <code>Double</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Integer)"
  id: "EntityProperty(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Integer value)"
  nameWithType: "EntityProperty.EntityProperty(Integer value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Integer value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from an `Integer` value."
  syntax:
    content: "public EntityProperty(Integer value)"
    parameters:
    - id: "value"
      type: "java.lang.Integer"
      description: "The <code>Integer</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Long)"
  id: "EntityProperty(java.lang.Long)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Long value)"
  nameWithType: "EntityProperty.EntityProperty(Long value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Long value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Long` value."
  syntax:
    content: "public EntityProperty(Long value)"
    parameters:
    - id: "value"
      type: "java.lang.Long"
      description: "The <code>Long</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.Object,java.lang.Class<?>)"
  id: "EntityProperty(java.lang.Object,java.lang.Class<?>)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Object value, Class<?> type)"
  nameWithType: "EntityProperty.EntityProperty(Object value, Class<?> type)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Object value, Class<?> type)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Object` value and a data type, and verifies that the value can be interpreted as the specified data type."
  syntax:
    content: "protected EntityProperty(Object value, Class<?> type)"
    parameters:
    - id: "value"
      type: "java.lang.Object"
      description: "The <code>Object</code> to convert to a string and store."
    - id: "type"
      type: "java.lang.Class<?>"
      description: "The <code>Class&lt;?&gt;</code> type of the value to construct."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String)"
  id: "EntityProperty(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(String value)"
  nameWithType: "EntityProperty.EntityProperty(String value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(String value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `String` value."
  syntax:
    content: "public EntityProperty(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The <code>String</code> to set as the entity property value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String,com.microsoft.azure.storage.table.EdmType)"
  id: "EntityProperty(java.lang.String,com.microsoft.azure.storage.table.EdmType)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(String value, EdmType edmType)"
  nameWithType: "EntityProperty.EntityProperty(String value, EdmType edmType)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(String value, EdmType edmType)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `String` value and a data type, and verifies that the value can be interpreted as the specified data type."
  syntax:
    content: "protected EntityProperty(String value, EdmType edmType)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The <code>String</code> representation of the value to construct."
    - id: "edmType"
      type: "com.microsoft.azure.storage.table.EdmType"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> data type of the value to construct."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.lang.String,java.lang.Class<?>)"
  id: "EntityProperty(java.lang.String,java.lang.Class<?>)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(String value, Class<?> type)"
  nameWithType: "EntityProperty.EntityProperty(String value, Class<?> type)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(String value, Class<?> type)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Reserved for internal use. Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `Object` value type, and verifies that the value can be interpreted as the specified data type."
  syntax:
    content: "protected EntityProperty(String value, Class<?> type)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The <code>Object</code> to convert to a string and store."
    - id: "type"
      type: "java.lang.Class<?>"
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.util.Date)"
  id: "EntityProperty(java.util.Date)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(Date value)"
  nameWithType: "EntityProperty.EntityProperty(Date value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(Date value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `java.util.Date` value."
  syntax:
    content: "public EntityProperty(Date value)"
    parameters:
    - id: "value"
      type: "java.util.Date"
      description: "The <code>java.util.Date</code> to set as the entity property value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(java.util.UUID)"
  id: "EntityProperty(java.util.UUID)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(UUID value)"
  nameWithType: "EntityProperty.EntityProperty(UUID value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(UUID value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `java.util.UUID` value."
  syntax:
    content: "public EntityProperty(UUID value)"
    parameters:
    - id: "value"
      type: "java.util.UUID"
      description: "The <code>java.util.UUID</code> to set as the entity property value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(long)"
  id: "EntityProperty(long)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "EntityProperty(long value)"
  nameWithType: "EntityProperty.EntityProperty(long value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty(long value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.table"
  summary: "Constructs an <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> instance from a `long` value."
  syntax:
    content: "public EntityProperty(long value)"
    parameters:
    - id: "value"
      type: "long"
      description: "The <code>long</code> value of the entity property to set."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getEdmType()"
  id: "getEdmType()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getEdmType()"
  nameWithType: "EntityProperty.getEdmType()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getEdmType()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getEdmType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> storage data type for the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>."
  syntax:
    content: "public EdmType getEdmType()"
    return:
      type: "com.microsoft.azure.storage.table.EdmType"
      description: "The <xref uid=\"com.microsoft.azure.storage.table.EdmType\" data-throw-if-not-resolved=\"false\">EdmType</xref> enumeration value for the data type of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getIsNull()"
  id: "getIsNull()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getIsNull()"
  nameWithType: "EntityProperty.getIsNull()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getIsNull()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getIsNull*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets a flag indicating that the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is `null`."
  syntax:
    content: "public boolean getIsNull()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> flag indicating that the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getType()"
  id: "getType()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getType()"
  nameWithType: "EntityProperty.getType()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getType()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getType*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the class type of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>."
  syntax:
    content: "public Class<?> getType()"
    return:
      type: "java.lang.Class<?>"
      description: "The <code>Class&lt;?&gt;</code> of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean()"
  id: "getValueAsBoolean()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsBoolean()"
  nameWithType: "EntityProperty.getValueAsBoolean()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `boolean`."
  syntax:
    content: "public boolean getValueAsBoolean()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject()"
  id: "getValueAsBooleanObject()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsBooleanObject()"
  nameWithType: "EntityProperty.getValueAsBooleanObject()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `Boolean`."
  syntax:
    content: "public Boolean getValueAsBooleanObject()"
    return:
      type: "java.lang.Boolean"
      description: "A <code>Boolean</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray()"
  id: "getValueAsByteArray()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsByteArray()"
  nameWithType: "EntityProperty.getValueAsByteArray()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `byte` array."
  syntax:
    content: "public byte[] getValueAsByteArray()"
    return:
      type: "byte[]"
      description: "A <code>byte[]</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value, or <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray()"
  id: "getValueAsByteObjectArray()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsByteObjectArray()"
  nameWithType: "EntityProperty.getValueAsByteObjectArray()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `Byte` array."
  syntax:
    content: "public Byte[] getValueAsByteObjectArray()"
    return:
      type: "java.lang.Byte[]"
      description: "A <code>Byte[]</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value, or <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate()"
  id: "getValueAsDate()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsDate()"
  nameWithType: "EntityProperty.getValueAsDate()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `java.util.Date`."
  syntax:
    content: "public Date getValueAsDate()"
    return:
      type: "java.util.Date"
      description: "A <code>java.util.Date</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value, or <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble()"
  id: "getValueAsDouble()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsDouble()"
  nameWithType: "EntityProperty.getValueAsDouble()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `double`."
  syntax:
    content: "public double getValueAsDouble()"
    return:
      type: "double"
      description: "A <code>double</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject()"
  id: "getValueAsDoubleObject()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsDoubleObject()"
  nameWithType: "EntityProperty.getValueAsDoubleObject()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `double`."
  syntax:
    content: "public Double getValueAsDoubleObject()"
    return:
      type: "java.lang.Double"
      description: "A <code>double</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger()"
  id: "getValueAsInteger()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsInteger()"
  nameWithType: "EntityProperty.getValueAsInteger()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as an `int`."
  syntax:
    content: "public int getValueAsInteger()"
    return:
      type: "int"
      description: "An <code>int</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject()"
  id: "getValueAsIntegerObject()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsIntegerObject()"
  nameWithType: "EntityProperty.getValueAsIntegerObject()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as an `Integer`."
  syntax:
    content: "public Integer getValueAsIntegerObject()"
    return:
      type: "java.lang.Integer"
      description: "An <code>Integer</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong()"
  id: "getValueAsLong()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsLong()"
  nameWithType: "EntityProperty.getValueAsLong()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `long`."
  syntax:
    content: "public long getValueAsLong()"
    return:
      type: "long"
      description: "A <code>long</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject()"
  id: "getValueAsLongObject()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsLongObject()"
  nameWithType: "EntityProperty.getValueAsLongObject()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `Long`."
  syntax:
    content: "public Long getValueAsLongObject()"
    return:
      type: "java.lang.Long"
      description: "A <code>long</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsString()"
  id: "getValueAsString()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsString()"
  nameWithType: "EntityProperty.getValueAsString()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsString()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsString*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `String`."
  syntax:
    content: "public String getValueAsString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value, or <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID()"
  id: "getValueAsUUID()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "getValueAsUUID()"
  nameWithType: "EntityProperty.getValueAsUUID()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets the value of this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> as a `java.util.UUID`."
  syntax:
    content: "public UUID getValueAsUUID()"
    return:
      type: "java.util.UUID"
      description: "A <code>java.util.UUID</code> representation of the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value, or <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.isEncrypted()"
  id: "isEncrypted()"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "isEncrypted()"
  nameWithType: "EntityProperty.isEncrypted()"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.isEncrypted()"
  overload: "com.microsoft.azure.storage.table.EntityProperty.isEncrypted*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Gets a flag indicating whether the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is encrypted."
  syntax:
    content: "protected boolean isEncrypted()"
    return:
      type: "boolean"
      description: "A <code>boolean</code> flag indicating whether the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is encrypted."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility(boolean)"
  id: "setDateBackwardCompatibility(boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setDateBackwardCompatibility(boolean dateBackwardCompatibility)"
  nameWithType: "EntityProperty.setDateBackwardCompatibility(boolean dateBackwardCompatibility)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility(boolean dateBackwardCompatibility)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets whether the client should look to correct Date values stored on a <xref uid=\"com.microsoft.azure.storage.table.TableEntity\" data-throw-if-not-resolved=\"false\">TableEntity</xref> that may have been written using versions of this library prior to 2.0.0.\n\n<xref uid=\"\" data-throw-if-not-resolved=\"false\">#dateBackwardCompatibility</xref> is by default `false`, indicating a post 2.0.0 version or mixed-platform usage.\n\nSee [here][] for more details.\n\n\n[here]: http://go.microsoft.com/fwlink/?LinkId=523753"
  syntax:
    content: " void setDateBackwardCompatibility(boolean dateBackwardCompatibility)"
    parameters:
    - id: "dateBackwardCompatibility"
      type: "boolean"
      description: "<code>true</code> to enable <code>dateBackwardCompatibility</code>; otherwise, <code>false</code>"
- uid: "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted(boolean)"
  id: "setIsEncrypted(boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setIsEncrypted(boolean isEncrypted)"
  nameWithType: "EntityProperty.setIsEncrypted(boolean isEncrypted)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted(boolean isEncrypted)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets a flag indicating whether the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is encrypted."
  syntax:
    content: "protected void setIsEncrypted(boolean isEncrypted)"
    parameters:
    - id: "isEncrypted"
      type: "boolean"
      description: "A <code>boolean</code> flag indicating whether the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value is encrypted."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(boolean)"
  id: "setValue(boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(boolean value)"
  nameWithType: "EntityProperty.setValue(boolean value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(boolean value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `boolean` value."
  syntax:
    content: "public final synchronized void setValue(boolean value)"
    parameters:
    - id: "value"
      type: "boolean"
      description: "The <code>boolean</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(byte[])"
  id: "setValue(byte[])"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(byte[] value)"
  nameWithType: "EntityProperty.setValue(byte[] value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(byte[] value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `byte[]` value."
  syntax:
    content: "public final synchronized void setValue(byte[] value)"
    parameters:
    - id: "value"
      type: "byte[]"
      description: "The <code>byte[]</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value. This value may be\n            <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(double)"
  id: "setValue(double)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(double value)"
  nameWithType: "EntityProperty.setValue(double value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(double value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `double` value."
  syntax:
    content: "public final synchronized void setValue(double value)"
    parameters:
    - id: "value"
      type: "double"
      description: "The <code>double</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(int)"
  id: "setValue(int)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(int value)"
  nameWithType: "EntityProperty.setValue(int value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(int value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `int` value."
  syntax:
    content: "public final synchronized void setValue(int value)"
    parameters:
    - id: "value"
      type: "int"
      description: "The <code>int</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Boolean)"
  id: "setValue(java.lang.Boolean)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Boolean value)"
  nameWithType: "EntityProperty.setValue(Boolean value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Boolean value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `Boolean` value."
  syntax:
    content: "public final synchronized void setValue(Boolean value)"
    parameters:
    - id: "value"
      type: "java.lang.Boolean"
      description: "The <code>Boolean</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Byte[])"
  id: "setValue(java.lang.Byte[])"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Byte[] value)"
  nameWithType: "EntityProperty.setValue(Byte[] value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Byte[] value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `Byte[]` value."
  syntax:
    content: "public final synchronized void setValue(Byte[] value)"
    parameters:
    - id: "value"
      type: "java.lang.Byte[]"
      description: "The <code>Byte[]</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value. This value may be\n            <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Double)"
  id: "setValue(java.lang.Double)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Double value)"
  nameWithType: "EntityProperty.setValue(Double value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Double value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `Double` value."
  syntax:
    content: "public final synchronized void setValue(Double value)"
    parameters:
    - id: "value"
      type: "java.lang.Double"
      description: "The <code>Double</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Integer)"
  id: "setValue(java.lang.Integer)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Integer value)"
  nameWithType: "EntityProperty.setValue(Integer value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Integer value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `Integer` value."
  syntax:
    content: "public final synchronized void setValue(Integer value)"
    parameters:
    - id: "value"
      type: "java.lang.Integer"
      description: "The <code>Integer</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.Long)"
  id: "setValue(java.lang.Long)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Long value)"
  nameWithType: "EntityProperty.setValue(Long value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Long value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `Long` value."
  syntax:
    content: "public final synchronized void setValue(Long value)"
    parameters:
    - id: "value"
      type: "java.lang.Long"
      description: "The <code>Long</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.lang.String)"
  id: "setValue(java.lang.String)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(String value)"
  nameWithType: "EntityProperty.setValue(String value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(String value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the `String` value."
  syntax:
    content: "public final synchronized void setValue(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The <code>String</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value. This value may be\n            <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.util.Date)"
  id: "setValue(java.util.Date)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(Date value)"
  nameWithType: "EntityProperty.setValue(Date value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(Date value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `java.util.Date` value."
  syntax:
    content: "public final synchronized void setValue(Date value)"
    parameters:
    - id: "value"
      type: "java.util.Date"
      description: "The <code>java.util.Date</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value. This value may be\n            <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(java.util.UUID)"
  id: "setValue(java.util.UUID)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(UUID value)"
  nameWithType: "EntityProperty.setValue(UUID value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(UUID value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `java.util.UUID` value."
  syntax:
    content: "public final synchronized void setValue(UUID value)"
    parameters:
    - id: "value"
      type: "java.util.UUID"
      description: "The <code>java.util.UUID</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value.\n            This value may be <code>null</code>."
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue(long)"
  id: "setValue(long)"
  parent: "com.microsoft.azure.storage.table.EntityProperty"
  langs:
  - "java"
  name: "setValue(long value)"
  nameWithType: "EntityProperty.setValue(long value)"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue(long value)"
  overload: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  type: "Method"
  package: "com.microsoft.azure.storage.table"
  summary: "Sets this <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> using the serialized `long` value."
  syntax:
    content: "public final synchronized void setValue(long value)"
    parameters:
    - id: "value"
      type: "long"
      description: "The <code>long</code> value to set as the <xref uid=\"com.microsoft.azure.storage.table.EntityProperty\" data-throw-if-not-resolved=\"false\">EntityProperty</xref> value."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty*"
  name: "EntityProperty"
  nameWithType: "EntityProperty.EntityProperty"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.EntityProperty"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.storage.table.EdmType"
  name: "EdmType"
  nameWithType: "EdmType"
  fullName: "com.microsoft.azure.storage.table.EdmType"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.Byte[]"
  spec.java:
  - uid: "java.lang.Byte"
    name: "Byte"
    fullName: "java.lang.Byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.util.Date"
  spec.java:
  - uid: "java.util.Date"
    name: "Date"
    fullName: "java.util.Date"
- uid: "double"
  spec.java:
  - uid: "double"
    name: "double"
    fullName: "double"
- uid: "java.lang.Double"
  spec.java:
  - uid: "java.lang.Double"
    name: "Double"
    fullName: "java.lang.Double"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getEdmType*"
  name: "getEdmType"
  nameWithType: "EntityProperty.getEdmType"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getEdmType"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getIsNull*"
  name: "getIsNull"
  nameWithType: "EntityProperty.getIsNull"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getIsNull"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getType*"
  name: "getType"
  nameWithType: "EntityProperty.getType"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getType"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.isEncrypted*"
  name: "isEncrypted"
  nameWithType: "EntityProperty.isEncrypted"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.isEncrypted"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean*"
  name: "getValueAsBoolean"
  nameWithType: "EntityProperty.getValueAsBoolean"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBoolean"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject*"
  name: "getValueAsBooleanObject"
  nameWithType: "EntityProperty.getValueAsBooleanObject"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsBooleanObject"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray*"
  name: "getValueAsByteArray"
  nameWithType: "EntityProperty.getValueAsByteArray"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteArray"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray*"
  name: "getValueAsByteObjectArray"
  nameWithType: "EntityProperty.getValueAsByteObjectArray"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsByteObjectArray"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate*"
  name: "getValueAsDate"
  nameWithType: "EntityProperty.getValueAsDate"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDate"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble*"
  name: "getValueAsDouble"
  nameWithType: "EntityProperty.getValueAsDouble"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDouble"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject*"
  name: "getValueAsDoubleObject"
  nameWithType: "EntityProperty.getValueAsDoubleObject"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsDoubleObject"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger*"
  name: "getValueAsInteger"
  nameWithType: "EntityProperty.getValueAsInteger"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsInteger"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject*"
  name: "getValueAsIntegerObject"
  nameWithType: "EntityProperty.getValueAsIntegerObject"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsIntegerObject"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong*"
  name: "getValueAsLong"
  nameWithType: "EntityProperty.getValueAsLong"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLong"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject*"
  name: "getValueAsLongObject"
  nameWithType: "EntityProperty.getValueAsLongObject"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsLongObject"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsString*"
  name: "getValueAsString"
  nameWithType: "EntityProperty.getValueAsString"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsString"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID*"
  name: "getValueAsUUID"
  nameWithType: "EntityProperty.getValueAsUUID"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.getValueAsUUID"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.setValue*"
  name: "setValue"
  nameWithType: "EntityProperty.setValue"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setValue"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility*"
  name: "setDateBackwardCompatibility"
  nameWithType: "EntityProperty.setDateBackwardCompatibility"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setDateBackwardCompatibility"
  package: "com.microsoft.azure.storage.table"
- uid: "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted*"
  name: "setIsEncrypted"
  nameWithType: "EntityProperty.setIsEncrypted"
  fullName: "com.microsoft.azure.storage.table.EntityProperty.setIsEncrypted"
  package: "com.microsoft.azure.storage.table"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
