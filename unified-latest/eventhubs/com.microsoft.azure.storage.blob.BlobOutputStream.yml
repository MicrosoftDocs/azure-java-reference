### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream"
  id: "BlobOutputStream"
  parent: "com.microsoft.azure.storage.blob"
  children:
  - "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream()"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[])"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[],int,int)"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(int)"
  - "com.microsoft.azure.storage.blob.BlobOutputStream.write(java.io.InputStream,long)"
  langs:
  - "java"
  name: "BlobOutputStream"
  nameWithType: "BlobOutputStream"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream"
  type: "Class"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public abstract class BlobOutputStream extends OutputStream"
  inheritance:
  - "java.lang.Object"
  - "java.io.OutputStream"
  inheritedMembers:
  - "java.io.OutputStream.close()"
  - "java.io.OutputStream.flush()"
  - "java.io.OutputStream.nullOutputStream()"
  - "java.io.OutputStream.write(byte[])"
  - "java.io.OutputStream.write(byte[],int,int)"
  - "java.io.OutputStream.write(int)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream()"
  id: "BlobOutputStream()"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "BlobOutputStream()"
  nameWithType: "BlobOutputStream.BlobOutputStream()"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream()"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.blob"
  syntax:
    content: "public BlobOutputStream()"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
  id: "close()"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "close()"
  nameWithType: "BlobOutputStream.close()"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.close()"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.close*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Closes this output stream and releases any system resources associated with this stream. If any data remains in the buffer it is committed to the service."
  syntax:
    content: "public abstract void close()"
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
  id: "flush()"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "flush()"
  nameWithType: "BlobOutputStream.flush()"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.flush()"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.flush*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Flushes this output stream and forces any buffered output bytes to be written out. If any data remains in the buffer it is committed to the service."
  syntax:
    content: "public abstract void flush()"
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs."
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[])"
  id: "write(byte[])"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "write(byte[] data)"
  nameWithType: "BlobOutputStream.write(byte[] data)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[] data)"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Writes `b.length` bytes from the specified byte array to this output stream."
  syntax:
    content: "public void write(byte[] data)"
    parameters:
    - id: "data"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the data to write."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs. In particular, an IOException may be thrown if the output stream has been\n             closed."
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[],int,int)"
  id: "write(byte[],int,int)"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "write(byte[] data, int offset, int length)"
  nameWithType: "BlobOutputStream.write(byte[] data, int offset, int length)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(byte[] data, int offset, int length)"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Writes length bytes from the specified byte array starting at offset to this output stream."
  syntax:
    content: "public abstract void write(byte[] data, int offset, int length)"
    parameters:
    - id: "data"
      type: "byte[]"
      description: "A <code>byte</code> array which represents the data to write."
    - id: "offset"
      type: "int"
      description: "An <code>int</code> which represents the start offset in the data."
    - id: "length"
      type: "int"
      description: "An <code>int</code> which represents the number of bytes to write."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs. In particular, an IOException may be thrown if the output stream has been\n             closed."
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(int)"
  id: "write(int)"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "write(int byteVal)"
  nameWithType: "BlobOutputStream.write(int byteVal)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(int byteVal)"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Writes the specified byte to this output stream. The general contract for write is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument b. The 24 high-order bits of b are ignored."
  syntax:
    content: "public void write(int byteVal)"
    parameters:
    - id: "byteVal"
      type: "int"
      description: "An <code>int</code> which represents the bye value to write."
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs. In particular, an IOException may be thrown if the output stream has been\n             closed."
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write(java.io.InputStream,long)"
  id: "write(java.io.InputStream,long)"
  parent: "com.microsoft.azure.storage.blob.BlobOutputStream"
  langs:
  - "java"
  name: "write(InputStream sourceStream, long writeLength)"
  nameWithType: "BlobOutputStream.write(InputStream sourceStream, long writeLength)"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write(InputStream sourceStream, long writeLength)"
  overload: "com.microsoft.azure.storage.blob.BlobOutputStream.write*"
  type: "Method"
  package: "com.microsoft.azure.storage.blob"
  summary: "Writes all data from the InputStream to the Blob."
  syntax:
    content: "public abstract void write(InputStream sourceStream, long writeLength)"
    parameters:
    - id: "sourceStream"
      type: "java.io.InputStream"
      description: "An <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\">InputStream</xref> object which species the data to write to the Blob."
    - id: "writeLength"
      type: "long"
  exceptions:
  - type: "java.io.IOException"
    description: "If an I/O error occurs. In particular, an IOException may be thrown if the output stream has been\n             closed."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If an I/O error occurs. In particular, an IOException may be thrown if the output stream has been\n             closed."
references:
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream*"
  name: "BlobOutputStream"
  nameWithType: "BlobOutputStream.BlobOutputStream"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.BlobOutputStream"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.write*"
  name: "write"
  nameWithType: "BlobOutputStream.write"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.write"
  package: "com.microsoft.azure.storage.blob"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.flush*"
  name: "flush"
  nameWithType: "BlobOutputStream.flush"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.flush"
  package: "com.microsoft.azure.storage.blob"
- uid: "com.microsoft.azure.storage.blob.BlobOutputStream.close*"
  name: "close"
  nameWithType: "BlobOutputStream.close"
  fullName: "com.microsoft.azure.storage.blob.BlobOutputStream.close"
  package: "com.microsoft.azure.storage.blob"
- uid: "java.io.OutputStream"
  name: "OutputStream"
  nameWithType: "OutputStream"
  fullName: "java.io.OutputStream"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.io.OutputStream.write(int)"
  name: "OutputStream.write(int)"
  nameWithType: "OutputStream.write(int)"
  fullName: "java.io.OutputStream.write(int)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.io.OutputStream.flush()"
  name: "OutputStream.flush()"
  nameWithType: "OutputStream.flush()"
  fullName: "java.io.OutputStream.flush()"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.io.OutputStream.close()"
  name: "OutputStream.close()"
  nameWithType: "OutputStream.close()"
  fullName: "java.io.OutputStream.close()"
- uid: "java.io.OutputStream.nullOutputStream()"
  name: "OutputStream.nullOutputStream()"
  nameWithType: "OutputStream.nullOutputStream()"
  fullName: "java.io.OutputStream.nullOutputStream()"
- uid: "java.io.OutputStream.write(byte[],int,int)"
  name: "OutputStream.write(byte[],int,int)"
  nameWithType: "OutputStream.write(byte[],int,int)"
  fullName: "java.io.OutputStream.write(byte[],int,int)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.io.OutputStream.write(byte[])"
  name: "OutputStream.write(byte[])"
  nameWithType: "OutputStream.write(byte[])"
  fullName: "java.io.OutputStream.write(byte[])"
