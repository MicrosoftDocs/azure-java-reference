### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.StorageUri"
  id: "StorageUri"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.StorageUri.StorageUri(java.net.URI)"
  - "com.microsoft.azure.storage.StorageUri.StorageUri(java.net.URI,java.net.URI)"
  - "com.microsoft.azure.storage.StorageUri.equals(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.StorageUri.equals(java.lang.Object)"
  - "com.microsoft.azure.storage.StorageUri.getPrimaryUri()"
  - "com.microsoft.azure.storage.StorageUri.getQuery()"
  - "com.microsoft.azure.storage.StorageUri.getSecondaryUri()"
  - "com.microsoft.azure.storage.StorageUri.getUri(com.microsoft.azure.storage.StorageLocation)"
  - "com.microsoft.azure.storage.StorageUri.hashCode()"
  - "com.microsoft.azure.storage.StorageUri.isAbsolute()"
  - "com.microsoft.azure.storage.StorageUri.toString()"
  - "com.microsoft.azure.storage.StorageUri.validateLocationMode(com.microsoft.azure.storage.LocationMode)"
  langs:
  - "java"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Holds a list of URIs that represents the storage resource."
  syntax:
    content: "public class StorageUri"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.StorageUri.StorageUri(java.net.URI)"
  id: "StorageUri(java.net.URI)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "StorageUri(URI primaryUri)"
  nameWithType: "StorageUri.StorageUri(URI primaryUri)"
  fullName: "com.microsoft.azure.storage.StorageUri.StorageUri(URI primaryUri)"
  overload: "com.microsoft.azure.storage.StorageUri.StorageUri*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> class using the specified URI."
  syntax:
    content: "public StorageUri(URI primaryUri)"
    parameters:
    - id: "primaryUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the primary URI."
- uid: "com.microsoft.azure.storage.StorageUri.StorageUri(java.net.URI,java.net.URI)"
  id: "StorageUri(java.net.URI,java.net.URI)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "StorageUri(URI primaryUri, URI secondaryUri)"
  nameWithType: "StorageUri.StorageUri(URI primaryUri, URI secondaryUri)"
  fullName: "com.microsoft.azure.storage.StorageUri.StorageUri(URI primaryUri, URI secondaryUri)"
  overload: "com.microsoft.azure.storage.StorageUri.StorageUri*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Initializes a new instance of the <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> class using the specified primary and secondary URIs."
  syntax:
    content: "public StorageUri(URI primaryUri, URI secondaryUri)"
    parameters:
    - id: "primaryUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the primary URI."
    - id: "secondaryUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the secondary URI."
- uid: "com.microsoft.azure.storage.StorageUri.equals(com.microsoft.azure.storage.StorageUri)"
  id: "equals(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "equals(StorageUri other)"
  nameWithType: "StorageUri.equals(StorageUri other)"
  fullName: "com.microsoft.azure.storage.StorageUri.equals(StorageUri other)"
  overload: "com.microsoft.azure.storage.StorageUri.equals*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Indicates whether a <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object is equal to the current <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object."
  syntax:
    content: "public boolean equals(StorageUri other)"
    parameters:
    - id: "other"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A reference to a <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object to compare."
    return:
      type: "boolean"
      description: "<code>true</code> if this object is the same as the other argument; otherwise <code>false</code>."
- uid: "com.microsoft.azure.storage.StorageUri.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "StorageUri.equals(Object obj)"
  fullName: "com.microsoft.azure.storage.StorageUri.equals(Object obj)"
  overload: "com.microsoft.azure.storage.StorageUri.equals*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.storage.StorageUri.getPrimaryUri()"
  id: "getPrimaryUri()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "getPrimaryUri()"
  nameWithType: "StorageUri.getPrimaryUri()"
  fullName: "com.microsoft.azure.storage.StorageUri.getPrimaryUri()"
  overload: "com.microsoft.azure.storage.StorageUri.getPrimaryUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the endpoint for the primary location for the storage account."
  syntax:
    content: "public URI getPrimaryUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the primary URI."
- uid: "com.microsoft.azure.storage.StorageUri.getQuery()"
  id: "getQuery()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "getQuery()"
  nameWithType: "StorageUri.getQuery()"
  fullName: "com.microsoft.azure.storage.StorageUri.getQuery()"
  overload: "com.microsoft.azure.storage.StorageUri.getQuery*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the decoded query component of this <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object."
  syntax:
    content: "public String getQuery()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which contains the decoded query component of the current <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref>,\n         or <code>null</code> if the query is undefined."
- uid: "com.microsoft.azure.storage.StorageUri.getSecondaryUri()"
  id: "getSecondaryUri()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "getSecondaryUri()"
  nameWithType: "StorageUri.getSecondaryUri()"
  fullName: "com.microsoft.azure.storage.StorageUri.getSecondaryUri()"
  overload: "com.microsoft.azure.storage.StorageUri.getSecondaryUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the endpoint for the secondary location for the storage account."
  syntax:
    content: "public URI getSecondaryUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the secondary URI."
- uid: "com.microsoft.azure.storage.StorageUri.getUri(com.microsoft.azure.storage.StorageLocation)"
  id: "getUri(com.microsoft.azure.storage.StorageLocation)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "getUri(StorageLocation location)"
  nameWithType: "StorageUri.getUri(StorageLocation location)"
  fullName: "com.microsoft.azure.storage.StorageUri.getUri(StorageLocation location)"
  overload: "com.microsoft.azure.storage.StorageUri.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Gets the URI for a specified <xref uid=\"com.microsoft.azure.storage.StorageLocation\" data-throw-if-not-resolved=\"false\">StorageLocation</xref>."
  syntax:
    content: "public URI getUri(StorageLocation location)"
    parameters:
    - id: "location"
      type: "com.microsoft.azure.storage.StorageLocation"
      description: "The <code>StorageLocation</code> object for which to retrieve a URI."
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object for the specified <code>StorageLocation</code>."
- uid: "com.microsoft.azure.storage.StorageUri.hashCode()"
  id: "hashCode()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "StorageUri.hashCode()"
  fullName: "com.microsoft.azure.storage.StorageUri.hashCode()"
  overload: "com.microsoft.azure.storage.StorageUri.hashCode*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.microsoft.azure.storage.StorageUri.isAbsolute()"
  id: "isAbsolute()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "isAbsolute()"
  nameWithType: "StorageUri.isAbsolute()"
  fullName: "com.microsoft.azure.storage.StorageUri.isAbsolute()"
  overload: "com.microsoft.azure.storage.StorageUri.isAbsolute*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Indicates whether this <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> is absolute."
  syntax:
    content: "public boolean isAbsolute()"
    return:
      type: "boolean"
      description: "<code>true</code> if the current <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> is absolute; otherwise <code>false</code>."
- uid: "com.microsoft.azure.storage.StorageUri.toString()"
  id: "toString()"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "StorageUri.toString()"
  fullName: "com.microsoft.azure.storage.StorageUri.toString()"
  overload: "com.microsoft.azure.storage.StorageUri.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.StorageUri.validateLocationMode(com.microsoft.azure.storage.LocationMode)"
  id: "validateLocationMode(com.microsoft.azure.storage.LocationMode)"
  parent: "com.microsoft.azure.storage.StorageUri"
  langs:
  - "java"
  name: "validateLocationMode(LocationMode mode)"
  nameWithType: "StorageUri.validateLocationMode(LocationMode mode)"
  fullName: "com.microsoft.azure.storage.StorageUri.validateLocationMode(LocationMode mode)"
  overload: "com.microsoft.azure.storage.StorageUri.validateLocationMode*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Validate that a URI exists for the specified `LocationMode`."
  syntax:
    content: "public boolean validateLocationMode(LocationMode mode)"
    parameters:
    - id: "mode"
      type: "com.microsoft.azure.storage.LocationMode"
      description: "The <code>LocationMode</code> to validate."
    return:
      type: "boolean"
      description: "<code>true</code> if a URI exists for the specified mode; otherwise <code>false</code>."
references:
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.StorageUri.StorageUri*"
  name: "StorageUri"
  nameWithType: "StorageUri.StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri.StorageUri"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.StorageUri.equals*"
  name: "equals"
  nameWithType: "StorageUri.equals"
  fullName: "com.microsoft.azure.storage.StorageUri.equals"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageUri.getPrimaryUri*"
  name: "getPrimaryUri"
  nameWithType: "StorageUri.getPrimaryUri"
  fullName: "com.microsoft.azure.storage.StorageUri.getPrimaryUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageUri.getSecondaryUri*"
  name: "getSecondaryUri"
  nameWithType: "StorageUri.getSecondaryUri"
  fullName: "com.microsoft.azure.storage.StorageUri.getSecondaryUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageLocation"
  name: "StorageLocation"
  nameWithType: "StorageLocation"
  fullName: "com.microsoft.azure.storage.StorageLocation"
- uid: "com.microsoft.azure.storage.StorageUri.getUri*"
  name: "getUri"
  nameWithType: "StorageUri.getUri"
  fullName: "com.microsoft.azure.storage.StorageUri.getUri"
  package: "com.microsoft.azure.storage"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.storage.StorageUri.hashCode*"
  name: "hashCode"
  nameWithType: "StorageUri.hashCode"
  fullName: "com.microsoft.azure.storage.StorageUri.hashCode"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.StorageUri.toString*"
  name: "toString"
  nameWithType: "StorageUri.toString"
  fullName: "com.microsoft.azure.storage.StorageUri.toString"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.LocationMode"
  name: "LocationMode"
  nameWithType: "LocationMode"
  fullName: "com.microsoft.azure.storage.LocationMode"
- uid: "com.microsoft.azure.storage.StorageUri.validateLocationMode*"
  name: "validateLocationMode"
  nameWithType: "StorageUri.validateLocationMode"
  fullName: "com.microsoft.azure.storage.StorageUri.validateLocationMode"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageUri.isAbsolute*"
  name: "isAbsolute"
  nameWithType: "StorageUri.isAbsolute"
  fullName: "com.microsoft.azure.storage.StorageUri.isAbsolute"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageUri.getQuery*"
  name: "getQuery"
  nameWithType: "StorageUri.getQuery"
  fullName: "com.microsoft.azure.storage.StorageUri.getQuery"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
