### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.file.CloudFileShare"
  id: "CloudFileShare"
  parent: "com.microsoft.azure.storage.file"
  children:
  - "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.lang.String,java.lang.String,com.microsoft.azure.storage.file.CloudFileClient)"
  - "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.net.URI)"
  - "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()"
  - "com.microsoft.azure.storage.file.CloudFileShare.create()"
  - "com.microsoft.azure.storage.file.CloudFileShare.create(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(java.lang.String)"
  - "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()"
  - "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()"
  - "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.delete()"
  - "com.microsoft.azure.storage.file.CloudFileShare.delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.delete(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()"
  - "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()"
  - "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()"
  - "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.exists()"
  - "com.microsoft.azure.storage.file.CloudFileShare.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String)"
  - "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  - "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(java.lang.String)"
  - "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.getMetadata()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getName()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getProperties()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getStats()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getStats(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()"
  - "com.microsoft.azure.storage.file.CloudFileShare.getUri()"
  - "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()"
  - "com.microsoft.azure.storage.file.CloudFileShare.name"
  - "com.microsoft.azure.storage.file.CloudFileShare.properties"
  - "com.microsoft.azure.storage.file.CloudFileShare.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  - "com.microsoft.azure.storage.file.CloudFileShare.setProperties(com.microsoft.azure.storage.file.FileShareProperties)"
  - "com.microsoft.azure.storage.file.CloudFileShare.snapshotID"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions)"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()"
  - "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  langs:
  - "java"
  name: "CloudFileShare"
  nameWithType: "CloudFileShare"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare"
  type: "Class"
  package: "com.microsoft.azure.storage.file"
  summary: "Represents a share in the Microsoft Azure File service.\n\nShares hold directories, which are encapsulated as <xref uid=\"com.microsoft.azure.storage.file.CloudFileDirectory\" data-throw-if-not-resolved=\"false\">CloudFileDirectory</xref> objects, and directories hold files. Directories can also contain sub-directories."
  syntax:
    content: "public final class CloudFileShare"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(com.microsoft.azure.storage.StorageUri)"
  id: "CloudFileShare(com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "CloudFileShare(StorageUri storageUri)"
  nameWithType: "CloudFileShare.CloudFileShare(StorageUri storageUri)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(StorageUri storageUri)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `CloudFileShare` class using the specified URI."
  syntax:
    content: "public CloudFileShare(StorageUri storageUri)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the absolute URI of the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudFileShare(com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "CloudFileShare(StorageUri storageUri, StorageCredentials credentials)"
  nameWithType: "CloudFileShare.CloudFileShare(StorageUri storageUri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(StorageUri storageUri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `CloudFileShare` class using the specified StorageUri and credentials."
  syntax:
    content: "public CloudFileShare(StorageUri storageUri, StorageCredentials credentials)"
    parameters:
    - id: "storageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the absolute StorageUri of the share."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.lang.String,java.lang.String,com.microsoft.azure.storage.file.CloudFileClient)"
  id: "CloudFileShare(java.lang.String,java.lang.String,com.microsoft.azure.storage.file.CloudFileClient)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "CloudFileShare(String shareName, String snapshotID, CloudFileClient client)"
  nameWithType: "CloudFileShare.CloudFileShare(String shareName, String snapshotID, CloudFileClient client)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(String shareName, String snapshotID, CloudFileClient client)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `CloudFileShare` class using the specified name and client."
  syntax:
    content: "public CloudFileShare(String shareName, String snapshotID, CloudFileClient client)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the name of the share, which must adhere to share\n            naming rules.\n            The share name should not include any path separator characters (/).\n            Share names must be lowercase, between 3-63 characters long and must start with a letter or\n            number. Share names may contain only letters, numbers, and the dash (-) character."
    - id: "snapshotID"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the snapshot version, if applicable."
    - id: "client"
      type: "com.microsoft.azure.storage.file.CloudFileClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref> object that represents the associated service client, and that specifies the\n            endpoint for the File service."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.net.URI)"
  id: "CloudFileShare(java.net.URI)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "CloudFileShare(URI uri)"
  nameWithType: "CloudFileShare.CloudFileShare(URI uri)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(URI uri)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `CloudFileShare` class using the specified URI."
  syntax:
    content: "public CloudFileShare(URI uri)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudFileShare(java.net.URI,com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "CloudFileShare(URI uri, StorageCredentials credentials)"
  nameWithType: "CloudFileShare.CloudFileShare(URI uri, StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare(URI uri, StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  type: "Constructor"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates an instance of the `CloudFileShare` class using the specified URI and credentials."
  syntax:
    content: "public CloudFileShare(URI uri, StorageCredentials credentials)"
    parameters:
    - id: "uri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the absolute URI of the share."
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object used to authenticate access."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()"
  id: "assertNoSnapshot()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "assertNoSnapshot()"
  nameWithType: "CloudFileShare.assertNoSnapshot()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Asserts that the share is not a snapshot."
  syntax:
    content: "protected void assertNoSnapshot()"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.create()"
  id: "create()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "create()"
  nameWithType: "CloudFileShare.create()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.create()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates the share."
  syntax:
    content: "public void create()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.create(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "create(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "create(FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.create(FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.create(FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.create*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates the share using the specified options and operation context."
  syntax:
    content: "public void create(FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(java.lang.String)"
  id: "createFilePermission(java.lang.String)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createFilePermission(String permission)"
  nameWithType: "CloudFileShare.createFilePermission(String permission)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String permission)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates a file permission."
  syntax:
    content: "public String createFilePermission(String permission)"
    parameters:
    - id: "permission"
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the file permission to create."
    return:
      type: "java.lang.String"
      description: "The <code>String</code> representing the file permission key associated with the file permission created."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates a file permission."
  syntax:
    content: "public String createFilePermission(String permission, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "permission"
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the file permission to create."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "The <code>String</code> representing the file permission key associated with the file permission created."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
  - type: "java.io.IOException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()"
  id: "createIfNotExists()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createIfNotExists()"
  nameWithType: "CloudFileShare.createIfNotExists()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates the share if it does not exist."
  syntax:
    content: "public boolean createIfNotExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createIfNotExists(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createIfNotExists(FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists(FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates the share if it does not exist, using the specified request options and operation context."
  syntax:
    content: "public boolean createIfNotExists(FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request.\n            Specifying <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the share did not already exist and was created; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()"
  id: "createSnapshot()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createSnapshot()"
  nameWithType: "CloudFileShare.createSnapshot()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates a snapshot of the share."
  syntax:
    content: "public final CloudFileShare createSnapshot()"
    return:
      type: "com.microsoft.azure.storage.file.CloudFileShare"
      description: "A <code>CloudFileShare</code> object that represents the snapshot of the share."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createSnapshot(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createSnapshot(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.createSnapshot(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates a snapshot of the file share using the specified request options and operation context."
  syntax:
    content: "public final CloudFileShare createSnapshot(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.file.CloudFileShare"
      description: "A <code>CloudFileShare</code> object that represents the snapshot of the file share."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "createSnapshot(java.util.HashMap<java.lang.String,java.lang.String>,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Creates a snapshot of the file share using the specified request options and operation context."
  syntax:
    content: "public final CloudFileShare createSnapshot(HashMap<String,String> metadata, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A collection of name-value pairs defining the metadata of the snapshot, or null."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the file share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.file.CloudFileShare"
      description: "A <code>CloudFileShare</code> object that represents the snapshot of the file share."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.delete()"
  id: "delete()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "CloudFileShare.delete()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.delete()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share."
  syntax:
    content: "public void delete()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share using the specified request options and operation context."
  syntax:
    content: "public void delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.delete(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "delete(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.delete*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share using the specified snapshot and request options, and operation context.\n\nA share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid=\"com.microsoft.azure.storage.file.DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS\" data-throw-if-not-resolved=\"false\">DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the `deleteSnapshotsOption` parameter to include the snapshots when deleting the base share."
  syntax:
    content: "public void delete(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "deleteSnapshotsOption"
      type: "com.microsoft.azure.storage.file.DeleteShareSnapshotsOption"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.DeleteShareSnapshotsOption\" data-throw-if-not-resolved=\"false\">DeleteShareSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the share\n            and its snapshots."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()"
  id: "deleteIfExists()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "deleteIfExists()"
  nameWithType: "CloudFileShare.deleteIfExists()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share if it exists."
  syntax:
    content: "public boolean deleteIfExists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the share existed and was deleted; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share if it exists using the specified request options and operation context."
  syntax:
    content: "public boolean deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the share existed and was deleted; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "deleteIfExists(com.microsoft.azure.storage.file.DeleteShareSnapshotsOption,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Deletes the share if it exists, using the specified snapshot and request options, and operation context.\n\nA share that has snapshots cannot be deleted unless the snapshots are also deleted. If a share has snapshots, use the <xref uid=\"com.microsoft.azure.storage.file.DeleteShareSnapshotsOption.INCLUDE_SNAPSHOTS\" data-throw-if-not-resolved=\"false\">DeleteShareSnapshotsOption#INCLUDE_SNAPSHOTS</xref> value in the `deleteSnapshotsOption` parameter to include the snapshots when deleting the base share."
  syntax:
    content: "public boolean deleteIfExists(DeleteShareSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "deleteSnapshotsOption"
      type: "com.microsoft.azure.storage.file.DeleteShareSnapshotsOption"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.DeleteShareSnapshotsOption\" data-throw-if-not-resolved=\"false\">DeleteShareSnapshotsOption</xref> object that indicates whether to delete only snapshots, or the share\n            and its snapshots."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the share existed and was deleted; otherwise, <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()"
  id: "downloadAttributes()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "downloadAttributes()"
  nameWithType: "CloudFileShare.downloadAttributes()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Downloads the share's attributes, which consist of metadata and properties."
  syntax:
    content: "public void downloadAttributes()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadAttributes(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Downloads the share's attributes, which consist of metadata and properties, using the specified request options and operation context."
  syntax:
    content: "public void downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()"
  id: "downloadPermissions()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "downloadPermissions()"
  nameWithType: "CloudFileShare.downloadPermissions()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Downloads the permission settings for the share."
  syntax:
    content: "public FileSharePermissions downloadPermissions()"
    return:
      type: "com.microsoft.azure.storage.file.FileSharePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileSharePermissions\" data-throw-if-not-resolved=\"false\">FileSharePermissions</xref> object that represents the share's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "downloadPermissions(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Downloads the permissions settings for the share using the specified request options and operation context."
  syntax:
    content: "public FileSharePermissions downloadPermissions(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.file.FileSharePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileSharePermissions\" data-throw-if-not-resolved=\"false\">FileSharePermissions</xref> object that represents the share's permissions."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.exists()"
  id: "exists()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "exists()"
  nameWithType: "CloudFileShare.exists()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.exists()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns a value that indicates whether the share exists."
  syntax:
    content: "public boolean exists()"
    return:
      type: "boolean"
      description: "<code>true</code> if the share exists, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "exists(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "exists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.exists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.exists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.exists*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns a value that indicates whether the share exists, using the specified request options and operation context."
  syntax:
    content: "public boolean exists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "boolean"
      description: "<code>true</code> if the share exists, otherwise <code>false</code>."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier)"
  nameWithType: "CloudFileShare.generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns a shared access signature for the share. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.file.SharedAccessFilePolicy"
      description: "An <xref uid=\"com.microsoft.azure.storage.file.SharedAccessFilePolicy\" data-throw-if-not-resolved=\"false\">SharedAccessFilePolicy</xref> object that represents the access policy for the\n            shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the share-level access policy."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents a shared access signature for the share."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.file.SharedAccessFilePolicy,java.lang.String,com.microsoft.azure.storage.IPRange,com.microsoft.azure.storage.SharedAccessProtocols)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  nameWithType: "CloudFileShare.generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns a shared access signature for the share. Note this does not contain the leading \"?\"."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessFilePolicy policy, String groupPolicyIdentifier, IPRange ipRange, SharedAccessProtocols protocols)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.file.SharedAccessFilePolicy"
      description: "An <xref uid=\"com.microsoft.azure.storage.file.SharedAccessFilePolicy\" data-throw-if-not-resolved=\"false\">SharedAccessFilePolicy</xref> object that represents the access policy for the\n            shared access signature."
    - id: "groupPolicyIdentifier"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the share-level access policy."
    - id: "ipRange"
      type: "com.microsoft.azure.storage.IPRange"
      description: "A <xref uid=\"com.microsoft.azure.storage.IPRange\" data-throw-if-not-resolved=\"false\">IPRange</xref> object containing the range of allowed IP addresses."
    - id: "protocols"
      type: "com.microsoft.azure.storage.SharedAccessProtocols"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessProtocols\" data-throw-if-not-resolved=\"false\">SharedAccessProtocols</xref> representing the allowed Internet protocols."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents a shared access signature for the share."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(java.lang.String)"
  id: "getFilePermission(java.lang.String)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getFilePermission(String filePermissionKey)"
  nameWithType: "CloudFileShare.getFilePermission(String filePermissionKey)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String filePermissionKey)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Gets the file permission associated with a file permission key."
  syntax:
    content: "public String getFilePermission(String filePermissionKey)"
    parameters:
    - id: "filePermissionKey"
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the file permission key."
    return:
      type: "java.lang.String"
      description: "The <code>String</code> representing the file permission associated with the file permission key."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "getFilePermission(java.lang.String,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Gets the file permission associated with a file permission key."
  syntax:
    content: "public String getFilePermission(String filePermissionKey, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "filePermissionKey"
      type: "java.lang.String"
      description: "A <code>String</code> object that represents the file permission key."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "java.lang.String"
      description: "The <code>String</code> representing the file permission associated with the file permission key."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getMetadata()"
  id: "getMetadata()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getMetadata()"
  nameWithType: "CloudFileShare.getMetadata()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getMetadata()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the metadata for the share. This value is initialized with the metadata from the share by a call to <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*\" data-throw-if-not-resolved=\"false\">#downloadAttributes</xref>, and is set on the share with a call to <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref>."
  syntax:
    content: "public HashMap<String,String> getMetadata()"
    return:
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata for the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getName()"
  id: "getName()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CloudFileShare.getName()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getName()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getName*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the name of the share."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the name of the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getProperties()"
  id: "getProperties()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "CloudFileShare.getProperties()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getProperties()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the properties for the share."
  syntax:
    content: "public FileShareProperties getProperties()"
    return:
      type: "com.microsoft.azure.storage.file.FileShareProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileShareProperties\" data-throw-if-not-resolved=\"false\">FileShareProperties</xref> object that represents the properties for the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()"
  id: "getQualifiedUri()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getQualifiedUri()"
  nameWithType: "CloudFileShare.getQualifiedUri()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the snapshot or shared access signature qualified URI for this share."
  syntax:
    content: "public final URI getQualifiedUri()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the snapshot or shared access signature."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()"
  id: "getRootDirectoryReference()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getRootDirectoryReference()"
  nameWithType: "CloudFileShare.getRootDirectoryReference()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns a reference to a <xref uid=\"com.microsoft.azure.storage.file.CloudFileDirectory\" data-throw-if-not-resolved=\"false\">CloudFileDirectory</xref> object that represents the root file directory within this share."
  syntax:
    content: "public CloudFileDirectory getRootDirectoryReference()"
    return:
      type: "com.microsoft.azure.storage.file.CloudFileDirectory"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.CloudFileDirectory\" data-throw-if-not-resolved=\"false\">CloudFileDirectory</xref> reference to the root directory for this share."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
  - type: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()"
  id: "getServiceClient()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getServiceClient()"
  nameWithType: "CloudFileShare.getServiceClient()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the File service client associated with this share."
  syntax:
    content: "public CloudFileClient getServiceClient()"
    return:
      type: "com.microsoft.azure.storage.file.CloudFileClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref> object that represents the service client associated with this share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()"
  id: "getSnapshot()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getSnapshot()"
  nameWithType: "CloudFileShare.getSnapshot()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the snapshotID for this share."
  syntax:
    content: "public final String getSnapshot()"
    return:
      type: "java.lang.String"
      description: "The snapshotID as a string for this share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getStats()"
  id: "getStats()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getStats()"
  nameWithType: "CloudFileShare.getStats()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getStats()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getStats*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Queries the service for this share's <xref uid=\"com.microsoft.azure.storage.file.ShareStats\" data-throw-if-not-resolved=\"false\">ShareStats</xref>."
  syntax:
    content: "public ShareStats getStats()"
    return:
      type: "com.microsoft.azure.storage.file.ShareStats"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.ShareStats\" data-throw-if-not-resolved=\"false\">ShareStats</xref> object for the given storage service."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getStats(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "getStats(com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getStats(FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getStats(FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getStats*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Queries the service for this share's <xref uid=\"com.microsoft.azure.storage.file.ShareStats\" data-throw-if-not-resolved=\"false\">ShareStats</xref>."
  syntax:
    content: "public ShareStats getStats(FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client\n            (<xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
    return:
      type: "com.microsoft.azure.storage.file.ShareStats"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.ShareStats\" data-throw-if-not-resolved=\"false\">ShareStats</xref> object for the given storage service."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()"
  id: "getStorageUri()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getStorageUri()"
  nameWithType: "CloudFileShare.getStorageUri()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the list of URIs for all locations."
  syntax:
    content: "public StorageUri getStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object which represents the list of URIs for all locations."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getUri()"
  id: "getUri()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "getUri()"
  nameWithType: "CloudFileShare.getUri()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getUri()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.getUri*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Returns the URI for this share."
  syntax:
    content: "public URI getUri()"
    return:
      type: "java.net.URI"
      description: "The absolute URI to the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()"
  id: "isSnapshot()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "isSnapshot()"
  nameWithType: "CloudFileShare.isSnapshot()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Indicates whether this share is a snapshot."
  syntax:
    content: "public final boolean isSnapshot()"
    return:
      type: "boolean"
      description: "<code>true</code> if the share is a snapshot, otherwise <code>false</code>."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.name"
  id: "name"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "name"
  nameWithType: "CloudFileShare.name"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.name"
  type: "Field"
  package: "com.microsoft.azure.storage.file"
  summary: "Holds the name of the share."
  syntax:
    content: " String name"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.properties"
  id: "properties"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "properties"
  nameWithType: "CloudFileShare.properties"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.properties"
  type: "Field"
  package: "com.microsoft.azure.storage.file"
  summary: "Holds the share properties."
  syntax:
    content: " FileShareProperties properties"
    return:
      type: "com.microsoft.azure.storage.file.FileShareProperties"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.HashMap<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "setMetadata(HashMap<String,String> metadata)"
  nameWithType: "CloudFileShare.setMetadata(HashMap<String,String> metadata)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.setMetadata(HashMap<String,String> metadata)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.setMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Sets the metadata collection of name-value pairs to be set on the share with an <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call. This collection will overwrite any existing share metadata. If this is set to an empty collection, the share metadata will be cleared on an <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*\" data-throw-if-not-resolved=\"false\">#uploadMetadata</xref> call."
  syntax:
    content: "public void setMetadata(HashMap<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.HashMap<java.lang.String,java.lang.String>"
      description: "A <code>java.util.HashMap</code> object that represents the metadata being assigned to the share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.setProperties(com.microsoft.azure.storage.file.FileShareProperties)"
  id: "setProperties(com.microsoft.azure.storage.file.FileShareProperties)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "setProperties(FileShareProperties properties)"
  nameWithType: "CloudFileShare.setProperties(FileShareProperties properties)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.setProperties(FileShareProperties properties)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.setProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Sets the properties for the share."
  syntax:
    content: "public void setProperties(FileShareProperties properties)"
    parameters:
    - id: "properties"
      type: "com.microsoft.azure.storage.file.FileShareProperties"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileShareProperties\" data-throw-if-not-resolved=\"false\">FileShareProperties</xref> object that represents the properties being assigned to the\n            share."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.snapshotID"
  id: "snapshotID"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "snapshotID"
  nameWithType: "CloudFileShare.snapshotID"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.snapshotID"
  type: "Field"
  package: "com.microsoft.azure.storage.file"
  summary: "Holds the snapshot ID."
  syntax:
    content: " String snapshotID"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()"
  id: "uploadMetadata()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadMetadata()"
  nameWithType: "CloudFileShare.uploadMetadata()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Uploads the share's metadata."
  syntax:
    content: "public void uploadMetadata()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadMetadata(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Uploads the share's metadata using the specified request options and operation context."
  syntax:
    content: "public void uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions)"
  id: "uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadPermissions(FileSharePermissions permissions)"
  nameWithType: "CloudFileShare.uploadPermissions(FileSharePermissions permissions)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(FileSharePermissions permissions)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Uploads the share's permissions."
  syntax:
    content: "public void uploadPermissions(FileSharePermissions permissions)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.file.FileSharePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileSharePermissions\" data-throw-if-not-resolved=\"false\">FileSharePermissions</xref> object that represents the permissions to upload."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadPermissions(com.microsoft.azure.storage.file.FileSharePermissions,com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadPermissions(FileSharePermissions permissions, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.uploadPermissions(FileSharePermissions permissions, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions(FileSharePermissions permissions, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Uploads the share's permissions using the specified request options and operation context."
  syntax:
    content: "public void uploadPermissions(FileSharePermissions permissions, AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "permissions"
      type: "com.microsoft.azure.storage.file.FileSharePermissions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileSharePermissions\" data-throw-if-not-resolved=\"false\">FileSharePermissions</xref> object that represents the permissions to upload."
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()"
  id: "uploadProperties()"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadProperties()"
  nameWithType: "CloudFileShare.uploadProperties()"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties()"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Updates the share's properties on the storage service.\n\nUse <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudFileShare#downloadAttributes</xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadProperties()"
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  id: "uploadProperties(com.microsoft.azure.storage.AccessCondition,com.microsoft.azure.storage.file.FileRequestOptions,com.microsoft.azure.storage.OperationContext)"
  parent: "com.microsoft.azure.storage.file.CloudFileShare"
  langs:
  - "java"
  name: "uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  nameWithType: "CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
  overload: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties*"
  type: "Method"
  package: "com.microsoft.azure.storage.file"
  summary: "Updates the share's properties using the request options, and operation context.\n\nUse <xref uid=\"com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*\" data-throw-if-not-resolved=\"false\">CloudFileShare#downloadAttributes</xref> to retrieve the latest values for the share's properties and metadata from the Microsoft Azure storage service."
  syntax:
    content: "public final void uploadProperties(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)"
    parameters:
    - id: "accessCondition"
      type: "com.microsoft.azure.storage.AccessCondition"
      description: "An <xref uid=\"com.microsoft.azure.storage.AccessCondition\" data-throw-if-not-resolved=\"false\">AccessCondition</xref> object that represents the access conditions for the share."
    - id: "options"
      type: "com.microsoft.azure.storage.file.FileRequestOptions"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.FileRequestOptions\" data-throw-if-not-resolved=\"false\">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying\n            <code>null</code> will use the default request options from the associated service client (\n            <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref>)."
    - id: "opContext"
      type: "com.microsoft.azure.storage.OperationContext"
      description: "An <xref uid=\"com.microsoft.azure.storage.OperationContext\" data-throw-if-not-resolved=\"false\">OperationContext</xref> object that represents the context for the current operation. This object\n            is used to track requests to the storage service, and to provide additional runtime information about\n            the operation."
  exceptions:
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.storage.file.CloudFileClient"
  name: "CloudFileClient"
  nameWithType: "CloudFileClient"
  fullName: "com.microsoft.azure.storage.file.CloudFileClient"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare*"
  name: "CloudFileShare"
  nameWithType: "CloudFileShare.CloudFileShare"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.CloudFileShare"
  package: "com.microsoft.azure.storage.file"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.create*"
  name: "create"
  nameWithType: "CloudFileShare.create"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.create"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileRequestOptions"
  name: "FileRequestOptions"
  nameWithType: "FileRequestOptions"
  fullName: "com.microsoft.azure.storage.file.FileRequestOptions"
- uid: "com.microsoft.azure.storage.OperationContext"
  name: "OperationContext"
  nameWithType: "OperationContext"
  fullName: "com.microsoft.azure.storage.OperationContext"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists*"
  name: "createIfNotExists"
  nameWithType: "CloudFileShare.createIfNotExists"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createIfNotExists"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.delete*"
  name: "delete"
  nameWithType: "CloudFileShare.delete"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.delete"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.AccessCondition"
  name: "AccessCondition"
  nameWithType: "AccessCondition"
  fullName: "com.microsoft.azure.storage.AccessCondition"
- uid: "com.microsoft.azure.storage.file.DeleteShareSnapshotsOption"
  name: "DeleteShareSnapshotsOption"
  nameWithType: "DeleteShareSnapshotsOption"
  fullName: "com.microsoft.azure.storage.file.DeleteShareSnapshotsOption"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists*"
  name: "deleteIfExists"
  nameWithType: "CloudFileShare.deleteIfExists"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.deleteIfExists"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes*"
  name: "downloadAttributes"
  nameWithType: "CloudFileShare.downloadAttributes"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadAttributes"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileSharePermissions"
  name: "FileSharePermissions"
  nameWithType: "FileSharePermissions"
  fullName: "com.microsoft.azure.storage.file.FileSharePermissions"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions*"
  name: "downloadPermissions"
  nameWithType: "CloudFileShare.downloadPermissions"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.downloadPermissions"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot*"
  name: "createSnapshot"
  nameWithType: "CloudFileShare.createSnapshot"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createSnapshot"
  package: "com.microsoft.azure.storage.file"
- uid: "java.util.HashMap<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.HashMap"
    name: "HashMap"
    fullName: "java.util.HashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.storage.file.ShareStats"
  name: "ShareStats"
  nameWithType: "ShareStats"
  fullName: "com.microsoft.azure.storage.file.ShareStats"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getStats*"
  name: "getStats"
  nameWithType: "CloudFileShare.getStats"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getStats"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.exists*"
  name: "exists"
  nameWithType: "CloudFileShare.exists"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.exists"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot*"
  name: "assertNoSnapshot"
  nameWithType: "CloudFileShare.assertNoSnapshot"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.assertNoSnapshot"
  package: "com.microsoft.azure.storage.file"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.file.SharedAccessFilePolicy"
  name: "SharedAccessFilePolicy"
  nameWithType: "SharedAccessFilePolicy"
  fullName: "com.microsoft.azure.storage.file.SharedAccessFilePolicy"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudFileShare.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.IPRange"
  name: "IPRange"
  nameWithType: "IPRange"
  fullName: "com.microsoft.azure.storage.IPRange"
- uid: "com.microsoft.azure.storage.SharedAccessProtocols"
  name: "SharedAccessProtocols"
  nameWithType: "SharedAccessProtocols"
  fullName: "com.microsoft.azure.storage.SharedAccessProtocols"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata*"
  name: "uploadMetadata"
  nameWithType: "CloudFileShare.uploadMetadata"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadMetadata"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties*"
  name: "uploadProperties"
  nameWithType: "CloudFileShare.uploadProperties"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadProperties"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions*"
  name: "uploadPermissions"
  nameWithType: "CloudFileShare.uploadPermissions"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.uploadPermissions"
  package: "com.microsoft.azure.storage.file"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission*"
  name: "createFilePermission"
  nameWithType: "CloudFileShare.createFilePermission"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.createFilePermission"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission*"
  name: "getFilePermission"
  nameWithType: "CloudFileShare.getFilePermission"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getFilePermission"
  package: "com.microsoft.azure.storage.file"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "com.microsoft.azure.storage.file.CloudFileDirectory"
  name: "CloudFileDirectory"
  nameWithType: "CloudFileDirectory"
  fullName: "com.microsoft.azure.storage.file.CloudFileDirectory"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference*"
  name: "getRootDirectoryReference"
  nameWithType: "CloudFileShare.getRootDirectoryReference"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getRootDirectoryReference"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient*"
  name: "getServiceClient"
  nameWithType: "CloudFileShare.getServiceClient"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getServiceClient"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getUri*"
  name: "getUri"
  nameWithType: "CloudFileShare.getUri"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getUri"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot*"
  name: "getSnapshot"
  nameWithType: "CloudFileShare.getSnapshot"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getSnapshot"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot*"
  name: "isSnapshot"
  nameWithType: "CloudFileShare.isSnapshot"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.isSnapshot"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri*"
  name: "getStorageUri"
  nameWithType: "CloudFileShare.getStorageUri"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getStorageUri"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri*"
  name: "getQualifiedUri"
  nameWithType: "CloudFileShare.getQualifiedUri"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getQualifiedUri"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getName*"
  name: "getName"
  nameWithType: "CloudFileShare.getName"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getName"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getMetadata*"
  name: "getMetadata"
  nameWithType: "CloudFileShare.getMetadata"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getMetadata"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.FileShareProperties"
  name: "FileShareProperties"
  nameWithType: "FileShareProperties"
  fullName: "com.microsoft.azure.storage.file.FileShareProperties"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.getProperties*"
  name: "getProperties"
  nameWithType: "CloudFileShare.getProperties"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.getProperties"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.setMetadata*"
  name: "setMetadata"
  nameWithType: "CloudFileShare.setMetadata"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.setMetadata"
  package: "com.microsoft.azure.storage.file"
- uid: "com.microsoft.azure.storage.file.CloudFileShare.setProperties*"
  name: "setProperties"
  nameWithType: "CloudFileShare.setProperties"
  fullName: "com.microsoft.azure.storage.file.CloudFileShare.setProperties"
  package: "com.microsoft.azure.storage.file"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.HashMap"
  name: "HashMap"
  nameWithType: "HashMap"
  fullName: "java.util.HashMap"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
