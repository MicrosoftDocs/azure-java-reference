### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.storage.CloudStorageAccount"
  id: "CloudStorageAccount"
  parent: "com.microsoft.azure.storage"
  children:
  - "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_TOKEN_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.BLOB_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI)"
  - "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI,java.net.URI)"
  - "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.TABLE_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME"
  - "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient()"
  - "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient()"
  - "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient()"
  - "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient()"
  - "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient()"
  - "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature(com.microsoft.azure.storage.SharedAccessAccountPolicy)"
  - "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getCredentials()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount(java.net.URI)"
  - "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint()"
  - "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri()"
  - "com.microsoft.azure.storage.CloudStorageAccount.parse(java.lang.String)"
  - "com.microsoft.azure.storage.CloudStorageAccount.setCredentials(com.microsoft.azure.storage.StorageCredentials)"
  - "com.microsoft.azure.storage.CloudStorageAccount.toString()"
  - "com.microsoft.azure.storage.CloudStorageAccount.toString(boolean)"
  langs:
  - "java"
  name: "CloudStorageAccount"
  nameWithType: "CloudStorageAccount"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount"
  type: "Class"
  package: "com.microsoft.azure.storage"
  summary: "Represents a Microsoft Azure storage account."
  syntax:
    content: "public final class CloudStorageAccount"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME"
  id: "ACCOUNT_KEY_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "ACCOUNT_KEY_NAME"
  nameWithType: "CloudStorageAccount.ACCOUNT_KEY_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_KEY_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for the account key."
  syntax:
    content: "protected static final String ACCOUNT_KEY_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME"
  id: "ACCOUNT_NAME_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "ACCOUNT_NAME_NAME"
  nameWithType: "CloudStorageAccount.ACCOUNT_NAME_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_NAME_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for the account name."
  syntax:
    content: "protected static final String ACCOUNT_NAME_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_TOKEN_NAME"
  id: "ACCOUNT_TOKEN_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "ACCOUNT_TOKEN_NAME"
  nameWithType: "CloudStorageAccount.ACCOUNT_TOKEN_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.ACCOUNT_TOKEN_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for the token credential."
  syntax:
    content: "protected static final String ACCOUNT_TOKEN_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.BLOB_ENDPOINT_NAME"
  id: "BLOB_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "BLOB_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.BLOB_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.BLOB_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom blob storage endpoint."
  syntax:
    content: "protected static final String BLOB_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME"
  id: "BLOB_SECONDARY_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "BLOB_SECONDARY_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.BLOB_SECONDARY_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom blob storage secondary endpoint."
  syntax:
    content: "protected static final String BLOB_SECONDARY_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials.\n\nWith this constructor, the `CloudStorageAccount` object is constructed using the default HTTP storage service endpoints. The default HTTP storage service endpoints are `http://myaccount.blob.core.windows.net`, `http://myaccount.queue.core.windows.net`, `http://myaccount.table.core.windows.net`, and `http://myaccount.file.core.windows.net`, where `myaccount` is the name of your storage account.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials and the default service endpoints, using HTTP or HTTPS as specified.\n\nWith this constructor, the `CloudStorageAccount` object is constructed using the default storage service endpoints. The default storage service endpoints are: `[http|https]://myaccount.blob.core.windows.net`; `[http|https]://myaccount.queue.core.windows.net`; `[http|https]://myaccount.table.core.windows.net`; and `[http|https]://myaccount.file.core.windows.net`, where `myaccount` is the name of your storage account. Access to the cloud storage account may be via HTTP or HTTPS, as specified by the `useHttps` parameter.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "useHttps"
      type: "boolean"
      description: "<code>true</code> to use HTTPS to connect to the storage service endpoints;\n            otherwise, <code>false</code>."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials.\n\nWith this constructor, the `CloudStorageAccount` object is constructed using the given HTTP storage service endpoint suffix (if any, otherwise the default is used). The credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "useHttps"
      type: "boolean"
      description: "<code>true</code> to use HTTPS to connect to the storage service endpoints;\n            otherwise, <code>false</code>."
    - id: "endpointSuffix"
      type: "java.lang.String"
      description: "A String that represents the endpointSuffix to use, if any."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String,java.lang.String)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,boolean,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix, String accountName)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix, String accountName)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix, String accountName)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials.\n\nWith this constructor, the `CloudStorageAccount` object is constructed using the given HTTP storage service endpoint suffix (if any, otherwise the default is used). The credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, boolean useHttps, String endpointSuffix, String accountName)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "useHttps"
      type: "boolean"
      description: "<code>true</code> to use HTTPS to connect to the storage service endpoints;\n            otherwise, <code>false</code>."
    - id: "endpointSuffix"
      type: "java.lang.String"
      description: "A String that represents the endpointSuffix to use, if any."
    - id: "accountName"
      type: "java.lang.String"
      description: "A <code>String</code> that contains the account name.  This will be used in place of a\n            <code>null</code> <xref uid=\"com.microsoft.azure.storage.StorageCredentials.getAccountName()\" data-throw-if-not-resolved=\"false\">StorageCredentials#getAccountName()</xref>, but the two must match if\n            both are not <code>null</code>."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials and service endpoints.\n\nUse this constructor to construct a `CloudStorageAccount` object using custom endpoints, in the case where you've configured a custom domain name for your storage account.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "blobStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Blob service endpoint."
    - id: "queueStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Queue service endpoint."
    - id: "tableStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Table service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri,com.microsoft.azure.storage.StorageUri)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri, StorageUri fileStorageUri)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri, StorageUri fileStorageUri)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri, StorageUri fileStorageUri)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials and service endpoints.\n\nUse this constructor to construct a `CloudStorageAccount` object using custom endpoints, in the case where you've configured a custom domain name for your storage account.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri, StorageUri fileStorageUri)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "blobStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Blob service endpoint."
    - id: "queueStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Queue service endpoint."
    - id: "tableStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Table service endpoint."
    - id: "fileStorageUri"
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the File service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials and service endpoints.\n\nUse this constructor to construct a `CloudStorageAccount` object using custom endpoints, in the case where you've configured a custom domain name for your storage account.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "blobEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Blob service endpoint."
    - id: "queueEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Queue service endpoint."
    - id: "tableEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Table service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI,java.net.URI)"
  id: "CloudStorageAccount(com.microsoft.azure.storage.StorageCredentials,java.net.URI,java.net.URI,java.net.URI,java.net.URI)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint, URI fileEndpoint)"
  nameWithType: "CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint, URI fileEndpoint)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint, URI fileEndpoint)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  type: "Constructor"
  package: "com.microsoft.azure.storage"
  summary: "Creates an instance of the `CloudStorageAccount` class using the specified account credentials and service endpoints.\n\nUse this constructor to construct a `CloudStorageAccount` object using custom endpoints, in the case where you've configured a custom domain name for your storage account.\n\nThe credentials provided when constructing the `CloudStorageAccount` object are used to authenticate all further requests against resources that are accessed via the `CloudStorageAccount` object or a client object created from it. A client object may be a <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> object."
  syntax:
    content: "public CloudStorageAccount(StorageCredentials storageCredentials, URI blobEndpoint, URI queueEndpoint, URI tableEndpoint, URI fileEndpoint)"
    parameters:
    - id: "storageCredentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the storage credentials\n            to use to authenticate this account."
    - id: "blobEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Blob service endpoint."
    - id: "queueEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Queue service endpoint."
    - id: "tableEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Table service endpoint."
    - id: "fileEndpoint"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the File service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_ENDPOINT_NAME"
  id: "QUEUE_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "QUEUE_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.QUEUE_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom queue endpoint."
  syntax:
    content: "protected static final String QUEUE_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME"
  id: "QUEUE_SECONDARY_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "QUEUE_SECONDARY_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.QUEUE_SECONDARY_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom queue secondary endpoint."
  syntax:
    content: "protected static final String QUEUE_SECONDARY_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME"
  id: "SHARED_ACCESS_SIGNATURE_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "SHARED_ACCESS_SIGNATURE_NAME"
  nameWithType: "CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.SHARED_ACCESS_SIGNATURE_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a shared access key."
  syntax:
    content: "protected static final String SHARED_ACCESS_SIGNATURE_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.TABLE_ENDPOINT_NAME"
  id: "TABLE_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "TABLE_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.TABLE_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.TABLE_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom table storage endpoint."
  syntax:
    content: "protected static final String TABLE_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME"
  id: "TABLE_SECONDARY_ENDPOINT_NAME"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "TABLE_SECONDARY_ENDPOINT_NAME"
  nameWithType: "CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.TABLE_SECONDARY_ENDPOINT_NAME"
  type: "Field"
  package: "com.microsoft.azure.storage"
  summary: "Represents the setting name for a custom table storage secondary endpoint."
  syntax:
    content: "protected static final String TABLE_SECONDARY_ENDPOINT_NAME"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient()"
  id: "createCloudAnalyticsClient()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "createCloudAnalyticsClient()"
  nameWithType: "CloudStorageAccount.createCloudAnalyticsClient()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Creates a new Analytics service client."
  syntax:
    content: "public CloudAnalyticsClient createCloudAnalyticsClient()"
    return:
      type: "com.microsoft.azure.storage.analytics.CloudAnalyticsClient"
      description: "An analytics client object that uses the Blob and Table service endpoints."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient()"
  id: "createCloudBlobClient()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "createCloudBlobClient()"
  nameWithType: "CloudStorageAccount.createCloudBlobClient()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Creates a new Blob service client."
  syntax:
    content: "public CloudBlobClient createCloudBlobClient()"
    return:
      type: "com.microsoft.azure.storage.blob.CloudBlobClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\">CloudBlobClient</xref> that represents the cloud Blob client."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient()"
  id: "createCloudFileClient()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "createCloudFileClient()"
  nameWithType: "CloudStorageAccount.createCloudFileClient()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Creates a new File service client."
  syntax:
    content: "public CloudFileClient createCloudFileClient()"
    return:
      type: "com.microsoft.azure.storage.file.CloudFileClient"
      description: "A <xref uid=\"com.microsoft.azure.storage.file.CloudFileClient\" data-throw-if-not-resolved=\"false\">CloudFileClient</xref> that represents the cloud File client."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient()"
  id: "createCloudQueueClient()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "createCloudQueueClient()"
  nameWithType: "CloudStorageAccount.createCloudQueueClient()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Creates a new Queue service client."
  syntax:
    content: "public CloudQueueClient createCloudQueueClient()"
    return:
      type: "com.microsoft.azure.storage.queue.CloudQueueClient"
      description: "A client object that uses the Queue service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient()"
  id: "createCloudTableClient()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "createCloudTableClient()"
  nameWithType: "CloudStorageAccount.createCloudTableClient()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Creates a new Table service client."
  syntax:
    content: "public CloudTableClient createCloudTableClient()"
    return:
      type: "com.microsoft.azure.storage.table.CloudTableClient"
      description: "A client object that uses the Table service endpoint."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature(com.microsoft.azure.storage.SharedAccessAccountPolicy)"
  id: "generateSharedAccessSignature(com.microsoft.azure.storage.SharedAccessAccountPolicy)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "generateSharedAccessSignature(SharedAccessAccountPolicy policy)"
  nameWithType: "CloudStorageAccount.generateSharedAccessSignature(SharedAccessAccountPolicy policy)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature(SharedAccessAccountPolicy policy)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a shared access signature for the account."
  syntax:
    content: "public String generateSharedAccessSignature(SharedAccessAccountPolicy policy)"
    parameters:
    - id: "policy"
      type: "com.microsoft.azure.storage.SharedAccessAccountPolicy"
      description: "A <xref uid=\"com.microsoft.azure.storage.SharedAccessAccountPolicy\" data-throw-if-not-resolved=\"false\">SharedAccessAccountPolicy</xref> specifying the access policy for the shared access signature."
    return:
      type: "java.lang.String"
      description: "The query string returned includes the leading question mark."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "If a storage service error occurred."
  - type: "com.microsoft.azure.storage.StorageException"
    description: "If a storage service error occurred."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint()"
  id: "getBlobEndpoint()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getBlobEndpoint()"
  nameWithType: "CloudStorageAccount.getBlobEndpoint()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Blob service for the storage account. This method is not supported when using shared access signature credentials."
  syntax:
    content: "public URI getBlobEndpoint()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the Blob endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri()"
  id: "getBlobStorageUri()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getBlobStorageUri()"
  nameWithType: "CloudStorageAccount.getBlobStorageUri()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Blob service for the storage account. This method is not supported when using shared access signature credentials."
  syntax:
    content: "public StorageUri getBlobStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Blob endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getCredentials()"
  id: "getCredentials()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getCredentials()"
  nameWithType: "CloudStorageAccount.getCredentials()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getCredentials()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getCredentials*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the credentials for the storage account."
  syntax:
    content: "public StorageCredentials getCredentials()"
    return:
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageCredentials\" data-throw-if-not-resolved=\"false\">StorageCredentials</xref> object that represents the credentials for this storage account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount()"
  id: "getDevelopmentStorageAccount()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getDevelopmentStorageAccount()"
  nameWithType: "CloudStorageAccount.getDevelopmentStorageAccount()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\">CloudStorageAccount</xref> object that represents the development storage credentials. Secondary endpoints are enabled by default."
  syntax:
    content: "public static CloudStorageAccount getDevelopmentStorageAccount()"
    return:
      type: "com.microsoft.azure.storage.CloudStorageAccount"
      description: "A <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\">CloudStorageAccount</xref> object for the development storage credentials."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount(java.net.URI)"
  id: "getDevelopmentStorageAccount(java.net.URI)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getDevelopmentStorageAccount(URI proxyUri)"
  nameWithType: "CloudStorageAccount.getDevelopmentStorageAccount(URI proxyUri)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount(URI proxyUri)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\">CloudStorageAccount</xref> object that represents the development storage credentials, using the specified proxy URI. Secondary endpoints are enabled by default."
  syntax:
    content: "public static CloudStorageAccount getDevelopmentStorageAccount(URI proxyUri)"
    parameters:
    - id: "proxyUri"
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the proxy endpoint to use. Specifying\n            <code>null</code> will use the default <code>http://127.0.0.1</code>."
    return:
      type: "com.microsoft.azure.storage.CloudStorageAccount"
      description: "A <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\">CloudStorageAccount</xref> object for the development storage credentials."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If the resource URI is invalid."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix()"
  id: "getEndpointSuffix()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getEndpointSuffix()"
  nameWithType: "CloudStorageAccount.getEndpointSuffix()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "If an endpoint suffix was specified, return it"
  syntax:
    content: "public String getEndpointSuffix()"
    return:
      type: "java.lang.String"
      description: "the endpoint suffix"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint()"
  id: "getFileEndpoint()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getFileEndpoint()"
  nameWithType: "CloudStorageAccount.getFileEndpoint()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the File service for the storage account. This method is not supported when using shared access signature credentials."
  syntax:
    content: "public URI getFileEndpoint()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the File endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri()"
  id: "getFileStorageUri()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getFileStorageUri()"
  nameWithType: "CloudStorageAccount.getFileStorageUri()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the File service for the storage account. This method is not supported when using shared access signature credentials."
  syntax:
    content: "public StorageUri getFileStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the File endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint()"
  id: "getQueueEndpoint()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getQueueEndpoint()"
  nameWithType: "CloudStorageAccount.getQueueEndpoint()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Queue service for the storage account."
  syntax:
    content: "public URI getQueueEndpoint()"
    return:
      type: "java.net.URI"
      description: "A <code>java.net.URI</code> object that represents the queue endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri()"
  id: "getQueueStorageUri()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getQueueStorageUri()"
  nameWithType: "CloudStorageAccount.getQueueStorageUri()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Queue service for the storage account."
  syntax:
    content: "public StorageUri getQueueStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Queue endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint()"
  id: "getTableEndpoint()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getTableEndpoint()"
  nameWithType: "CloudStorageAccount.getTableEndpoint()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Table service for the storage account."
  syntax:
    content: "public URI getTableEndpoint()"
    return:
      type: "java.net.URI"
      description: "A <xref uid=\"com.microsoft.azure.storage.StorageUri\" data-throw-if-not-resolved=\"false\">StorageUri</xref> object that represents the Table endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri()"
  id: "getTableStorageUri()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "getTableStorageUri()"
  nameWithType: "CloudStorageAccount.getTableStorageUri()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns the endpoint for the Table service for the storage account."
  syntax:
    content: "public StorageUri getTableStorageUri()"
    return:
      type: "com.microsoft.azure.storage.StorageUri"
      description: "A <code>java.net.URI</code> object that represents the Table endpoint associated with this account."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "parse(String connectionString)"
  nameWithType: "CloudStorageAccount.parse(String connectionString)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.parse(String connectionString)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.parse*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Parses a connection string and returns a cloud storage account created from the connection string.\n\nThe connection string should be in the [Azure connection string][] format.\n\nNote that while a connection string may include a SAS token, it is often easier to use the <xref uid=\"com.microsoft.azure.storage.blob.CloudBlobContainer.CloudBlobContainer(java.net.URI)\" data-throw-if-not-resolved=\"false\">CloudBlobContainer#CloudBlobContainer(URI)</xref>, <xref uid=\"com.microsoft.azure.storage.queue.CloudQueue.CloudQueue(java.net.URI)\" data-throw-if-not-resolved=\"false\">CloudQueue#CloudQueue(URI)</xref>, <xref uid=\"com.microsoft.azure.storage.table.CloudTable.CloudTable(java.net.URI)\" data-throw-if-not-resolved=\"false\">CloudTable#CloudTable(URI)</xref> constructors directly. To do this, create a <xref uid=\"com.microsoft.azure.storage.StorageCredentialsSharedAccessSignature.StorageCredentialsSharedAccessSignature(java.lang.String)\" data-throw-if-not-resolved=\"false\">StorageCredentialsSharedAccessSignature#StorageCredentialsSharedAccessSignature(String)</xref> object with your SAS token, use the <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageCredentialsSharedAccessSignature#transformUri(URI)</xref> method on the container, queue, or table URI, and then use that URI to construct the object.\n\n\n[Azure connection string]: http://msdn.microsoft.com/library/azure/ee758697.aspx"
  syntax:
    content: "public static CloudStorageAccount parse(String connectionString)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "A <code>String</code> that represents the connection string to parse."
    return:
      type: "com.microsoft.azure.storage.CloudStorageAccount"
      description: "A <xref uid=\"com.microsoft.azure.storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\">CloudStorageAccount</xref> object that represents the cloud storage account constructed from the\n         values provided in the connection string."
  exceptions:
  - type: "java.net.URISyntaxException"
    description: "If credentials in the connection string contain an invalid key."
  - type: "java.security.InvalidKeyException"
    description: "If credentials in the connection string contain an invalid key."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.setCredentials(com.microsoft.azure.storage.StorageCredentials)"
  id: "setCredentials(com.microsoft.azure.storage.StorageCredentials)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "setCredentials(StorageCredentials credentials)"
  nameWithType: "CloudStorageAccount.setCredentials(StorageCredentials credentials)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.setCredentials(StorageCredentials credentials)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.setCredentials*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Sets the StorageCredentials to use with this account. Warning: for internal use only, as updating the credentials to a new account can invalidate pre-existing objects."
  syntax:
    content: "protected void setCredentials(StorageCredentials credentials)"
    parameters:
    - id: "credentials"
      type: "com.microsoft.azure.storage.StorageCredentials"
      description: "the credentials to set"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.toString()"
  id: "toString()"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "CloudStorageAccount.toString()"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.toString()"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a connection string for this storage account, without sensitive data."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the connection string for this storage account, without sensitive\n         data."
- uid: "com.microsoft.azure.storage.CloudStorageAccount.toString(boolean)"
  id: "toString(boolean)"
  parent: "com.microsoft.azure.storage.CloudStorageAccount"
  langs:
  - "java"
  name: "toString(boolean exportSecrets)"
  nameWithType: "CloudStorageAccount.toString(boolean exportSecrets)"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.toString(boolean exportSecrets)"
  overload: "com.microsoft.azure.storage.CloudStorageAccount.toString*"
  type: "Method"
  package: "com.microsoft.azure.storage"
  summary: "Returns a connection string for this storage account, optionally with sensitive data."
  syntax:
    content: "public String toString(boolean exportSecrets)"
    parameters:
    - id: "exportSecrets"
      type: "boolean"
      description: "<code>true</code> to include sensitive data in the string;\n            otherwise, <code>false</code>."
    return:
      type: "java.lang.String"
      description: "A <code>String</code> that represents the connection string for this storage account,\n         optionally with sensitive data."
references:
- uid: "com.microsoft.azure.storage.StorageCredentials"
  name: "StorageCredentials"
  nameWithType: "StorageCredentials"
  fullName: "com.microsoft.azure.storage.StorageCredentials"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount*"
  name: "CloudStorageAccount"
  nameWithType: "CloudStorageAccount.CloudStorageAccount"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.CloudStorageAccount"
  package: "com.microsoft.azure.storage"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.microsoft.azure.storage.StorageUri"
  name: "StorageUri"
  nameWithType: "StorageUri"
  fullName: "com.microsoft.azure.storage.StorageUri"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount*"
  name: "getDevelopmentStorageAccount"
  nameWithType: "CloudStorageAccount.getDevelopmentStorageAccount"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getDevelopmentStorageAccount"
  package: "com.microsoft.azure.storage"
- uid: "java.net.URISyntaxException"
  spec.java:
  - uid: "java.net.URISyntaxException"
    name: "URISyntaxException"
    fullName: "java.net.URISyntaxException"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.parse*"
  name: "parse"
  nameWithType: "CloudStorageAccount.parse"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.parse"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.analytics.CloudAnalyticsClient"
  name: "CloudAnalyticsClient"
  nameWithType: "CloudAnalyticsClient"
  fullName: "com.microsoft.azure.storage.analytics.CloudAnalyticsClient"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient*"
  name: "createCloudAnalyticsClient"
  nameWithType: "CloudStorageAccount.createCloudAnalyticsClient"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudAnalyticsClient"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.blob.CloudBlobClient"
  name: "CloudBlobClient"
  nameWithType: "CloudBlobClient"
  fullName: "com.microsoft.azure.storage.blob.CloudBlobClient"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient*"
  name: "createCloudBlobClient"
  nameWithType: "CloudStorageAccount.createCloudBlobClient"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudBlobClient"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.file.CloudFileClient"
  name: "CloudFileClient"
  nameWithType: "CloudFileClient"
  fullName: "com.microsoft.azure.storage.file.CloudFileClient"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient*"
  name: "createCloudFileClient"
  nameWithType: "CloudStorageAccount.createCloudFileClient"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudFileClient"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.queue.CloudQueueClient"
  name: "CloudQueueClient"
  nameWithType: "CloudQueueClient"
  fullName: "com.microsoft.azure.storage.queue.CloudQueueClient"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient*"
  name: "createCloudQueueClient"
  nameWithType: "CloudStorageAccount.createCloudQueueClient"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudQueueClient"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.table.CloudTableClient"
  name: "CloudTableClient"
  nameWithType: "CloudTableClient"
  fullName: "com.microsoft.azure.storage.table.CloudTableClient"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient*"
  name: "createCloudTableClient"
  nameWithType: "CloudStorageAccount.createCloudTableClient"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.createCloudTableClient"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint*"
  name: "getBlobEndpoint"
  nameWithType: "CloudStorageAccount.getBlobEndpoint"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getBlobEndpoint"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri*"
  name: "getBlobStorageUri"
  nameWithType: "CloudStorageAccount.getBlobStorageUri"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getBlobStorageUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getCredentials*"
  name: "getCredentials"
  nameWithType: "CloudStorageAccount.getCredentials"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getCredentials"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix*"
  name: "getEndpointSuffix"
  nameWithType: "CloudStorageAccount.getEndpointSuffix"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getEndpointSuffix"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint*"
  name: "getFileEndpoint"
  nameWithType: "CloudStorageAccount.getFileEndpoint"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getFileEndpoint"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri*"
  name: "getFileStorageUri"
  nameWithType: "CloudStorageAccount.getFileStorageUri"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getFileStorageUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint*"
  name: "getQueueEndpoint"
  nameWithType: "CloudStorageAccount.getQueueEndpoint"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getQueueEndpoint"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri*"
  name: "getQueueStorageUri"
  nameWithType: "CloudStorageAccount.getQueueStorageUri"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getQueueStorageUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint*"
  name: "getTableEndpoint"
  nameWithType: "CloudStorageAccount.getTableEndpoint"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getTableEndpoint"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri*"
  name: "getTableStorageUri"
  nameWithType: "CloudStorageAccount.getTableStorageUri"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.getTableStorageUri"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.StorageException"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.microsoft.azure.storage.StorageException"
- uid: "com.microsoft.azure.storage.SharedAccessAccountPolicy"
  name: "SharedAccessAccountPolicy"
  nameWithType: "SharedAccessAccountPolicy"
  fullName: "com.microsoft.azure.storage.SharedAccessAccountPolicy"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature*"
  name: "generateSharedAccessSignature"
  nameWithType: "CloudStorageAccount.generateSharedAccessSignature"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.generateSharedAccessSignature"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.toString*"
  name: "toString"
  nameWithType: "CloudStorageAccount.toString"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.toString"
  package: "com.microsoft.azure.storage"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.setCredentials*"
  name: "setCredentials"
  nameWithType: "CloudStorageAccount.setCredentials"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.setCredentials"
  package: "com.microsoft.azure.storage"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.storage.CloudStorageAccount.ConnectionStringFilter"
  name: "CloudStorageAccount.ConnectionStringFilter"
  nameWithType: "CloudStorageAccount.ConnectionStringFilter"
  fullName: "com.microsoft.azure.storage.CloudStorageAccount.ConnectionStringFilter"
